{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/Util/ng-select.directive.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/auth.guard.ts","./src/app/common/auth.service.ts","./src/app/common/constant.ts","./src/app/common/excel.service.ts","./src/app/common/flexy-column.component.ts","./src/app/common/global.ts","./src/app/layout/admin-layout/admin-layout.component.ts","./src/app/layout/admin-layout/admin-layout.component.html","./src/app/layout/login-layout/login-layout.component.ts","./src/app/layout/login-layout/login-layout.component.html","./src/app/login/IP-service.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/nav-bar/nav-bar.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/services/rest.service.ts","./src/app/user-management/role/role.component.ts","./src/app/user-management/role/role.component.html","./src/app/user-management/ui-role/ui-role.component.ts","./src/app/user-management/ui-role/ui-role.component.html","./src/app/user-management/user/user.component.ts","./src/app/user-management/user/user.component.html","./src/app/validators/requiredmatch.validator.ts","./src/app/wizard/wizard.component.ts","./src/app/wizard/wizard.component.html","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$","ignored|D:\\Newel\\LTC\\Project\\Git\\LtcDev\\LTC-UI\\node_modules\\xlsx|crypto","ignored|D:\\Newel\\LTC\\Project\\Git\\LtcDev\\LTC-UI\\node_modules\\xlsx|fs","ignored|D:\\Newel\\LTC\\Project\\Git\\LtcDev\\LTC-UI\\node_modules\\xlsx|stream"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;;;;;ACZmE;AAEpC;AAG+B;AACN;;;;AAIjD,MAAM,yBAAyB;IAClC,YAAoB,QAA2C;QAA3C,aAAQ,GAAR,QAAQ,CAAmC;IAC/D,CAAC;IACD,YAAY,CAAC,OAA2B,EAAE,IAAwC;QAC9E,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SACxD;aAAM;YACH,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC1F;IACL,CAAC;CACJ;AAOM,MAAM,iCAAiC;IA0D1C,YACY,IAAuB,EACJ,SAAoB,EAC3B,WAAmB,EACnB,gBAAoC;;QAHhD,SAAI,GAAJ,IAAI,CAAmB;QACJ,cAAS,GAAT,SAAS,CAAW;QAC3B,gBAAW,GAAX,WAAW,CAAQ;QACnB,qBAAgB,GAAhB,gBAAgB,CAAoB;QA5DpC,OAAE,GAAG,aAAa,iCAAiC,CAAC,MAAM,EAAE,EAAE,CAAC;QACjD,gBAAW,GAAG,EAAE,CAAC;QAQvD,eAAU,GAAG,KAAK,CAAC;QAEX,8BAAyB,GAAsB,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QAC3F,wBAAwB;QACxB,wBAAwB;QAExB,iBAAY,GAAG,IAAI,yCAAO,EAAQ,CAAC;QACnC,YAAO,GAAG,KAAK,CAAC;QAoBR,cAAS,GAAG,KAAK,CAAC;QAQlB,cAAS,GAAG,KAAK,CAAC;QAkBtB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,sEAAc,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACpE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,sEAAc,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACnE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAGH,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;YAC3E,UAAI,CAAC,SAAS,CAAC,aAAa,0CAAE,IAAI,CAAC,sEAAc,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE;gBACnE,MAAM,QAAQ,GAAG,CAAC,KAAK,UAAU,CAAC;gBAClC,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;oBAC7B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;oBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;iBAC5B;YACL,CAAC,CAAC,CAAC;YACH,UAAI,CAAC,SAAS,CAAC,YAAY,0CAAE,IAAI,CAAC,sEAAc,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE;gBAClE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,sEAAc,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBACrE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAvFD,IAAI,KAAK;QACL,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC;eACrE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IACrE,CAAC;IAUD,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAClG,CAAC;IAED,IACI,WAAW,KAAa,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACvD,IAAI,WAAW,CAAC,KAAa;QACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAGD,IACI,QAAQ,KAAc,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAClD,IAAI,QAAQ,CAAC,KAAc;QACvB,IAAI,CAAC,SAAS,GAAG,4EAAqB,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAGD,IACI,QAAQ,KAAc,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAClD,IAAI,QAAQ,CAAC,KAAc;QACvB,IAAI,CAAC,SAAS,GAAG,4EAAqB,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAGD,IACI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACD,IAAI,KAAK,CAAC,CAAM;QACZ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAyCD,WAAW,KAAK,CAAC;IAEjB,SAAS;QAEL,sFAAsF;QACtF,uFAAuF;QACvF,6FAA6F;QAC7F,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE5B,CAAC;IAED,gBAAgB;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAAC;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,yBAAyB,CAAC;QACzE,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAsB,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9E,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAEvD,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACvB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC5B;IACL,CAAC;IAED,iBAAiB,CAAC,GAAa;QAC3B,IAAI,GAAG,EAAE;YACL,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpC;IACL,CAAC;IAED,gBAAgB,CAAC,KAAiB;QAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;QAC3C,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;YACnD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpB;IAEL,CAAC;;AApIM,wCAAM,GAAG,CAAC,CAAC;kHADT,iCAAiC;+HAAjC,iCAAiC;;;2OAF/B,CAAC,EAAE,OAAO,EAAE,6EAAmB,EAAE,WAAW,EAAE,iCAAiC,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACxB1C;AACP;AACoC;AACA;AAC3B;AACa;AACA;AACQ;AAC9E,8DAA8D;AAC9D,+EAA+E;AACnB;;;AAE5D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAC;IAEvD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,6FAAoB;QAC/B,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;YACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAc,EAAE;SAC7C;KACF;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,6FAAoB;QAC/B,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAe,EAAE;YAC7C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+EAAa,EAAE;YAC1C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+EAAa,EAAE;YAC1C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,uFAAe,EAAE;YACpD,oGAAoG;SACrG;QACD,WAAW,EAAE,CAAC,yDAAS,CAAC;KACzB;CAEF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;AClCjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;0GAAZ,YAAY;QCLzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDmC;AACR;AAEF;AACT;AACgC;AAE/E,kBAAkB;AAC2C;AACJ;AACF;AACc;AACJ;AACD;AACT;AACE;AACA;AACW;AACf;AACuB;AACjB;AACA;AACN;AACS;AACT;AACM;AACN;AACU;AACO;AACf;AACF;AACuB;AACR;AACX;AACE;AACG;AACP;AACF;AACU;AAE/D,aAAa;AAC2C;AAExD,cAAc;AACwC;AAEtD,qBAAqB;AACyC;AAC9D,8DAA8D;AAC9D,+EAA+E;AACnB;AACqB;AACzB;AAEd;AACe;AAC2B;AACA;AACpF,kEAAkE;AAClE,wFAAwF;AAClB;AACA;AACQ;AAE/B;;;AAyExC,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFR,wDAAY;4GADb,EAAE,YArDJ;YACP,qEAAa;YACb,iEAAgB;YAChB,0FAAuB;YACvB,mEAAgB;YAChB,SAAS;YACT,0EAAiB;YACjB,0EAAiB;YACjB,sEAAe;YACf,oEAAc;YACd,kFAAqB;YACrB,8EAAmB;YACnB,6EAAkB;YAClB,oEAAc;YACd,sEAAe;YACf,sEAAe;YACf,iFAAoB;YACpB,kEAAa;YACb,wEAAmB;YACnB,oEAAe;YACf,wEAAgB;YAChB,wEAAgB;YAChB,kEAAa;YACb,2EAAiB;YACjB,kEAAa;YACb,wEAAgB;YAChB,kEAAa;YACb,4EAAkB;YAClB,mFAAqB;YACrB,oEAAc;YACd,kEAAa;YACb,yFAAwB;YACxB,iFAAoB;YACpB,sEAAe;YACf,wEAAgB;YAChB,2EAAiB;YACjB,oEAAc;YACd,kEAAa;YACb,4EAAkB;YAElB,aAAa;YACb,mEAAgB;YAEhB,cAAc;YACd,iEAAc;YACd,wDAAW;YACX,gEAAmB;YACnB,6DAAoB,CAAC;gBACnB,OAAO,EAAE,KAAK;gBACd,iBAAiB,EAAE,IAAI;aACxB,CAAC;YACF,0DAAgB;SACjB;oIAIU,SAAS,mBArElB,wDAAY;QACZ,uEAAe;QACf,mBAAmB;QACnB,6FAAoB;QACpB,6FAAoB;QACpB,uBAAuB;QACvB,kEAAc;QACd,qEAAe;QACf,+EAAa;QACb,+EAAa;QACb,wFAAe;QACf,2FAAiC,aAGjC,qEAAa;QACb,iEAAgB;QAChB,0FAAuB;QACvB,mEAAgB;QAChB,SAAS;QACT,0EAAiB;QACjB,0EAAiB;QACjB,sEAAe;QACf,oEAAc;QACd,kFAAqB;QACrB,8EAAmB;QACnB,6EAAkB;QAClB,oEAAc;QACd,sEAAe;QACf,sEAAe;QACf,iFAAoB;QACpB,kEAAa;QACb,wEAAmB;QACnB,oEAAe;QACf,wEAAgB;QAChB,wEAAgB;QAChB,kEAAa;QACb,2EAAiB;QACjB,kEAAa;QACb,wEAAgB;QAChB,kEAAa;QACb,4EAAkB;QAClB,mFAAqB;QACrB,oEAAc;QACd,kEAAa;QACb,yFAAwB;QACxB,iFAAoB;QACpB,sEAAe;QACf,wEAAgB;QAChB,2EAAiB;QACjB,oEAAc;QACd,kEAAa;QACb,4EAAkB;QAElB,aAAa;QACb,mEAAgB;QAEhB,cAAc;QACd,iEAAc;QACd,wDAAW;QACX,gEAAmB,yDAKnB,0DAAgB;;;;;;;;;;;;;;;;;;;;AC/Hb,MAAM,SAAS;IAElB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAElC,CAAC;IAED,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,IAAI,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAE,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,GAAQ;QAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SAChB;aACG;YACA,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEM,UAAU;QACb,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,MAAM,EAAE;YAC9C,MAAM,GAAG,IAAI,CAAC;SACjB;aACI;YACD,MAAM,GAAG,KAAK,CAAC;SAClB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;;kEA9BQ,SAAS;0GAAT,SAAS,WAAT,SAAS,mBAFN,MAAM;;;;;;;;;;;;;;;;;;ACCf,MAAM,WAAW;IACxB,gBAAe,CAAC;IAEhB,MAAM;QACF,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAC5C,YAAY,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QACxC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACrC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;;sEAXY,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;ACHf,MAAM,aAAa,GAAU;IAChC,EAAC,EAAE,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtB,EAAC,EAAE,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtB,EAAC,EAAE,EAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtB,EAAC,EAAE,EAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;CAC1B,CAAC;AAEF,IAAY,QASX;AATD,WAAY,QAAQ;IAChB,0CAAU;IACV,0CAAU;IACV,0CAAU;IACV,0CAAU;IACV,0CAAU;IACV,0CAAU;IACV,0CAAU;IACV,0CAAU;AACd,CAAC,EATW,QAAQ,KAAR,QAAQ,QASnB;AAAA,CAAC;;;;;;;;;;;;;;;;;;;;;ACfsC;AACX;;AAE7B,MAAM,UAAU,GAAG,iFAAiF,CAAC;AACrG,MAAM,eAAe,GAAG,OAAO,CAAC;AAKzB,MAAM,YAAY;IAErB,gBAAgB,CAAC;IAEV,iBAAiB,CAAE,IAAW,EAAE,aAAqB;QACxD,MAAM,UAAU,GAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,UAAS,KAAK;YACvB,MAAM,OAAO,GAAO,EAAE,CAAC;YACvB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAC;gBACrB,IAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,WAAW,EAAE;oBAC7D,OAAO,CAAC,IAAI,CAAC,GAAE,KAAK,CAAC,IAAI,CAAC,CAAC;iBAC9B;aAAC;YACF,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,MAAM,SAAS,GAAmB,qDAAwB,CAAC,UAAU,CAAC,CAAC;QACvE,MAAM,QAAQ,GAAmB,EAAE,MAAM,EAAE,EAAC,MAAM,EAAG,SAAS,EAAC,EAAE,UAAU,EAAE,CAAC,MAAM,CAAC,EAAC,CAAC;QACvF,MAAM,WAAW,GAAO,uCAAU,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACrD,CAAC;IAEO,eAAe,CAAC,MAAW,EAAE,QAAgB;QACjD,MAAM,IAAI,GAAW,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;YACpC,IAAI,EAAE,UAAU;SACnB,CAAC,CAAC;QACH,8CAAgB,CAAC,IAAI,EAAE,QAAQ,GAAG,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,eAAe,CAAC,CAAC;IAC3F,CAAC;;wEAzBQ,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFT,MAAM;;;;;;;;;;;;;;;;;;ACAf,MAAM,oBAAoB;IAE7B,YAAoB,OAAkB;QAAlB,YAAO,GAAP,OAAO,CAAW;QAGtC,YAAO,GAAG,KAAK,CAAC;QAChB,uBAAkB,GAAY,CAAC,CAAC;QAChC,WAAM,GAAW,CAAC,CAAC;QACnB,eAAU,GAAW,CAAC,CAAC;QACvB,oBAAe,GAAW,KAAK,CAAC;QAKhC,qBAAgB,GAAc,EAAE,CAAC;IAZQ,CAAC;IAQ1C,kCAAkC;IAClC,gCAAgC;IAChC,kBAAkB,KAAI,CAAC;IAAC,CAAC;IACzB,gBAAgB,KAAI,CAAC;IAAA,CAAC;IAGtB,QAAQ;IAER,CAAC;IAED,WAAW,KAAG,CAAC;IAEf,cAAc,CAAE,UAAkB,EAAE,OAAY;QAC5C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,OAAO,CAAC,CAAC,MAAU,EAAE,EAAE;YAC3B,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,GAAE,QAAQ,CAAC;QACzC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAU,EAAE,EAAE;YAC3B,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB,CAAC,OAAW;QAC3B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;QACtB,OAAO,CAAC,OAAO,CAAC,CAAC,MAAU,EAAE,KAAS,EAAE,EAAE;YAC1C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,gBAAgB,CAAC;IACjC,CAAC;IAEM,cAAc,CAAE,KAAU,EAAE,KAAa,EAAE,WAAgB;QAC9D,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC;QAC3C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,aAAa,CAAC,KAAS,EAAE,KAAS,EAAE,WAAgB;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QACtD,IAAG,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YAClH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/B;aAAI;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAChC;IACL,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,WAAgB;QACvC,MAAM,SAAS,GAAG,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACxC,CAAC;IAED,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE;YAC7E,IAAG,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAC;gBAC7B,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/F,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACnC,IAAG,IAAI,CAAC,kBAAkB,KAAK,KAAK,IAAI,KAAK,GAAG,EAAE,EAAC;oBAC/C,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;iBAC5C;aACJ;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE;YACzE,IAAG,IAAI,CAAC,OAAO,EAAC;gBACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB,CAAC,KAAa,EAAE,KAAa;QAE9C,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;QAC1C,MAAM,EAAE,GAAG,KAAK,GAAG,QAAQ,CAAC;QAC5B,IAAG,EAAE,KAAK,CAAC,EAAC;YACR,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YAC3C,IAAG,QAAQ,GAAG,EAAE,EAAC;gBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;SACJ;IACL,CAAC;IAED,cAAc,CAAC,MAAW;QACtB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5F,SAAS,CAAC,OAAO,CAAC,CAAC,EAAM,EAAE,EAAE;YACzB,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;;wFA7GQ,oBAAoB;kHAApB,oBAAoB;;;;;;;;;;;;;;;;;;ACH1B,MAAM,MAAM;IAHnB;QAKY,gBAAW,GAAW,wBAAwB,CAAC;QAE/C,oBAAe,GAAW,EAAE,CAAC;QAE7B,oBAAe,GAAW,EAAE,CAAC;QAE7B,qBAAgB,GAAW,EAAE,CAAC;KAqCzC;IAnCG,cAAc,KAAI,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAE5C,QAAQ,CAAC,IAAQ;QACb,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAE,CAAC,CAAC;QAE9D,KAAI,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,EAAC;YAC7C,IAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAC;gBAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;aACzB;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;;4DArBQ,MAAM;uGAAN,MAAM,WAAN,MAAM,mBAFH,MAAM;;;;;;;;;;;;;;;;;;;;;;;;ACGf,MAAM,oBAAoB;IAE/B,gBAAe,CAAC;IAEhB,QAAQ,KAAG,CAAC;;wFAJD,oBAAoB;kHAApB,oBAAoB;QCDzB,4EAA0C;QAC1C,2EAA+B;;;;;;;;;;;;;;;;;;;;;ACChC,MAAM,oBAAoB;IAE7B,gBAAe,CAAC;IAChB,QAAQ,KAAG,CAAC;;wFAHH,oBAAoB;kHAApB,oBAAoB;QCPjC,oEAA+C;QAC/C,2EAA+B;;;;;;;;;;;;;;;;;;;;;ACKxB,MAAM,gBAAgB;IAE3B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IACjC,YAAY;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;IAC5D,CAAC;;gFANU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;;;;;;;;;;;;;;;;;;ICUhD,4EAAkD;IAC9C,yEAAa;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IAC1C,4DAAY;;;IACZ,4EAAoF;IAChF,2FACJ;IAAA,4DAAY;;;IACZ,4EAAsF;IAClF,4GACJ;IAAA,4DAAY;;;IAOZ,4EAAkD;IAC9C,wEAAY;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IACzC,4DAAY;;;IACZ,4EAAsF;IAClF,4GACJ;IAAA,4DAAY;;ADjBzB,MAAM,cAAc;IAuBvB,YAAoB,WAAwB,EAAU,KAAqB,EAAU,MAAc,EACvF,MAAc,EAAU,WAAwB,EACjD,MAAiB,EAAU,IAAiB,EAAU,UAAsB,EAC3E,EAAoB;QAHZ,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACvF,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QACjD,WAAM,GAAN,MAAM,CAAW;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,eAAU,GAAV,UAAU,CAAY;QAC3E,OAAE,GAAF,EAAE,CAAkB;QAnBhC,SAAI,GAAG,IAAI,CAAC;QACZ,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAY,KAAK,CAAC;QAC9B,oBAAe,GAAY,KAAK,CAAC;QACjC,WAAM,GAAY,KAAK,CAAC;QAExB,iBAAY,GAAY,KAAK,CAAC;QAC9B,gBAAW,GAAY,KAAK,CAAC;QAC7B,iBAAY,GAAW,cAAc,CAAC;QACtC,kBAAa,GAAW,eAAe,CAAC;QACxC,mBAAmB;QAEnB,mBAAc,GAAY,KAAK,CAAC;QAChC,cAAS,GAAG,KAAK,CAAC;IAMkB,CAAC;IAErC,QAAQ;QACJ,YAAY;QACZ,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,eAAe,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACrG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;SACnE,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,iBAAiB,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACvG,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,2BAA2B,CAAC,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/G,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,SAAS,CAAC,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9F,EAAE,EAAE,CAAC,EAAE,CAAC;SACX,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAChD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,SAAS,CAAC,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9F,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9D,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAE1C,iEAAiE;QACjE,sEAAsE;QACtE,6DAA6D;QAC7D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAGD,cAAc;QACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,SAAS;QACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAElE,IAAI,EAAE,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7D,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAE7D,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAE/D,SAAS;;QACL,IAAI,KAAK,GAAG;YACR,QAAQ,EAAE,UAAI,CAAC,QAAQ,0CAAE,KAAK;YAC9B,QAAQ,EAAE,UAAI,CAAC,QAAQ,0CAAE,KAAK;YAC9B,QAAQ,EAAE,UAAI,CAAC,QAAQ,0CAAE,KAAK;YAC9B,OAAO,EAAE,UAAI,CAAC,OAAO,0CAAE,KAAK;YAC5B,KAAK,EAAE,UAAI,CAAC,KAAK,0CAAE,KAAK;YACxB,QAAQ,EAAE,UAAI,CAAC,QAAQ,0CAAE,KAAK;YAC9B,EAAE,EAAE,UAAI,CAAC,EAAE,0CAAE,KAAK;SACrB,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,wBAAwB,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACrG,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,qBAAqB;gBACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,sBAAsB,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;oBAC1H,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;oBAC3C,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBAChE,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;aACN;iBACI;gBACD,yEAAyE;aAC5E;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,KAAK;;QACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACrC,UAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC5B,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC3B,UAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC5B,UAAI,CAAC,KAAK,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,gBAAgB;QACZ,QAAQ,CAAC;QAET,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAC1C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC;YACxB,8BAA8B;QAClC,CAAC,CAAC,CAAC;QAEH,8BAA8B;QAE9B,wBAAwB;QACxB,sCAAsC;QACtC,6BAA6B;QAC7B,gCAAgC;QAChC,uBAAuB;QACvB,SAAS;QACT,KAAK;QACL,4CAA4C;QAE5C,0GAA0G;QAC1G,uBAAuB;QACvB,gFAAgF;QAChF,QAAQ;QACR,aAAa;QACb,iFAAiF;QACjF,QAAQ;QACR,MAAM;IACV,CAAC;IAED,qBAAqB;;QACjB,QAAQ,CAAC;QACT,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC,CAAC;QACpE,IAAI,YAAY,KAAI,UAAI,CAAC,KAAK,0CAAE,KAAK,GAAE;YACnC,sFAAsF;SACzF;aACI;YACD,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC;YAE3D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,4BAA4B,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC9G,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,sBAAsB,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;wBACtG,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;wBAC3C,YAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBAChE,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;wBAEjE,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;wBACvC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;wBAExC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACzC,CAAC,CAAC,CAAC;iBACN;qBACI;oBACD,wEAAwE;iBAC3E;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC;;4EA/KQ,cAAc;4GAAd,cAAc;;;;;;QCjB3B,8EAAwB;QAEpB,6EAAyE;QACrE,yEAA8B;QAE1B,yEAC6D;QAEzD,oEAA0E;QAC1E,gEAAI;QAEJ,oFAA4D;QACxD,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,0EAA0E;QAC1E,wHAEY;QACZ,wHAEY;QACZ,wHAEY;QAChB,4DAAiB;QAEjB,qFAA4D;QACxD,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,wEACa;QACb,wHAEY;QACZ,wHAEY;QAChB,4DAAiB;QAErB,4DAAM;QAEN,2EAC6D;QAEzD,2EAAyD;QACrD,8EAAsI;QAAtB,uIAAS,eAAW,IAAC;QAClI,mEACH;QAAA,4DAAS;QAEb,4DAAM;QAEV,4DAAM;QAEV,4DAAM;QACV,4DAAO;QAEX,4DAAW;;QApDiC,0DAAgC;QAAhC,6FAAgC;QAC/D,0DAAwB;QAAxB,qFAAwB;QAKhB,0DAA0B;QAA1B,gJAA0B;QAMf,0DAAoC;QAApC,iIAAoC;QAGpC,0DAAsE;QAAtE,wMAAsE;QAGtE,0DAAwE;QAAxE,0MAAwE;QAOpD,0DAAmC;QAAnC,gGAAmC;QAEvD,0DAAoC;QAApC,iIAAoC;QAGpC,0DAAwE;QAAxE,0MAAwE;QAWZ,0DAAuC;QAAvC,oGAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChBnH,6EAAoG;IAChG,4EAAgB;IAAA,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IACpD,4DAAS;;;;IAFqC,kFAA0B;;AChBjF,MAAM,eAAe;IAwB1B;QAtBA,cAAS,GAAe;YACtB;gBACE,KAAK,EAAE,MAAM;aACd;YACD;gBACE,KAAK,EAAE,kBAAkB;aAC1B;YACD;gBACE,KAAK,EAAE,WAAW;aACnB;YACD;gBACE,KAAK,EAAE,WAAW;aACnB;YACD;gBACE,KAAK,EAAE,UAAU;aAClB;SACF,CAAC;IAMc,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAE,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;IAClD,CAAC;;8EA9BU,eAAe;6GAAf,eAAe;QDX5B,iFAAmG;QAC/F,yEAAmC;QAC/B,oEAA0E;QAC9E,4DAAM;QAEN,yEAAmC;QAE/B,yEAA8G;QAgB1G,4EAAsE;QAClE,0EACJ;QAAA,4DAAS;QAEL,iHAES;QACT,oFAA0B;QACtB,6EAAwC;QACxC,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC3B,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACjB,4DAAS;QACT,6EAAwC;QACpC,4EAAU;QAAA,sEAAU;QAAA,4DAAW;QACnC,wEAAM;QAAA,gEAAI;QAAA,4DAAO;QACjB,4DAAS;QACT,8EAAgD;QAC5C,4EAAU;QAAA,+DAAG;QAAA,4DAAW;QACxB,wEAAM;QAAA,4EAAgB;QAAA,4DAAO;QACjC,4DAAS;QACb,4DAAW;QAIf,2EAA6E;QACzE,2EAAsE;QAAA,mEAAO;QAAA,wEAAM;QAAA,wDAAY;QAAA,4DAAO;QAAA,4DAAM;QAGhH,4DAAM;QACN,8EAA6C;QACzC,gFAAuD;QAAA,0EAAc;QAAA,4DAAW;QACpF,4DAAS;QACT,oFAA6C;QACzC,8EAAsB;QAClB,yEAAW;QACP,gFAA0B;QAAA,kEAAM;QAAA,4DAAW;QAAC,oEAChD;QAAA,4DAAI;QACR,4DAAS;QACb,4DAAW;QAKf,4DAAM;QACV,4DAAM;QACV,4DAAc;;;QAlED,0DAA0B;QAA1B,gJAA0B;QAyBd,0DAAmB;QAAnB,mFAAmB;QAqBuD,2DAAY;QAAZ,6EAAY;QAKrF,0DAA4B;QAA5B,kFAA4B;;;;;;;;;;;;;;;;;;;;;AEpD4B;AAC5C;AACe;;;AAErD,MAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,6DAAW,CAAC;QACrB,cAAc,EAAG,kBAAkB;KACtC,CAAC;CACL,CAAC;AAKK,MAAM,WAAW;IAEpB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IACzC,MAAM,CAAC,QAAgB;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,CAAC,QAAgB,EAAE,EAAS;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,QAAQ,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,QAAgB,EAAE,KAAU;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC7F,CAAC;IAED,UAAU,CAAC,QAAgB,EAAE,MAAW;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,IAAI,CAAE,0DAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,cAAc,CAAC,QAAgB,EAAE,KAAY,EAAE,EAAU;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,mBAAmB,CAAC,QAAgB,EAAE,KAAY;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAChF,CAAC;IAEO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACtD,OAAO,CAAC,KAAU,EAAkB,EAAE;YAClC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,OAAO,wCAAE,CAAC,MAAW,CAAC,CAAC;QAC3B,CAAC,CAAC;IACN,CAAC;;sEAhCQ,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZgF;AAIlC;AASnB;AAC0B;AAElB;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;;;ICT/C,6EAAsG;IAAvB,oUAAsB;IACjG,+EAAwB;IAAA,8DAAG;IAAA,4DAAW;IAAC,gEAC3C;IAAA,4DAAS;;;;IAET,6EAA0G;IAAvB,oUAAsB;IACrG,+EAAwB;IAAA,wEAAa;IAAA,4DAAW;IAAC,mEACrD;IAAA,4DAAS;;;IAuBG,uEAAqB;IAAC,mEAAO;IAAA,4DAAO;;;IADxC,yEAA8D;IAC1D,6HAAoC;IACxC,4DAAK;;;IADM,0DAAY;IAAZ,+EAAY;;;;IAMf,+EAA6F;IAAjC,ybAAgC;IAAC,iEAAM;IAAA,4DAAW;;;IAJtH,yEAAwD;IAIhD,qIAA8G;IAEtH,4DAAK;;;IAFc,0DAAY;IAAZ,+EAAY;;;IAK/B,yEAA8E;IAAC,iEAAK;IAAA,4DAAK;;;IACzF,yEAAwD;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,iFAAgB;;;IAGxE,yEAA8E;IAAC,wEAAY;IAAA,4DAAK;;;IAChG,yEAAwD;IAAA,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,iFAAgB;;;IAGxE,yEAA8E;IAAA,0EAAe;IAAA,4DAAK;;;IAClG,yEAAwD;IAAA,uDAA2B;IAAA,4DAAK;;;IAAhC,0DAA2B;IAA3B,4FAA2B;;;IAGnF,yEAA8E;IAAC,qEAAS;IAAA,4DAAK;;;IAC7F,yEAAwD;IAAA,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,qFAAoB;;;IAEhF,oEAA4D;;;IAC5D,oEAAkE;;;IAGlE,yEAAkC;IAC9B,yEAAiC;IAAA,uDACZ;IAAA,4DAAK;IAC9B,4DAAK;;;;IAFgC,0DACZ;IADY,mHACZ;;;;;IAnEzC,8EAA4D;IACxD,yEAC0C;IACtC,wEAA0B;IAAA,sEAAW;IAAA,4DAAK;IAE1C,yEAAuC;IACnC,0HAES;IAET,0HAES;IACb,4DAAM;IACV,4DAAM;IAEN,yEAC0C;IAEtC,oFAA2G;IACvG,4EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,gFAA0E;IAA1D,uUAA6B;IAA7C,4DAA0E;IAC1E,gFAAoB;IAAA,yEAAa;IAAA,4DAAW;IAChD,4DAAiB;IAErB,4DAAM;IAEN,2EACsF;IAElF,2EAA8B;IAC1B,6EAAqE;IAEjE,6EAAgC;IAC5B,qHAEK;IACL,qHAMK;IACT,qEAAe;IACf,6EAAkC;IAC9B,qHAAyF;IACzF,qHAA6E;IACjF,qEAAe;IACf,6EAAkC;IAC9B,qHAAgG;IAChG,qHAA6E;IACjF,qEAAe;IACf,6EAA6C;IACzC,qHAAkG;IAClG,qHAAwF;IAC5F,qEAAe;IACf,6EAAsC;IAClC,qHAA6F;IAC7F,qHAAiF;IACrF,qEAAe;IACf,qHAA4D;IAC5D,qHAAkE;IAGlE,qHAGK;IACT,4DAAQ;IACZ,4DAAM;IAEV,4DAAM;IACN,gFACgB;IACpB,4DAAW;;;IArE0C,0DAAa;IAAb,gFAAa;IAIV,0DAAc;IAAd,iFAAc;IAqBzC,2DAAyB;IAAzB,yFAAyB;IA8BlB,2DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;IAWxD,0DAAoC;IAApC,kJAAoC;;;IA4BnC,4EAA8C;IAC1C,oEAAQ;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IACrC,4DAAY;;;IACZ,4EAA4E;IACxE,sFACJ;IAAA,4DAAY;;;IACZ,4EAA+C;IAC3C,sGACJ;IAAA,4DAAY;;;IAoBZ,4EAA8C;IAC1C,2EAAe;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IAC5C,4DAAY;;;IACZ,4EAA4E;IACxE,6FACJ;IAAA,4DAAY;;;IACZ,4EAA+C;IAC3C,8GACJ;IAAA,4DAAY;;;;IA5DhC,8EAA8D;IAG1D,0EAC0C;IACtC,wEAA0B;IAAA,sEAAW;IAAA,4DAAK;IAC9C,4DAAM;IAEN,+EAA+D;IAE3D,qFAAkD;IAC9C,uEAAiD;IACrD,4DAAiB;IAEjB,0EAC0C;IAEtC,0EAE6D;IAEzD,sFAAyC;IACrC,6EAAW;IAAA,gEAAI;IAAA,4DAAY;IAC3B,wEAA4E;IAC5E,mIAEY;IACZ,mIAEY;IACZ,mIAEY;IAChB,4DAAiB;IAEjB,+EAAiC;IAC7B,oFAAgD;IAAC,+EAAkB;IAAA,4DAAe;IACtF,4DAAU;IAEV,+EAAiC;IAC7B,oFAAyC;IAAC,uEAAU;IAAA,4DAAe;IACvE,4DAAU;IAEd,4DAAM;IAEN,2EAE6D;IAEzD,sFAAyC;IACrC,6EAAW;IAAA,uEAAW;IAAA,4DAAY;IAClC,2EAA4F;IAC5F,mIAEY;IACZ,mIAEY;IACZ,mIAEY;IAChB,4DAAiB;IAErB,4DAAM;IAEV,4DAAM;IAEN,2EAC0C;IAEtC,0EAAuC;IAEnC,8EACuD;IAArB,yTAAoB;IAClD,gFAAwB;IAAA,gEAAI;IAAA,4DAAW;IAAC,kEAC5C;IAAA,4DAAS;IAET,8EAAuG;IAArB,yTAAoB;IAClG,gFAAwB;IAAA,sEAAU;IAAA,4DAAW;IAAC,kEAClD;IAAA,4DAAS;IACb,4DAAM;IAEV,4DAAM;IACV,4DAAO;IAEX,4DAAW;;;IA7EiC,0DAAsB;IAAtB,sFAAsB;IAgBlC,2DAAgC;IAAhC,+HAAgC;IAGhC,0DAA8D;IAA9D,oMAA8D;IAG9D,0DAAiC;IAAjC,gIAAiC;IAsBjC,2DAAgC;IAAhC,+HAAgC;IAGhC,0DAA8D;IAA9D,oMAA8D;IAG9D,0DAAiC;IAAjC,gIAAiC;IAe7C,0DAA6B;IAA7B,6FAA6B;;ADhI1C,MAAM,aAAa;IAyBtB,iBAAiB;IAEjB,kCAAkC;IAClC,qBAAqB;IACrB,8FAA8F;IAC9F,+EAA+E;IAC/E,KAAK;IAEL,YAAY,QAAkB,EAAU,WAAwB,EAAU,IAAiB,EAAU,KAAqB,EAAU,MAAc,EACtI,MAAc,EAAU,YAA0B;QADtB,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACtI,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAc;QA9B9D,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,KAAK,CAAC;QAK5B,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAC1B,WAAM,GAAY,KAAK,CAAC;QAQxB,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAC,UAAU,CAAC,CAAC;QAe9E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,QAAQ;QAEJ,6EAA6E;QAE7E,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAClE,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YACxB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACnC,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,mCAAmC,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACrH,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,mCAAmC,CAAC,EAAE,gEAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;YACtH,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,eAAe,EAAE,CAAC,EAAE,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAE,CAAC,CAAC;IAC1E,CAAC;IAED,IAAI,EAAE,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACxD,IAAI,eAAe,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAEtE,WAAW;QACP,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAEvF,IAAI,SAAS,GAAO,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAW,EAAE,EAAE;gBAC9B,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI;oBACvE,eAAe,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;oBACvD,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,qCAAqC;IACrC,iEAAiE;IACjE,IAAI;IAEJ,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAEH,UAAU;;QACN,wBAAwB;QACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAChC,UAAI,CAAC,IAAI,0CAAE,MAAM,EAAE,CAAC;QACpB,UAAI,CAAC,EAAE,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtB,UAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,UAAU,CAAC,EAAU;QAEjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,mBAAmB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;;YAE9F,UAAI,CAAC,EAAE,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChC,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,UAAI,CAAC,IAAI,0CAAE,OAAO,EAAE,CAAC;YACrB,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,UAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,UAAI,CAAC,eAAe,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACN,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC1E,mFAAmF;IACvF,CAAC;IAED,eAAe;QACX,4FAA4F;IAChG,CAAC;IAED,cAAc,CAAC,KAAU,EAAE,KAAa;QACpC,kEAAkE;IACtE,CAAC;IAGD,QAAQ,CAAC,KAAS;QACd,4FAA4F;IAChG,CAAC;IAEyC,QAAQ,CAAC,KAAoB;QAEnE,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,qBAAqB;SACxB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED,QAAQ;;QACJ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,0BAA0B,EAAE,UAAI,CAAC,IAAI,0CAAE,KAAK,CAAC,QAAQ,GAAG,IAAI,EAAE,EAClH,CAAC,WAAI,CAAC,EAAE,0CAAE,KAAK,MAAK,EAAE,CAAC,CAAC,CAAC,UAAI,CAAC,EAAE,0CAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;;YACpE,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,uEAAuE;aAC1E;iBACI;gBACD,IAAI,KAAK,GAAQ;oBACb,EAAE,EAAE,UAAI,CAAC,EAAE,0CAAE,KAAK;oBAClB,IAAI,EAAE,UAAI,CAAC,IAAI,0CAAE,KAAK,CAAC,IAAI,EAAE;oBAC7B,IAAI,EAAE,UAAI,CAAC,IAAI,0CAAE,KAAK,CAAC,IAAI,EAAE;oBAC7B,QAAQ,EAAE,UAAI,CAAC,QAAQ,0CAAE,KAAK;oBAC9B,eAAe,EAAE,UAAI,CAAC,eAAe,0CAAE,KAAK;oBAC5C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE;oBAC5B,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;iBAC9C,CAAC;gBACF,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,IAAI,WAAI,CAAC,EAAE,0CAAE,KAAK,KAAI,EAAE,EAAE;oBACtB,MAAM,GAAG,iBAAiB,CAAC;iBAC9B;qBACI;oBACD,MAAM,GAAG,iBAAiB,CAAC;iBAC9B;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,MAAM,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;oBACnF,IAAI,IAAI,CAAC,OAAO,EAAE;wBACd,wEAAwE;qBAC3E;yBACI;wBACF,wEAAwE;qBAC1E;oBACD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACX,CAAC;;0EA3MQ,aAAa;2GAAb,aAAa;0EAMqB,qDAAU;;kEAY1C,gFAAoB;kEAIpB,sEAAY;kEACZ,4DAAO;;;;;;;;;6IAvBT,oBAAgB,qJAAhB,oBAAgB;;QCzB7B,0EAAoB;QAGpB,oHA2EW;QAEX,oHAqFW;;QAlKA,0DAAc;QAAd,8EAAc;QA6Ed,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EqE;AAKrC;AAC3D,0DAA0D;AACT;AACE;AACqB;AACxB;;;;;;;;;;;;;;;;;;;;;;ICY5B,4EAAqE;;;;IACrE,yEAGU;;;IAHD,sNACsC;;;IAK3C,sFAA2D;IAAC,qEAAS;IAAA,4DAAkB;;;IACvF,+EAAgG;IAC5F,qFAAkD;IAC9C,uEAAmD;IACnD,uEAAuD;IAC3D,4DAAiB;IACjB,uEAAkE;IACtE,4DAAW;;;IAN4C,oFAAuB;;;IAU9E,sFAA2D;IAAC,mEAAO;IAAA,4DAAkB;;;IACrF,+EAAgG;IAC5F,kFACmB;IACvB,4DAAW;;;;IAH4C,oFAAuB;IACxD,0DAA0B;IAA1B,uFAA0B;;;IAMhD,sFAA2D;IAAC,kEAAM;IAAA,4DAAkB;;;IACpF,+EAAgG;IAC5F,kFACmB;IACvB,4DAAW;;;;IAH4C,oFAAuB;IACxD,0DAAyB;IAAzB,sFAAyB;;;IAM/C,sFAA2D;IAAC,oEAAQ;IAAA,4DAAkB;;;IACtF,+EAAgG;IAC5F,kFACmB;IACvB,4DAAW;;;;IAH4C,oFAAuB;IACxD,0DAA2B;IAA3B,wFAA2B;;;IAMjD,sFAA2D;IAAC,iEAAK;IAAA,4DAAkB;;;IACnF,+EAAgG;IAC5F,kFACmB;IACvB,4DAAW;;;;IAH4C,oFAAuB;IACxD,0DAAwB;IAAxB,qFAAwB;;;IAM9C,sFAA2D;IAAC,mEAAO;IAAA,4DAAkB;;;IACrF,+EAAgG;IAC5F,kFACmB;IACvB,4DAAW;;;;IAH4C,oFAAuB;IACxD,0DAA0B;IAA1B,uFAA0B;;;IAMhD,sFAA2D;IAAC,mEAAO;IAAA,4DAAkB;;;IACrF,+EAAgG;IAC5F,kFACmB;IACvB,4DAAW;;;;IAH4C,oFAAuB;IACxD,0DAA0B;IAA1B,uFAA0B;;;IAjEhE,yEAC6D;IAEzD,0EAA8B;IAC1B,oFAAwF;IACpF,yIAAqE;IACrE,2HAGU;IAEV,4EAAoC;IAChC,2IAAuF;IACvF,6HAMW;IACf,qEAAe;IAEf,4EAAoC;IAChC,6IAAqF;IACrF,+HAGW;IACf,qEAAe;IAEf,6EAAmC;IAC/B,6IAAoF;IACpF,+HAGW;IACf,qEAAe;IAEf,6EAAqC;IACjC,6IAAsF;IACtF,+HAGW;IACf,qEAAe;IAEf,6EAAkC;IAC9B,6IAAmF;IACnF,+HAGW;IACf,qEAAe;IAEf,6EAAoC;IAChC,6IAAqF;IACrF,+HAGW;IACf,qEAAe;IAEf,6EAAoC;IAChC,6IAAqF;IACrF,+HAGW;IACf,qEAAe;IAEnB,4DAAY;IAChB,4DAAM;IAEV,4DAAM;;;IArEoB,0DAAyB;IAAzB,yFAAyB;IACtB,0DAAiC;IAAjC,oGAAiC;IAGX,0DAA0B;IAA1B,qGAA0B;;;;IAqE7E,yEAC0C;IAEtC,0EAAuC;IAEnC,6EAA6G;IAA7B,8TAA4B;IACxG,+EAAwB;IAAA,+DAAI;IAAA,4DAAW;IAAC,iEAC5C;IAAA,4DAAS;IAEb,4DAAM;IAEV,4DAAM;;AD5EP,MAAM,eAAe;IA6BxB,YAAoB,WAAwB,EAAU,IAAiB,EAAU,KAAqB,EAAU,MAAc,EAClH,MAAc;QADN,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAClH,WAAM,GAAN,MAAM,CAAQ;QA5B1B,WAAW;QACX,8BAA8B;QAC9B,6BAA6B;QAC7B,OAAO;QACL,iBAAY,GAAQ,EAAE,CAAC;QAGzB,oBAAe,GAAW,QAAQ,CAAC;QAGnC,qBAAgB,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAExF,wBAAmB,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjE,eAAU,GAAG,IAAI,iDAAe,CAAoB,EAAE,CAAC,CAAC;QACxD,YAAO,GAAS,EAAE,CAAC;QACnB,UAAK,GAAQ,EAAE,CAAC;QAGhB,qBAAgB,GAAG,KAAK,CAAC;QACzB,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC7C,qBAAgB,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjD,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,6EAAY,CAAC,CAAC;YAC/C,WAAW,EAAE,IAAI,CAAC,IAAI;SACzB,CAAC,CAAC;IAKH,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAE,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAgB,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAG,IAAI,CAAC,IAAI,EAAC;YACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;iBACzC,IAAI,CACD,yDAAS,CAAC,IAAI,CAAC,EACf,oDAAG,CAAC,CAAC,KAAiB,EAAE,EAAE;gBACtB,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAChE,CAAC,CAAC,CACL,CAAC;SACL;IAEL,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACzB;IACL,CAAC;IAED,MAAM,CAAC,CAAiB,EAAE,QAAkB;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAI,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,IAAI,EAAC,CAAC;QAC7D,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACvC,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YACxC,IAAI,EAAE,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YACxC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YACpD,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YAC9C,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YAC3C,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YACjD,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YACxC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;YAC9C,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,IAAI,EAAE,EAAE,CAAC;SACjD,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpB,IAAG,CAAC,QAAQ,EAAE;YAAE,IAAI,CAAC,UAAU,EAAE,CAAC;SAAC;IACvC,CAAC;IACD,UAAU;QACN,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS;QACL,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAExD,SAAS,CAAC,IAAS;;QACf,UAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,WAAW,CAAC,IAAS;QACjB,IAAG,IAAI,CAAC,IAAI,EAAC;YACT,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;iBACzC,IAAI,CACD,yDAAS,CAAC,IAAI,CAAC,EACf,oDAAG,CAAC,CAAC,KAAgB,EAAE,EAAE;gBACrB,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAChE,CAAC,CAAC,CACL,CAAC;SACL;IAEL,CAAC;IAED,YAAY,CAAC,KAAS;;QAClB,qBAAqB;QACrB,IAAG,KAAK,IAAI,SAAS,EAAC;YAClB,UAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACpC;aACG;YACA,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;SAC3C;QAED,uCAAuC;QACvC,mCAAmC;IACvC,CAAC;IAED,SAAS;;QACL,UAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5B,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAEO,YAAY,CAAC,KAAU;QAC3B,MAAM,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACjG,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,eAAe,CAAC,GAAS;QACrB,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IACtC,CAAC;IAED,WAAW;QACP,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,wBAAwB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YAC/F,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACP,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,uBAAuB,CAAC,CAAC,SAAS,CAAC,CAAE,IAAS,EAAE,EAAE;YAC9F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB;;QACZ,MAAM,SAAS,GAAG,UAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,0CAAE,KAAK,CAAC;QAChE,MAAM,KAAK,GAAQ;YACf,MAAM,EAAE,UAAI,CAAC,MAAM,0CAAE,KAAK;YAC1B,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YACpC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE;YAC5B,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;SAC9C;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,2BAA2B,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YACzG,wFAAwF;YACxF,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;YACxC,2CAA2C;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iBAAiB,CAAC,MAAU;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,yBAAyB,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACxG,IAAG,IAAI,CAAC,OAAO,IAAI,IAAI,EAAC;gBACpB,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;oBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAQ,EAAE,EAAE;wBAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;wBACnE,IAAG,SAAS,EAAC;4BACT,IAAI,CAAC,MAAM,CAAC;gCACR,IAAI,EAAG,IAAI,CAAC,EAAE;gCACd,EAAE,EAAE,IAAI,CAAC,KAAK;gCACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;gCACvB,MAAM,EAAE,SAAS,CAAC,MAAM;gCACxB,KAAK,EAAE,SAAS,CAAC,KAAK;gCACtB,OAAO,EAAE,SAAS,CAAC,OAAO;gCAC1B,IAAI,EAAE,SAAS,CAAC,IAAI;gCACpB,MAAM,EAAE,SAAS,CAAC,MAAM;gCACxB,MAAM,EAAE,SAAS,CAAC,MAAM;6BAC3B,EAAE,KAAK,CAAC,CAAC;yBACb;6BAAM;4BACH,IAAI,CAAC,MAAM,CAAE;gCACT,IAAI,EAAE,IAAI,CAAC,EAAE;gCACb,EAAE,EAAE,IAAI,CAAC,KAAK;gCACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;gCACvB,MAAM,EAAE,KAAK;gCACb,KAAK,EAAE,KAAK;gCACZ,OAAO,EAAE,KAAK;gCACd,IAAI,EAAE,KAAK;gCACX,MAAM,EAAE,KAAK;gCACb,MAAM,EAAE,KAAK;6BAChB,EAAE,KAAK,CAAC,CAAC;yBACb;oBACL,CAAC,CAAC;oBACF,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;iBACjC;qBACG;oBACA,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;iBACnC;aACJ;iBAAK;gBACF,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACV,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,SAAS,CAAC,OAAO,CAAC,CAAC,CAAK,EAAE,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC;gBACR,IAAI,EAAE,CAAC,CAAC,EAAE;gBACV,EAAE,EAAE,CAAC,CAAC,KAAK;gBACX,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,KAAK;gBACb,MAAM,EAAG,KAAK;aACjB,EAAE,KAAK,CAAC;QACb,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAEwC,QAAQ,CAAC,KAAoB;QAClE,IAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAC;YAC/C,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;IACL,CAAC;;8EAxPQ,eAAe;6GAAf,eAAe;;;;;;6IAAf,oBAAgB;;QCjC7B,8EAA2C;QAEvC,yEAC0C;QACtC,wEAA0B;QAAA,yEAAc;QAAA,4DAAK;QACjD,4DAAM;QAGN,6EAAuE;QAEnE,yEAC6D;QAEzD,oFAA2G;QACvG,4EAAW;QAAA,qEAAU;QAAA,uEAAK;QAAA,6DAAC;QAAA,4DAAM;QAAA,4DAAY;QAC7C,gFACqC;QADS,mJAAU,wBAAoB,IAAC;QACxC,4DAAY;QACrD,4DAAiB;QAErB,4DAAM;QAEN,8GAyEM;QAEN,iEAAI;QAEJ,6GAWM;QAEV,4DAAO;QAEX,4DAAW;;QAzGiC,0DAA8B;QAA9B,2FAA8B;QAOoB,0DAAkB;QAAlB,+EAAkB;QAMlG,0DAA2B;QAA3B,sFAA2B;QA6E3B,0DAA2B;QAA3B,sFAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9F2B;AAGnB;AAC0B;AAEb;AACT;AAGI;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICT/C,6EAAmG;IAApB,iUAAmB;IAC9F,+EAAwB;IAAA,8DAAG;IAAA,4DAAW;IAAC,gEAC3C;IAAA,4DAAS;;;;IAET,6EAA0G;IAAvB,oUAAsB;IACrG,+EAAwB;IAAA,wEAAa;IAAA,4DAAW;IAAC,mEACrD;IAAA,4DAAS;;;IAwBG,uEAAqB;IAAC,mEAAO;IAAA,4DAAO;;;IADxC,yEAA8E;IAC1E,6HAAoC;IACxC,4DAAK;;;IADM,0DAAY;IAAZ,+EAAY;;;;IAGnB,+EAC6B;IAA7B,ibAA4B;IAAC,iEAAM;IAAA,4DAAW;;;IAFlD,yEAAoD;IAChD,qIAC8C;IAOlD,4DAAK;;;IARU,0DAAY;IAAZ,+EAAY;;;IAY3B,yEAA8E;IAAC,oEAAQ;IAAA,4DAAK;;;IAC5F,yEAAoD;IAChD,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAGnB,yEAA8E;IAAC,yEAAa;IAAA,4DAAK;;;IACjG,yEAAoD;IAChD,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAGnB,yEAA8E;IAAC,yEAAa;IAAA,4DAAK;;;IACjG,yEAAoD;IAChD,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAGnB,yEAA8E;IAAC,gEAAI;IAAA,4DAAK;;;IACxF,yEAAoD;IAChD,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,4FACJ;;;IAGA,yEAA8E;IAAC,kEAAM;IAAA,4DAAK;;;IAC1F,yEAAwD;IACpD,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAG5B,oEAA4D;;;IAC5D,oEAAkE;;;IAGlE,yEAAkC;IAC9B,yEAAiC;IAAA,uDACZ;IAAA,4DAAK;IAC9B,4DAAK;;;;IAFgC,0DACZ;IADY,mHACZ;;;;;IApFzC,8EAA6D;IAEzD,yEAC0C;IACtC,wEAA0B;IAAA,sEAAW;IAAA,4DAAK;IAE1C,yEAAuC;IACnC,0HAES;IAET,0HAES;IACb,4DAAM;IACV,4DAAM;IAEN,yEAC0C;IAEtC,oFAA2G;IACvG,4EAAW;IAAA,kEAAM;IAAA,4DAAY;IAC7B,+EAA0E;IAA1D,uUAA6B;IAA7C,4DAA0E;IAC1E,gFAAoB;IAAA,yEAAa;IAAA,4DAAW;IAChD,4DAAiB;IAErB,4DAAM;IAEN,2EACsF;IAElF,2EAA8B;IAE1B,6EAAqE;IAEjE,6EAAgC;IAC5B,qHAEK;IACL,qHASK;IACT,qEAAe;IAEf,6EAAqC;IACjC,qHAA4F;IAC5F,qHACwB;IAC5B,qEAAe;IACf,6EAAqC;IACjC,qHAAiG;IACjG,qHACwB;IAC5B,qEAAe;IACf,6EAAqC;IACjC,qHAAiG;IACjG,qHACwB;IAC5B,qEAAe;IACf,6EAAsC;IAClC,qHAAwF;IACxF,qHAEK;IACT,qEAAe;IACf,6EAAsC;IAClC,qHAA0F;IAC1F,qHAC6B;IACjC,qEAAe;IAEf,qHAA4D;IAC5D,qHAAkE;IAGlE,qHAGK;IACT,4DAAQ;IAEZ,4DAAM;IACV,4DAAM;IAEN,gFAAsG;IAE1G,4DAAW;;;IAtF0C,0DAAa;IAAb,gFAAa;IAIV,0DAAc;IAAd,iFAAc;IAsBzC,2DAAyB;IAAzB,yFAAyB;IA6ClB,2DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;IAYxD,0DAAoC;IAApC,kJAAoC;;;IAyBvC,4EAAiD;IAC7C,wEAAY;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IACzC,4DAAY;;;IACZ,4EAAkF;IAC9E,0FACJ;IAAA,4DAAY;;;IACZ,4EAAkD;IAC9C,0GACJ;IAAA,4DAAY;;;IAMZ,4EAAoC;IAChC,uDACJ;IAAA,4DAAY;;;IADR,0DACJ;IADI,4GACJ;;;IAMA,4EAAiD;IAC7C,6EAAiB;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IAC9C,4DAAY;;;IACZ,4EAC2E;IACvE,+FACJ;IAAA,4DAAY;;;IACZ,4EAAkD;IAC9C,+GACJ;IAAA,4DAAY;;;IAMZ,4EAAiD;IAC7C,wEAAY;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IACzC,4DAAY;;;IACZ,4EAC2E;IACvE,0FACJ;IAAA,4DAAY;;;IACZ,4EAAkD;IAC9C,0GACJ;IAAA,4DAAY;;;;IAnE5B,8EAA8D;IAG1D,0EAC0C;IACtC,wEAA0B;IAAA,sEAAW;IAAA,4DAAK;IAC9C,4DAAM;IAEN,+EAA+D;IAE3D,qFAAkD;IAC9C,uEAAiD;IAErD,4DAAiB;IAEjB,yEAC0C;IAEtC,qFAAwG;IACpG,6EAAW;IAAA,qEAAS;IAAA,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IAAA,4DAAY;IAC5C,wEAA2G;IAC3G,mIAEY;IACZ,mIAEY;IACZ,mIAEY;IAChB,4DAAiB;IAEjB,sFAAwG;IACpG,6EAAW;IAAA,0EAAc;IAAA,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IAAA,4DAAY;IACjD,wEAAiH;IACjH,mIAEY;IAChB,4DAAiB;IAEjB,sFAAwG;IACpG,6EAAW;IAAA,0EAAc;IAAA,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IAAA,4DAAY;IACjD,wEAAiH;IACjH,mIAEY;IACZ,mIAGY;IACZ,mIAEY;IAChB,4DAAiB;IAEjB,sFAAwG;IACpG,6EAAW;IAAA,oEAAQ;IAAA,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IAAA,4DAAY;IAC3C,wEAA4G;IAC5G,mIAEY;IACZ,mIAGY;IACZ,mIAEY;IAChB,4DAAiB;IAErB,4DAAM;IAEN,0EAC0C;IAqBlC,qFAA2G;IACvG,6EAAW;IAAA,gEAAI;IAAA,uEAAK;IAAA,6DAAC;IAAA,4DAAM;IAAA,4DAAY;IACvC,4EACiD;IAC7C,6EAAW;IACP,qEAAQ;IAAA,0EAAQ;IAAA,oEAAQ;IAAA,4DAAS;IACrC,4DAAY;IACpB,4DAAiB;IAIrB,+EAAiG;IAC7F,iEAAI;IACJ,oFAAyC;IAAC,uEAAU;IAAA,4DAAe;IACvE,4DAAU;IAEd,4DAAM;IAEN,2EAC0C;IAEtC,0EAAuC;IAEnC,8EAAmI;IAArB,yTAAoB;IAC9H,gFAAwB;IAAA,gEAAI;IAAA,4DAAW;IAAC,kEAC5C;IAAA,4DAAS;IAET,8EAAuG;IAArB,yTAAoB;IAClG,gFAAwB;IAAA,sEAAU;IAAA,4DAAW;IAAC,kEAClD;IAAA,4DAAS;IACb,4DAAM;IAEV,4DAAM;IACN,4DAAO;IAEf,4DAAW;;;IAzHiC,0DAAsB;IAAtB,sFAAsB;IAYmC,2DAAqB;IAArB,qFAAqB;IAC9F,0DAAmC;IAAnC,qIAAmC;IAGnC,0DAAoE;IAApE,gNAAoE;IAGpE,0DAAoC;IAApC,sIAAoC;IAO2C,0DAAqB;IAArB,qFAAqB;IACpG,0DAAsB;IAAtB,wHAAsB;IAOyD,0DAAqB;IAArB,qFAAqB;IACpG,0DAAmC;IAAnC,qIAAmC;IAI1C,0DAAoE;IAApE,gNAAoE;IAG7D,0DAAoC;IAApC,sIAAoC;IAOsC,0DAAqB;IAArB,qFAAqB;IAC/F,0DAAmC;IAAnC,qIAAmC;IAI1C,0DAAoE;IAApE,gNAAoE;IAG7D,0DAAoC;IAApC,sIAAoC;IA+BrB,0DAAiB;IAAjB,0EAAiB;IAqBoC,2DAA6B;IAA7B,6FAA6B;;AD9LtH,MAAM,aAAa;IA4BtB,YAAY,QAAkB,EAAU,WAAwB,EAAU,IAAiB,EAAU,KAAqB,EAAU,MAAc,EACtI,MAAc,EAAU,YAA0B;QADtB,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACtI,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAc;QA3B9D,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QAC5B,UAAK,GAAQ,EAAE,CAAC;QAKhB,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAY,KAAK,CAAC;QAC1B,WAAM,GAAY,KAAK,CAAC;QACxB,oBAAe,GAAY,KAAK,CAAC;QACjC,aAAQ,GAAG,IAAI,CAAC;QAChB,uBAAkB,GAAa,CAAC,wDAAK,EAAE,wDAAK,CAAC,CAAC;QAC9C,UAAK,GAAQ,EAAE,CAAC;QAChB,aAAQ,GAAU,EAAE,CAAC;QACrB,iBAAY,GAAU,EAAE,CAAC;QAMzB,qBAAgB,GAAa,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,UAAU,EAAC,UAAU,CAAC,CAAC;QAOvF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,QAAQ;;QACJ,IAAI,CAAC,QAAQ,GAAE,KAAK,CAAC;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAClE,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YACxB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACnC,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,eAAe,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACpG,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,mCAAmC,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACxH,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACjF,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,IAAI,EAAE,CAAC,EAAE,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAE,CAAC,CAAC;QAEtE,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,UAAI,CAAC,UAAU,0CAAE,YAAY,CAAC,IAAI,CAC9B,4DAAY,CAAC,GAAG,CAAC,EACnB,SAAS,CAAC,IAAI,CAAC,EAAE;YACf,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE;gBAC5B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACzB;iBACI;gBACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACnB;QACL,CAAC,CAAC,CAAC;QAEH,IAAG,IAAI,CAAC,IAAI,EAAC;YACT,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;iBAC1C,IAAI,CAAC,0DAAS,CAAC,IAAI,CAAC,EACjB,oDAAG,CAAC,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CACjG,CAAC;SACL;IAEL,CAAC;IAED,IAAI,EAAE,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,sDAAsD;IACtD,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,QAAQ,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACxD,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,OAAO,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAEpD,WAAW;QACP,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAEvF,IAAI,SAAS,GAAO,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAW,EAAE,EAAE;gBAE9B,IAAI,QAAQ,GAAG,EAAE,CAAC;gBAClB,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,WAAe,EAAE,EAAE,GAAG,QAAQ,IAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9F,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE/C,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBAEvD,SAAS,CAAC,IAAI,CAAC;oBACX,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO;oBAClE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO;oBAClD,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU;iBACrD,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,GAAG,IAAI,wEAAkB,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAEK,OAAO,CAAC,KAAU,EAAE,GAAQ;QAChC,MAAM,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACjG,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,+CAA+C;IAC/C,yCAAyC;IACzC,IAAI;IAIJ,iBAAiB;IAEjB,UAAU;QACN,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,uBAAuB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC7F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAA4C;IAC5C,mCAAmC;IACnC,qCAAqC;IACrC,uBAAuB;IACvB,gCAAgC;IAChC,YAAY;IACZ,qCAAqC;IACrC,QAAQ;IACR,oCAAoC;IACpC,2CAA2C;IAC3C,QAAQ;IACR,aAAa;IACb,4CAA4C;IAC5C,QAAQ;IACR,IAAI;IAEJ,gCAAgC;IAChC,8CAA8C;IAC9C,wBAAwB;IACxB,uCAAuC;IACvC,QAAQ;IACR,oCAAoC;IACpC,qCAAqC;IACrC,QAAQ;IACR,gCAAgC;IAEhC,qBAAqB;IACrB,kDAAkD;IAClD,iBAAiB;IACjB,+BAA+B;IAC/B,6GAA6G;IAC7G,aAAa;IACb,QAAQ;IACR,oCAAoC;IACpC,2CAA2C;IAC3C,QAAQ;IACR,aAAa;IACb,4CAA4C;IAC5C,QAAQ;IACR,IAAI;IAEJ,4DAA4D;IAC5D,2CAA2C;IAC3C,+CAA+C;IAC/C,iCAAiC;IACjC,yCAAyC;IACzC,+DAA+D;IAC/D,wBAAwB;IACxB,0CAA0C;IAC1C,QAAQ;IACR,qBAAqB;IACrB,sDAAsD;IACtD,qBAAqB;IACrB,mCAAmC;IACnC,iHAAiH;IACjH,iBAAiB;IACjB,QAAQ;IACR,oCAAoC;IACpC,2CAA2C;IAC3C,QAAQ;IACR,aAAa;IACb,4CAA4C;IAC5C,QAAQ;IACR,IAAI;IAEJ,UAAU,CAAC,IAAY;QACnB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAClG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc,CAAC,KAAS;;QACpB,IAAG,CAAC,WAAI,CAAC,MAAM,0CAAE,KAAK,GAAC;YACnB,UAAI,CAAC,OAAO,0CAAE,aAAa,CAAC,CAAC,8DAAkB,CAAC,eAAe,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9F,UAAI,CAAC,OAAO,0CAAE,sBAAsB,EAAE,CAAC;YACvC,IAAI,CAAC,QAAQ,GAAE,KAAK,CAAC;YACrB,UAAI,CAAC,UAAU,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC9B,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;SAC9B;aAAI;YACD,UAAI,CAAC,OAAO,0CAAE,aAAa,CAAC,CAAC,+DAAmB,EAAE,8DAAkB,CAAC,eAAe,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnH,UAAI,CAAC,OAAO,0CAAE,sBAAsB,EAAE,CAAC;YACvC,UAAI,CAAC,OAAO,0CAAE,eAAe,EAAE,CAAC;SACnC;IACL,CAAC;IAED,sBAAsB;;QAClB,OAAO,WAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC;YAClE,WAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,oCAAoC,CAAC,CAAC;gBAC1E,WAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC,iDAAiD,CAAC,CAAC;oBACzF,EAAE,CAAC;IACd,CAAC;IAED,SAAS,CAAC,IAAS;;QACf,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,IAAS;;QAClB,UAAI,CAAC,UAAU,0CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5C,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAChC,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,OAAO;;QACH,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,wBAAwB;QACxB,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAChC,UAAI,CAAC,EAAE,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QACtB,UAAI,CAAC,OAAO,0CAAE,MAAM,EAAE,CAAC;QACvB,UAAI,CAAC,UAAU,0CAAE,MAAM,EAAE,CAAC;QAC1B,UAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,UAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAG9B,eAAe;QAClB,gCAAgC;QAChC,wDAAwD;QACxD,4CAA4C;QACzC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAE,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxB,IAAG,IAAI,CAAC,IAAI,EAAC;YACZ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;iBAC1C,IAAI,CACG,0DAAS,CAAC,IAAI,CAAC,EACf,oDAAG,CAAC,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CACrG,CAAC;SACF;QACD,kCAAkC;QAErC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,mEAAmE;IACvE,CAAC;IAED,UAAU,CAAC,EAAU;QACjB,oBAAoB;QAEpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,mBAAmB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;;YAE9F,UAAI,CAAC,EAAE,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAChC,UAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxC,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,UAAI,CAAC,OAAO,0CAAE,OAAO,EAAE,CAAC;YACxB,UAAI,CAAC,UAAU,0CAAE,OAAO,EAAE,CAAC;YAC3B,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,UAAI,CAAC,OAAO,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,UAAI,CAAC,QAAQ,0CAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE5C,eAAe;YACd,IAAI,MAAM,GAAO,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,yBAAyB;YACzB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAW,EAAE,EAAE;gBACxC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxE,IAAG,KAAK,IAAI,CAAC,EAAC;oBACV,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAClC;YACL,CAAC,CAAC,CAAC;YACH,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC7B,8BAA8B;YAC7B,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACrB,kCAAkC;YAClC,sDAAsD;YACtD,0CAA0C;YACzC,IAAG,IAAI,CAAC,IAAI,EAAC;gBACV,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;qBAC1C,IAAI,CACG,0DAAS,CAAC,IAAI,CAAC,EACf,oDAAG,CAAC,CAAC,KAAiB,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CACrG,CAAC;aACJ;YACD,mCAAmC;YAEpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACN,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC1E,mFAAmF;IACvF,CAAC;IAED,eAAe;QACX,4FAA4F;IAChG,CAAC;IAED,cAAc,CAAC,KAAU,EAAE,KAAa;QACpC,kEAAkE;IACtE,CAAC;IAGD,QAAQ,CAAC,KAAS;QACd,4FAA4F;IAChG,CAAC;IAEyC,QAAQ,CAAC,KAAoB;QAEnE,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,qBAAqB;SACxB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,4DAAc,EAAE;YACjD,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED,QAAQ;;QACJ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,0BAA0B,EAAE,UAAI,CAAC,OAAO,0CAAE,KAAK,CAAC,QAAQ,GAAG,IAAI,EAAE,EACzH,CAAC,WAAI,CAAC,EAAE,0CAAE,KAAK,MAAK,EAAE,CAAC,CAAC,CAAC,UAAI,CAAC,EAAE,0CAAE,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;;YACpE,IAAG,IAAI,CAAC,IAAI,EAAC;gBACV,wEAAwE;aAC1E;iBAED;gBACI,IAAI,MAAM,GAAO,EAAE,CAAC;gBACpB,IAAG,UAAI,CAAC,IAAI,0CAAE,KAAK,EAAC;oBAChB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAW,EAAE,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3E;gBAED,IAAI,KAAK,GAAO;oBACZ,EAAE,EAAE,UAAI,CAAC,EAAE,0CAAE,KAAK;oBAClB,MAAM,EAAE,UAAI,CAAC,MAAM,0CAAE,KAAK;oBAC1B,OAAO,EAAE,UAAI,CAAC,OAAO,0CAAE,KAAK;oBAC5B,OAAO,EAAE,UAAI,CAAC,OAAO,0CAAE,KAAK;oBAC5B,OAAO,EAAE,UAAI,CAAC,OAAO,0CAAE,KAAK;oBAC5B,OAAO,EAAE,UAAI,CAAC,OAAO,0CAAE,KAAK;oBAC5B,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACtC,QAAQ,EAAE,UAAI,CAAC,QAAQ,0CAAE,KAAK;oBAC9B,MAAM,EAAE,MAAM;oBACd,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE;oBAC5B,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa;iBAC9C,CAAC;gBAEF,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,IAAI,WAAI,CAAC,EAAE,0CAAE,KAAK,KAAI,EAAE,EAAE;oBACtB,MAAM,GAAG,iBAAiB,CAAC;iBAC9B;qBACI;oBACD,MAAM,GAAG,iBAAiB,CAAC;iBAC9B;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,GAAG,MAAM,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;oBACnF,IAAI,IAAI,CAAC,OAAO,EAAE;wBACd,wEAAwE;qBAC3E;yBACI;wBACD,uEAAuE;qBAC1E;oBACD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;0EAzaQ,aAAa;2GAAb,aAAa;;;;;kEAyBX,sEAAY;kEACZ,4DAAO;kEACP,gFAAoB;;;;;;;;;;;6IA3BtB,oBAAgB,qJAAhB,oBAAgB;;QCtB7B,oHA6FW;QAEX,qHAiIW;;QAhOA,+EAAe;QA+Ff,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;AC7FpB,SAAS,YAAY,CAAC,OAAwB;IACrD,MAAM,SAAS,GAAQ,OAAO,CAAC,KAAK,CAAC;IACrC,IAAG,OAAO,SAAS,KAAK,QAAQ,EAAC;QAC7B,OAAO,EAAC,SAAS,EAAG,IAAI,EAAC,CAAC;KAC7B;IACD,OAAO,IAAI,CAAC;AACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJD;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUgB;AAAiF;AAAA;AAAA;AAAA;AAAA;AAC7E;AAAwB;AAAU;AAAY;AAClD;;;;;;AAiBQ;AAAgF;AAAa;;;;;;AAExF;AAAwC;AAAoB;;;;;AAApB;AAAA;;;;;;AACxC;AAAwC;AAAE;;;;;;AAF/C;AACK;AACA;AACD;;;;;AAFQ;AAAA;AACA;AAAA;;;;;;AAKZ;AAAgF;AAAa;;;;;;AAC7F;AACQ;AAEI;;AAEJ;AACR;;;;;AALc;AAAA;AAEF;AAAA;;;;;;AAOZ;AAAgF;AAAkB;;;;;;AAClG;AACI;AAEA;;AACJ;AAEA;;;;;AALU;AAAA;AAEN;AAAA;;;;;;AAOJ;AAAgF;AAAI;;;;;;AACpF;AACI;AAEI;;AAEJ;AAIH;;;;;AARS;AAAA;AAEF;AAAA;;;;;;AAUR;AAA+E;AAAY;;;;;;AAC3F;AACI;AAEI;;AAEJ;AAKJ;;;;;AATU;AAAA;AAEF;AAAA;;;;;;AAWR;AAAgF;AAAiB;;;;;;AACjG;AACI;AAEA;;AACJ;AAEA;;;;;AALU;AAAA;AAEN;AAAA;;;;;;AAOJ;AAAgF;AAAmB;;;;;;AACnG;AAAqD;AAAkB;;;;;AAAlB;AAAA;;;;;;AAIrD;AAAgF;AAAe;;;;;;AAC/F;AACI;AAEI;;AACJ;AAKJ;;;;;AARU;AAAA;AAEF;AAAA;;;;;;AAUR;AAAgF;AAAiB;;;;;;AACjG;AAAqD;AAAwB;;;;;AAAxB;AAAA;;;;;;AASrD;AAAgF;AAAO;;;;;;AACvF;AACK;AAKL;;;;;AALK;AAAA;;;;;;AASL;AAAgF;AAAO;;;;;;;;AACvF;AAAqD;AAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAAI;AAAY;;;;;;AAGnI;;;;;;AACA;;;;;;AAGA;AACI;AAAiC;AAA6C;AAClF;;;;;;;;AADqC;AAAA;;;;;;;;;;;;AA7JzD;AAEI;AAEI;AAEI;AAA0B;AAAa;AAC3C;AAEA;AAGI;AAEI;AAAW;AAAM;AACjB;AAAgB;AAAA;AAAA;AAAA;AAAA;AAAhB;AACJ;AAEA;AACI;AAGJ;AAEJ;AAEA;AAGI;AACI;AAOI;AACI;AACA;AAIJ;AAEA;AACI;AACA;AAOJ;AAEA;AACI;AACA;AAOJ;AAEA;AACI;AACA;AAUJ;AAEA;AACI;AACA;AAWJ;AAEA;AACI;AACA;AAOJ;AAEA;AACI;AACA;AACJ;AAEA;AACI;AACA;AAUJ;AAEA;AACI;AACA;AACJ;AAOA;AACI;AACA;AAOJ;AAEA;AACI;AACA;AACJ;AAEA;AACA;AAGA;AAGJ;AAGJ;AACJ;AACA;AAEJ;AAEJ;;;;;AArJyB;AAAA;AAWe;AAAA;AA0HA;AAAA;AACa;AAAA;AAW9B;AAAA;;;;;;AAqJa;AACI;AAAoB;AAAQ;AAAQ;AACxC;;;;;;AAEA;AACI;AACJ;;;;;;AAEA;AACG;AACH;;;;;;AAcA;AACI;AAAyB;AAAQ;AAAQ;AAC7C;;;;;;AAaI;AACI;AAAqB;AAAQ;AAAQ;AACzC;;;;;;AAcA;AACI;AAAwB;AAAQ;AAAQ;AAC5C;;;;;;AASA;AACI;AAAe;AAAQ;AAAQ;AACnC;;;;;;AAYJ;AACI;AAAW;AAAQ;AAAQ;AAC/B;;;;;;AAQA;AACI;AAAiC;AAAQ;AAAQ;AACrD;;;;;;;;AAgBR;AACI;AACA;AACI;AAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1C;AACI;AACI;AACJ;AACJ;AACI;AAGA;AAEI;AAAW;AAAI;AACf;AAGJ;AAEA;AAEI;AAAW;AAAO;AAClB;AAEJ;AAEA;AAEI;AAAW;AAAG;AACd;AAEJ;AAEA;AAEA;AAGI;AAEI;AAAW;AAAc;AACzB;AACJ;AAEA;AAEI;AAAW;AAAI;AACf;AACJ;AAEA;AAEI;AAAW;AAAe;AAC1B;AACJ;AAEJ;AAEA;AAGA;AAEI;AAAW;AAAQ;AACnB;AACJ;AAEA;AACR;AACJ;AACJ;;;;;AAjEoB;AAAA;AASyC;AAAA;AAQA;AAAA;AAOA;AAAA;AAYI;AAAA;AAMA;AAAA;AAMA;AAAA;AAWJ;AAAA;;;;;;;;AA5TzF;AAGI;AACI;AAEI;AAGI;;AAEI;AAEI;AACA;AAAmB;AAAa;AAChC;AAIA;AAQI;AAEI;AAAW;AAAK;AAAK;AAAC;AAAM;AAC5B;AAAuB;AAAA;AAAA;AAAA;AAAA,OAA0B,QAA1B,EAA0B;AAAA;AAAA;AAAA;AAAA,KAA1B;AACc;AACzC;AAEA;AACI;AAAW;AAAc;AAAK;AAAC;AAAM;AACrC;AAAuB;AAAA;AAAA;AAAA;AAAA,OAAuC,QAAvC,EAAuC;AAAA;AAAA;AAAA;AAAA,KAAvC;AAEwB;AACnD;AAEJ;AAcA;AAUI;AACI;AAAW;AAAa;AAAK;AAAC;AAAM;AACpC;AAAyC;AAAA;AAAA;AAAA;AAAA,OAA4B,eAA5B,EAA4B;AAAA;AAAA;AAAA;AAAA,KAA5B;AAEZ;AACjC;AAEJ;AACA;AA2DI;AAGI;AAEI;AAAW;AAAiB;AAAK;AAAC;AAAM;AACxC;AAEA;AACA;AAEA;AAIA;AAIA;AAIJ;AAEA;AAEI;AAAW;AAAuB;AAAK;AAAC;AAAM;AAC9C;AACJ;AAEA;AAEI;AAAW;AAAqB;AAAK;AAAC;AAAM;AAC5C;AACA;AAGJ;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAkB;AAAK;AAAC;AAAM;AACzC;AAAuB;AAAA;AAAA;AAAA;AAAA;AAC0B;AAC7C;AAGR;AAEA;AAQI;AAAW;AAAgB;AAAK;AAAC;AAAM;AACvC;AACiD;AAAA;AAAA;AAAA;AAAA;AAA4C;AACzF;AAIR;AAEA;AAEI;AAAW;AAAY;AAAK;AAAC;AAAM;AACnC;AAEI;AAGR;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAQ;AAAK;AAAC;AAAM;AAC/B;AACA;AAGJ;AAGA;AAEI;AAAW;AAA6B;AAAK;AAAC;AAAM;AACpD;AACA;AAGJ;AAEA;AAEI;AAAW;AAEX;AACA;AAIJ;AAEJ;AAEA;AAyEC;AAGD;AAGI;AAIA;AAIA;AAAwC;AAAA;AAAA;AAAA;AAAA;AACpC;AAAwB;AAAgB;AAAW;AACvD;AACI;AAAwC;AAAA;AAAA;AAAA;AAAA;AACpC;AAAwB;AAAI;AAAW;AAC3C;AACJ;AAEJ;AAGJ;AAEJ;AAyBJ;AAEJ;AAGJ;AACJ;AAEA;AAEI;AAEI;AAEI;AAA0B;AAAa;AACvC;AAAyD;AAA+B;AAC5F;AAEA;AAEI;AAAwB;AAAY;AACpC;AACI;AAAuB;AAAA;AAAA;AAAA;AAAA,OAAiC,QAAjC,EAAiC;AAAA;AAAA;AAAA;AAAA,KAAjC;AACkC;AAC7D;AACJ;AAEA;AAEI;AAAwB;AAAiB;AAC7C;AAEA;AAEI;AAEQ;AAA+B;AAAkB;AAC7C;AAAwB;AAU5B;AAGJ;AAA+B;AAAK;AAChC;AACI;;AACJ;AAEA;AACJ;AACA;AAA+B;AAAc;AACrC;AAAoB;AAC5B;AACA;AAA+B;AAAQ;AAC/B;AAAkB;AAC1B;AACJ;AACJ;AAEA;AAEI;AAAwB;AAAW;AACvC;AAEA;AAEI;AACI;AAA+B;AAAK;AAChC;AACJ;AACA;AACA;AAA+B;AAAgB;AACvC;AAAW;AACnB;AACA;AAA+B;AAAS;AAChC;AAAgB;AACxB;AACA;AAA+B;AAAK;AAC5B;;AAA+C;AACvD;AACJ;AACJ;AAEJ;AAEJ;AAEJ;;;;;;;AA7c+D;AAAA;AAqBR;AAAA,6FAA0B,OAA1B,EAA0B,WAA1B;AAMA;AAAA,0GAAuC,OAAvC,EAAuC,4BAAvC;AA+BA;AAAA,+EAAiB,SAAjB,EAAiB,qBAAjB,EAAiB,OAAjB,EAAiB,aAAjB;AAMoB;AAAA;AAiEvB;AAAA,oFAAqB,KAArB,EAAqB,cAArB,EAAqB,KAArB,EAAqB,cAArB;AAEiB;AAAA;AAGrB;AAAA;AAIA;AAAA;AAIA;AAAA;AAgBA;AAAA;AAa8E;AAAA;AAE1E;AAAA;AAcoC;AAAA;AAEpC;AAAA;AASoC;AAAA;AAEpC;AAAA;AAcJ;AAAA;AAS0D;AAAA;AAC1D;AAAA;AAkBD;AAAA;AA4I0B;AAAA;AAO9B;AAAA,oGAAiC,OAAjC,EAAiC,iCAAjC;AAef;AAAA;AAcE;AAAA;AACF;AAAA;AAMA;AAAA;AAGA;AAAA;AAcJ;AAAA;AAII;AAAA;AAGA;AAAA;AAGA;AAAA;;;;;;AA2HoB;;;;;;AACA;;;;;AAAgE;;;;;;AAMhE;;;;;;AACA;;;;;AAAgE;;;;;;AAYhE;;;;;;AACA;;;;;;AAMA;;;;;;AACA;;;;;;;;AAlGxB;AACI;AACI;AACI;AAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1C;AACI;AACK;AACL;AACJ;AACA;AAGI;AAEI;AAAW;AAAI;AACf;AAEJ;AAEA;AAEI;AAAW;AAAO;AAClB;AAEJ;AAEA;AAEI;AAAW;AAAG;AACd;AAEJ;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAc;AACzB;AACJ;AAEA;AAEI;AAAW;AAAI;AACf;AACJ;AAEA;AAEI;AAAW;AAAe;AAC1B;AACJ;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAQ;AACnB;AACJ;AAEA;AAEI;AAAW;AAA2B;AACtC;AACA;AACJ;AAEA;AAEI;AAAW;AAAkC;AAC7C;AACA;AACJ;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAmB;AAE9B;AACA;AACJ;AAEA;AAEI;AAAW;AAA0B;AACrC;AACA;AAGJ;AAEJ;AAmBJ;AACJ;AACR;;;;;AAtHyB;AAAA;AASwC;AAAA;AAOA;AAAA;AAOA;AAAA;AAYA;AAAA;AAMA;AAAA;AAMA;AAAA;AAWA;AAAA;AAMjC;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAYA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;;;;;;AAgJpB;AACI;AAAW;AAAQ;AAAQ;AAC/B;;;;;;AATR;AACI;AAEI;AAEA;AAAW;AAAO;AAClB;AACA;AAGJ;AACA;AACJ;;;;;AAXoD;AAAA;AAMhC;AAAA;;;;;;AAOpB;AAGI;AAEI;AAAW;AAAO;AAClB;AACJ;AAEJ;;;;;AAHiD;AAAA;;;;;;;;AAkBzC;AAAkF;AAAA;AAAA;AAAA;AAAA;AAE9E;AACJ;;;;;;;;AAMA;AACC;AAAA;AAAA;AAAA,yCAA4B,CAA5B;AAA6B,KAA7B;AACG;AAAU;AAAQ;AAAW;AACjC;;;;;AAF4D;;;;;;;;AAI5D;AACC;AAAA;AAAA;AAAA,0CAA6B,CAA7B;AAA8B,KAA9B;AACG;AAAwB;AAAK;AAAW;AAC5C;;;;;AAF6D;;;;;;;;AA1UjG;AAGI;AACI;AAEI;AAGI;;AAEI;AAEI;AACA;AAAmB;AAAa;AAChC;AAIA;AAGI;AAEI;AAAW;AAAK;AAAK;AAAC;AAAM;AAGxB;AACR;AAEJ;AAYA;AA8HA;AAEI;AAGI;AAEI;AAAW;AAAiB;AAAK;AAAC;AAAM;AACxC;;AAgBJ;AAEA;AAEI;AAAW;AAAuB;AAAK;AAAC;AAAM;AAC9C;AACJ;AAEA;AAEI;AAAW;AAAqB;AAAK;AAAC;AAAM;AAC5C;AAIJ;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAkB;AAAK;AAAC;AAAM;AACzC;AAIJ;AAEA;AAEI;AAAW;AAAgB;AAAK;AAAC;AAAM;AACvC;AAIJ;AAEA;AAEI;AAAW;AAAY;AAAK;AAAC;AAAM;AACnC;AAIJ;AAEJ;AAEA;AAGI;AAEI;AAAW;AAAQ;AAAK;AAAC;AAAM;AAC/B;AAIJ;AAEA;AAEI;AAAW;AAA6B;AAAK;AAAC;AAAM;AACpD;AAIJ;AAEA;AAEI;AAAW;AAEX;AACA;AAIJ;AAEJ;AAEA;AAcA;AAYA;AAGI;AAIA;AAKI;AAKA;AAAwC;AAAA;AAAA;AAAA;AAAA;AACpC;AAAwB;AAAgB;AAAW;AACvD;AAEA;AAKA;AAIJ;AAEJ;AAKR;AAuBJ;AAEJ;AAGJ;AACJ;AAEA;AAEI;AAEI;AAEI;AAA0B;AAAa;AACvC;AAAyD;AAAsC;AACnG;AAEA;AAEI;AAAwB;AAAY;AACpC;AACI;AAAuB;AAAA;AAAA;AAAA;AAAA,OAAiC,QAAjC,EAAiC;AAAA;AAAA;AAAA;AAAA,KAAjC;AACiC;AAC5D;AACJ;AAEA;AAEI;AAAwB;AAAiB;AAC7C;AAEA;AAEI;AACI;AAA+B;AAC3B;AACI;AACJ;AACJ;AACA;AAA+B;AAAK;AAChC;AACI;;AACJ;AAEA;AACJ;AACA;AAA+B;AAAc;AACrC;AAA2B;AACnC;AACA;AAA+B;AAAQ;AAC/B;AAAyB;AACjC;AACJ;AACJ;AAEA;AAEI;AAAwB;AAAW;AACvC;AAEA;AAEI;AACI;AAA+B;AAAK;AAChC;AACJ;AACA;AACA;AAA+B;AAAgB;AACvC;AAAW;AACnB;AACA;AAA+B;AAAS;AAChC;AAAgB;AACxB;AACA;AAA+B;AAAK;AAC5B;;AAAsD;AAC9D;AACJ;AACJ;AAEJ;AAEJ;AAEJ;;;;;AAtb+D;AAAA;AAkBc;AAAA;AAelC;AAAA;AAsIS;AAAA;AAqByB;AAAA;AAMA;AAAA;AAcA;AAAA;AASA;AAAA;AASA;AAAA;AAcA;AAAA;AASA;AAAA;AAWA;AAAA;AAQ3C;AAAA;AAcA;AAAA;AAwBW;AAAA;AASA;AAAA;AAKA;AAAA;AAiD4B;AAAA;AAO9B;AAAA,oGAAiC,OAAjC,EAAiC,iCAAjC;AAef;AAAA;AAIE;AAAA;AACF;AAAA;AAMA;AAAA;AAGA;AAAA;AAcJ;AAAA;AAII;AAAA;AAGA;AAAA;AAGA;AAAA;;;;AD/hCtB,MAAO,eAAP,CAAsB;AA0D1B,cACE,kBADF,EAEU,IAFV,EAGU,MAHV,EAIU,WAJV,EAKU,SALV,EAMU,OANV,EAMoC;AAJ1B;AACA;AACA;AACA;AACA,2BAA0B,CA9DpC;;AACA,kCAAyB,KAAzB;AACA,+BAA2B,EAA3B;AACA,sCAAkC,EAAlC;AAEA,qBAAiB,EAAjB;AAEA,4BAAwB,EAAxB;AACA,4BAA6B,CAAC,aAAD,EAAe,aAAf,EAA8B,UAA9B,EAA0C,MAA1C,EAAkD,YAAlD,EAAgE,SAAhE,EAA2E,kBAA3E,EAA+F,UAA/F,EAA2G,iBAA3G,EAA6H,QAA7H,EAAuI,QAAvI,CAA7B;AAKA,sBAAsB,KAAtB;AACA,sBAAsB,KAAtB;AACA,sBAAsB,KAAtB;AASA,kCAA8B,EAA9B;AACA,2BAAkB,EAAlB;AAEA,8BAA0B,EAA1B;AACA,yBAAgB,EAAhB;AACA,yBAAgB,EAAhB;AAEA,0BAAsB,EAAtB;AACA,kBAAS,EAAT;AACA,gBAAO,CACL;AAAE,QAAE,EAAE,CAAN;AAAS,UAAI,EAAE;AAAf,KADK,EAEL;AAAE,QAAE,EAAE,CAAN;AAAS,UAAI,EAAE;AAAf,KAFK,CAAP;AAIA,wBAAoB,EAApB;AAMA,yBAAqB,EAArB;AAMA,gCAA+B,KAA/B;AAIA,iCAA6B,EAA7B;AA6OA,+BAA6B,EAA7B;AAkEA,wBAAsB,EAAtB;AAiEA,sCAAkC,EAAlC;AACA,wCAAoC,EAApC;AACA,oCAAgC,EAAhC;AAxWE,SAAK,kBAAL,GAA0B,kBAAkB,CAAC,OAAnB,CAA2B,qBAA3B,EACvB,IADuB,CAClB,mDAAG,CAAC,CAAC;AAAE;AAAF,KAAD,KAAiB,OAAO,GAAG,YAAH,GAAkB,UAA3C,CADe,CAA1B;AAED;;AAED,mBAAiB;AACf,SAAK,SAAL,CAAe,IAAf,CAAoB,+BAApB,EAAqD,OAArD,EAA8D;AAC5D,cAAQ,EAAE,IADkD;AAE5D,sBAAgB,EAAE,KAF0C;AAG5D,wBAAkB,EAAE,OAHwC;AAI5D,gBAAU,EAAE,CAAC,OAAD;AAJgD,KAA9D;AAMD;;AAED,qBAAmB,CAAC,QAAD,EAAc;AAC/B,SAAK,SAAL,CAAe,IAAf,CAAoB,QAApB,EAA8B,OAA9B,EAAuC;AACrC,cAAQ,EAAE,IAD2B;AAErC,sBAAgB,EAAE,KAFmB;AAGrC,wBAAkB,EAAE,OAHiB;AAIrC,gBAAU,EAAE,CAAC,SAAD;AAJyB,KAAvC;AAMD;;AAED,qBAAmB;AACjB,SAAK,SAAL,CAAe,IAAf,CAAoB,iBAApB,EAAuC,OAAvC,EAAgD;AAC9C,cAAQ,EAAE,IADoC;AAE9C,sBAAgB,EAAE,KAF4B;AAG9C,wBAAkB,EAAE,OAH0B;AAI9C,gBAAU,EAAE,CAAC,SAAD;AAJkC,KAAhD;AAMD;;AAED,UAAQ;AACN,SAAK,YAAL,GAAoB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,cAArB,CAAX,CAApB;AACA,SAAK,QAAL,GAAgB,KAAK,YAAL,CAAkB,aAAlC;AACA,SAAK,MAAL,GAAc,KAAK,YAAL,CAAkB,EAAhC;AACA,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,OAAL,GAAe,IAAI,IAAJ,EAAf;AACA,SAAK,OAAL,GAAe,IAAI,IAAJ,EAAf;AACA,SAAK,UAAL;AACA,SAAK,WAAL,GAAmB,IAAI,IAAJ,EAAnB,CARM,CASN;;AACA,SAAK,kBAAL;AACD;;AAED,gBAAc;;;AACZ,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,eAAL,CAAqB,KAArB;AACA,SAAK,mBAAL,GAA2B,EAA3B;AACA,SAAK,0BAAL,GAAkC,EAAlC;AACA,SAAK,gBAAL,GAAwB,EAAxB;AACA,SAAK,sBAAL,GAA8B,EAA9B;AACA,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,aAAL,GAAqB,EAArB,CAVY,CAWZ;;AACA,SAAK,qBAAL,GAA6B,EAA7B;AACA,SAAK,yBAAL,GAAiC,EAAjC,CAbY,CAcZ;;AACA,SAAK,qBAAL;AACA,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,cAAL,GAAsB,EAAtB;AACA,SAAK,gBAAL,GAAwB,EAAxB;AACA,SAAK,QAAL,GAAgB,EAAhB;AACA,SAAK,OAAL,GAAe,EAAf;AACA,SAAK,YAAL,GAAoB,EAApB;;AACA,QAAI,KAAK,SAAL,CAAe,MAAf,IAAyB,CAA7B,EAAgC;AAC9B,WAAK,SAAL,CAAe,MAAf,CAAuB,CAAD,IAAW;AAC/B,YAAI,mCAAM,CAAC,CAAC,CAAC,WAAH,CAAN,CAAsB,MAAtB,CAA6B,UAA7B,KAA4C,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,CAAhD,EAA6F;AAC3F,eAAK,gBAAL,CAAsB,IAAtB,CAA2B,CAAC,CAAC,YAA7B;AACD;AACF,OAJD;;AAKA,UAAI,KAAK,gBAAL,CAAsB,MAAtB,IAAgC,CAApC,EAAuC;AACrC,aAAK,mBAAL,GAA2B,IAAI,CAAC,GAAL,CAAS,GAAG,KAAK,gBAAjB,IAAqC,CAAhE;;AACA,YAAI,KAAK,mBAAL,IAA4B,CAAhC,EAAmC;AACjC,qBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,KAA9C,GAAsD,KAAK,mBAAtE,CAAlB;AACD,SAFD,MAGK,IAAI,KAAK,mBAAL,IAA4B,EAA5B,IAAkC,KAAK,mBAAL,IAA4B,EAAlE,EAAsE;AACzE,qBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,IAA9C,GAAqD,KAAK,mBAArE,CAAlB;AACD,SAFI,MAGA,IAAI,KAAK,mBAAL,IAA4B,GAA5B,IAAmC,KAAK,mBAAL,IAA4B,GAAnE,EAAwE;AAC3E,qBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,GAA9C,GAAoD,KAAK,mBAApE,CAAlB;AACD,SAFI,MAGA,IAAI,KAAK,mBAAL,IAA4B,IAAhC,EAAsC;AACzC,qBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,KAAK,mBAA9D,CAAlB;AACD;AACF,OAdD,MAeK;AACH,aAAK,mBAAL,GAA2B,CAA3B;AACA,mBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,KAA9C,GAAsD,KAAK,mBAAtE,CAAlB;AACD;AACF,KAzBD,MA0BK;AACH,WAAK,mBAAL,GAA2B,CAA3B;AACA,iBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,KAA9C,GAAsD,KAAK,mBAAtE,CAAlB;AACD;AACF;;AAED,cAAY;AACV,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,UAAL,GAAkB,KAAlB,CAHU,CAIV;;AACA,SAAK,kBAAL;AACD;;AAED,aAAW,CAAC,KAAD,EAAa;AACtB,UAAM,WAAW,GAAI,KAAK,CAAC,MAAN,CAAkC,KAAvD;AACA,SAAK,UAAL,CAAgB,MAAhB,GAAyB,WAAW,CAAC,IAAZ,GAAmB,WAAnB,EAAzB;;AACA,QAAI,KAAK,UAAL,CAAgB,SAApB,EAA+B;AAC7B,WAAK,UAAL,CAAgB,SAAhB,CAA0B,SAA1B;AACD;AACF;;AAED,YAAU;AACR,SAAK,eAAL,GAAuB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AAC5C,mBAAa,EAAE,CAAC,EAAD,CAD6B;AAE5C,iBAAW,EAAE,CAAC,EAAD,CAF+B;AAG5C,UAAI,EAAE,CAAC,EAAD,CAHsC;AAI5C,aAAO,EAAE,CAAC,EAAD,CAJmC;AAK5C,SAAG,EAAE,CAAC,EAAD,CALuC;AAM5C,oBAAc,EAAE,CAAC,EAAD,CAN4B;AAO5C,UAAI,EAAE,CAAC,EAAD,CAPsC;AAQ5C,mBAAa,EAAE,CAAC,EAAD,CAR6B;AAS5C,cAAQ,EAAE,CAAC,EAAD,CATkC;AAU5C,0BAAoB,EAAE,CAAC,EAAD,CAVsB;AAW5C,qBAAe,EAAE,CAAC,EAAD,EAAK,+DAAL,CAX2B;AAY5C,gBAAU,EAAE,CAAC,EAAD,EAAK,+DAAL,CAZgC;AAa5C,iBAAW,EAAE,CAAC,EAAD,EAAK,+DAAL,CAb+B;AAc5C,aAAO,EAAE,CAAC,EAAD,EAAK,+DAAL,CAdmC;AAe5C,yBAAmB,EAAE,CAAC,EAAD,EAAK,+DAAL,CAfuB;AAgB5C,UAAI,EAAE,CAAC,EAAD,CAhBsC;AAiB5C,kBAAY,EAAE,CAAC,EAAD,EAAK,+DAAL,CAjB8B;AAkB5C,gBAAU,EAAE,CAAC,EAAD,EAAK,+DAAL;AAlBgC,KAAvB,CAAvB;AAqBA,SAAK,YAAL,GAAoB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACzC,aAAO,EAAE,CAAC,EAAD,EAAK,+DAAL;AADgC,KAAvB,CAApB;AAGD;;AAEgB,MAAb,aAAa;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,eAAzB,CAAP;AAAmD;;AAC1D,MAAX,WAAW;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,aAAzB,CAAP;AAAiD;;AAC7D,MAAJ,IAAI;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,MAAzB,CAAP;AAA0C;;AAC5C,MAAP,OAAO;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,CAAP;AAA6C;;AACtD,MAAH,GAAG;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,KAAzB,CAAP;AAAyC;;AACnC,MAAd,cAAc;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,gBAAzB,CAAP;AAAoD;;AACnE,MAAJ,IAAI;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,MAAzB,CAAP;AAA0C;;AACtC,MAAb,aAAa;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,eAAzB,CAAP;AAAmD;;AAC7D,MAAR,QAAQ;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,UAAzB,CAAP;AAA8C;;AACvC,MAApB,oBAAoB;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,sBAAzB,CAAP;AAA0D;;AACpE,MAAf,eAAe;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,iBAAzB,CAAP;AAAqD;;AAC/D,MAAV,UAAU;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,YAAzB,CAAP;AAAgD;;AACpD,MAAX,WAAW;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,aAAzB,CAAP;AAAiD;;AAC1D,MAAP,OAAO;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,SAAzB,CAAP;AAA6C;;AACtC,MAAnB,mBAAmB;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,qBAAzB,CAAP;AAAyD;;AAC7E,MAAJ,IAAI;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,MAAzB,CAAP;AAA0C;;AACvC,MAAZ,YAAY;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,cAAzB,CAAP;AAAkD;;AACzD,MAAV,UAAU;AAAK,WAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,YAAzB,CAAP;AAAgD;;AACxD,MAAP,OAAO;AAAK,WAAO,KAAK,YAAL,CAAkB,GAAlB,CAAsB,SAAtB,CAAP;AAA0C;;AAG1D,uBAAqB;AACnB,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,MAAL,CAAY,cAAZ,KAA+B,gCAAhD,EAAkF,SAAlF,CAA6F,IAAD,IAAc;AACxG,WAAK,eAAL,GAAuB,IAAI,CAAC,IAA5B;AACA,WAAK,aAAL,GAAqB,IAAI,CAAC,IAA1B;AACD,KAHD;AAID;;AAED,SAAO;;;AACL,QAAI,KAAK,YAAL,IAAqB,IAAzB,EAA+B;AAC7B,WAAK,gBAAL,GAAwB,KAAK,YAAL,CAAkB,IAA1C;AACA,WAAK,WAAL,CAAiB,KAAK,gBAAtB;AACA,WAAK,eAAL,CAAqB,KAArB;AAEA,iBAAK,eAAL,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAE,QAAF,CAAW,IAAI,IAAJ,EAAX,CAApB,CAL6B,CAO7B;;AACA,WAAK,qBAAL,GAA6B,EAA7B;AACA,WAAK,yBAAL,GAAiC,EAAjC;AACA,WAAK,wBAAL;AACA,WAAK,cAAL,GAAsB,EAAtB;AACA,WAAK,YAAL,GAAoB,EAApB;AACA,WAAK,0BAAL,GAAkC,EAAlC;AACA,WAAK,mBAAL,GAA2B,EAA3B;AACA,WAAK,oBAAL,GAA4B,EAA5B;;AACA,UAAG,KAAK,gBAAL,IAAyB,KAA5B,EAAkC;AAChC,mBAAK,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAE,QAAF,CAAW,SAAX,CAAhB;AACA,mBAAK,mBAAL,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAE,QAAF,CAAW,KAAX,CAAxB;AACA,aAAK,yBAAL,GAAiC,KAAjC;AACA,aAAK,oBAAL,GAA4B,IAA5B,CAJgC,CAKhC;AACD,OAND,MAOK,IAAG,KAAK,gBAAL,IAAyB,KAA5B,EAAkC;AACrC,mBAAK,WAAL,MAAgB,IAAhB,IAAgB,aAAhB,GAAgB,MAAhB,GAAgB,GAAE,QAAF,CAAW,WAAX,CAAhB;AACA,aAAK,yBAAL,GAAiC,EAAjC;AACA,aAAK,oBAAL,GAA4B,KAA5B,CAHqC,CAIrC;AACD;;AACD,UAAI,KAAK,mBAAL,IAA4B,CAAhC,EAAmC;AACjC,mBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,KAA9C,GAAsD,KAAK,mBAAtE,CAAlB;AACD,OAFD,MAGK,IAAI,KAAK,mBAAL,IAA4B,EAA5B,IAAkC,KAAK,mBAAL,IAA4B,EAAlE,EAAsE;AACzE,mBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,IAA9C,GAAqD,KAAK,mBAArE,CAAlB;AACD,OAFI,MAGA,IAAI,KAAK,mBAAL,IAA4B,GAA5B,IAAmC,KAAK,mBAAL,IAA4B,GAAnE,EAAwE;AAC3E,mBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,GAA9C,GAAoD,KAAK,mBAApE,CAAlB;AACD,OAFI,MAGA,IAAI,KAAK,mBAAL,IAA4B,IAAhC,EAAsC;AACzC,mBAAK,aAAL,MAAkB,IAAlB,IAAkB,aAAlB,GAAkB,MAAlB,GAAkB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,KAAK,mBAA9D,CAAlB;AACD;;AACD,iBAAK,oBAAL,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAE,QAAF,CAAW,mCAAM,CAAC,KAAK,WAAN,CAAN,CAAyB,MAAzB,CAAgC,UAAhC,IAA8C,IAAI,CAAC,KAAL,CAAW,OAAO,IAAI,CAAC,MAAL,KAAgB,IAAlC,CAAzD,CAAzB;AACD,KA1CD,MA2CK;AACH,WAAK,cAAL;AAED;AAEF;;AAED,aAAW,CAAC,YAAD,EAAiB;AAC1B,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,MAAL,CAAY,cAAZ,KAA+B,iCAA/B,GAAmE,YAApF,EAAkG,SAAlG,CAA6G,IAAD,IAAc;AACxH,WAAK,MAAL,GAAc,IAAI,CAAC,IAAnB;AACA,WAAK,MAAL,CAAY,GAAZ,CAAiB,CAAD,IAAU;AAAG,SAAC,CAAC,YAAF,GAAiB,CAAC,CAAC,YAAF,GAAiB,KAAjB,GAAyB,CAAC,CAAC,SAA3B,GAAuC,KAAvC,GAA+C,CAAC,CAAC,aAAlE;AAAiF,eAAO,CAAP;AAAW,OAAzH;AACD,KAHD;AAID;;AAID,oBAAkB;AAChB,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,MAAL,CAAY,cAAZ,KAA+B,yCAAhD,EAA2F,SAA3F,CAAsG,IAAD,IAAc;AACjH,WAAK,SAAL,GAAiB,IAAI,CAAC,IAAtB;AACA,WAAK,mBAAL,GAA2B,EAA3B;AAEA,WAAK,SAAL,CAAe,OAAf,CAAuB,CAAC,QAAD,EAAgB,MAAhB,KAA+B;AACpD,YAAI,EAAE,GAAG,EAAT;AACA,YAAI,CAAC,GAAG,EAAR;AACA,YAAI,EAAE,GAAG,EAAT;AACA,YAAI,CAAC,GAAG,EAAR;AACA,YAAI,EAAE,GAAG,EAAT;AACA,YAAI,EAAE,GAAG,EAAT;AACA,YAAI,MAAM,GAAG,EAAb;AACA,YAAI,GAAG,GAAG,EAAV;;AACA,YAAG,QAAQ,CAAC,QAAT,IAAqB,CAAxB,EAA0B;AACxB,gBAAM,GAAG,UAAT;AACD,SAFD,MAGK,IAAG,QAAQ,CAAC,QAAT,IAAqB,CAAC,CAAzB,EAA2B;AAC9B,gBAAM,GAAG,UAAT;AACD,SAFI,MAGA,IAAG,QAAQ,CAAC,QAAT,IAAqB,CAAxB,EAA0B;AAC7B,gBAAM,GAAG,oBAAT;AACD,SAFI,MAGD;AACF,gBAAM,GAAG,sBAAT;AACD;;AAED,gBAAQ,CAAC,YAAT,CAAsB,OAAtB,CAA8B,CAAC,QAAD,EAAgB,MAAhB,KAA+B;AAC3D,YAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,WAAd,IAA8B,MAAM,IAAI,QAAQ,CAAC,YAAT,CAAsB,MAAtB,GAA+B,CAA1C,GAA+C,EAA/C,GAAoD,KAAjF,CAAL,CAD2D,CAE3D;;AACA,aAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAf,IAAuB,MAAM,IAAI,QAAQ,CAAC,YAAT,CAAsB,MAAtB,GAA+B,CAA1C,GAA+C,EAA/C,GAAoD,KAA1E,CAAN;AACA,YAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,IAAd,IAAuB,MAAM,IAAI,QAAQ,CAAC,YAAT,CAAsB,MAAtB,GAA+B,CAA1C,GAA+C,EAA/C,GAAoD,KAA1E,CAAL;AACA,WAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,QAAb,IAA0B,MAAM,IAAI,QAAQ,CAAC,YAAT,CAAsB,MAAtB,GAA+B,CAA1C,GAA+C,EAA/C,GAAoD,KAA7E,CAAJ;AACA,YAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,SAAd,IAA4B,MAAM,IAAI,QAAQ,CAAC,YAAT,CAAsB,MAAtB,GAA+B,CAA1C,GAA+C,EAA/C,GAAoD,KAA/E,CAAL;AACA,YAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,QAAd,IAA2B,MAAM,IAAI,QAAQ,CAAC,YAAT,CAAsB,MAAtB,GAA+B,CAA1C,GAA+C,EAA/C,GAAoD,KAA9E,CAAL;AACD,SARD;AAYA,aAAK,mBAAL,CAAyB,IAAzB,CAA8B;AAC5B,YAAE,EAAC,QAAQ,CAAC,EADgB;AAE5B,mBAAS,EAAC,QAAQ,CAAC,SAFS;AAG5B,yBAAe,EAAC,mCAAM,CAAC,QAAQ,CAAC,eAAV,CAAN,CAAiC,MAAjC,CAAwC,YAAxC,CAHY;AAI5B,gBAAM,EAAG,MAJmB;AAK5B,kBAAQ,EAAC,QAAQ,CAAC,QALU;AAM5B,qBAAW,EAAE,EANe;AAO5B;AACA,aAAG,EAAC,GARwB;AAS5B,cAAI,EAAE,EATsB;AAU5B,kBAAQ,EAAE,CAVkB;AAW5B,mBAAS,EAAE,EAXiB;AAY5B,kBAAQ,EAAE,EAZkB;AAa5B,qBAAW,EAAC,QAAQ,CAAC,YAAT,CAAsB,CAAtB,EAAyB;AAbT,SAA9B;AAeD,OAjDD;AAmDA,WAAK,UAAL,GAAkB,IAAI,uEAAJ,CAAuB,KAAK,mBAA5B,CAAlB;AACA,WAAK,UAAL,CAAgB,SAAhB,GAA4B,KAAK,SAAjC;AACA,WAAK,UAAL,CAAgB,IAAhB,GAAuB,KAAK,IAA5B,CAzDiH,CA2DjH;AACD,KA5DD;AA6DD;;AAID,iBAAe;AACb,QAAI,qBAAqB,GAAQ,EAAjC;AACA,SAAK,cAAL,CAAoB,OAApB,CAA6B,OAAD,IAAiB;AAC3C,2BAAqB,CAAC,IAAtB,CAA2B,OAAO,CAAC,YAAnC;AACD,KAFD;AAGA,QAAI,KAAK,GAAG;AAAE,kBAAY,EAAE;AAAhB,KAAZ;AACA,SAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,MAAL,CAAY,cAAZ,KAA+B,4CAApD,EAAkG,KAAlG,EAAyG,SAAzG,CAAoH,IAAD,IAAc;AAC/H,UAAI,WAAW,GAAG,IAAI,CAAC,IAAvB;AACA,WAAK,YAAL,GAAoB,EAApB;AACA,iBAAW,CAAC,OAAZ,CAAqB,OAAD,IAAiB;AACnC,aAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB;AACD,OAFD;AAIA,WAAK,0BAAL,GAAkC,KAAK,YAAvC;AACA,WAAK,mBAAL,GAA2B,KAAK,YAAL,CAAkB,CAAlB,CAA3B;AACA,WAAK,mCAAL;AACD,KAVD;AAYD;;AAED,aAAW;;;AACT,SAAK,OAAL,CAAa,IAAb;AACA,QAAI,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAK,eAAL,CAAqB,KAAvC,CAAd;AACA,WAAO,CAAC,YAAR,GAAuB,KAAK,YAA5B;AACA,WAAO,CAAC,QAAR,GAAmB,CAAnB;AACA,WAAO,CAAC,SAAR,GAAoB,KAAK,gBAAzB;AACA,WAAO,CAAC,mBAAR,GAA8B,KAAK,yBAAnC;AACA,WAAO,CAAC,MAAR,GAAiB,KAAK,MAAtB,CAPS,CAQT;;AACA,QAAI,KAAK,mBAAL,IAA4B,CAAhC,EAAmC;AACjC,aAAO,CAAC,YAAR,GAAuB,QAAQ,KAAK,mBAApC;AACD,KAFD,MAGK,IAAI,KAAK,mBAAL,IAA4B,EAA5B,IAAkC,KAAK,mBAAL,IAA4B,EAAlE,EAAsE;AACzE,aAAO,CAAC,YAAR,GAAuB,OAAO,KAAK,mBAAnC;AACD,KAFI,MAGA,IAAI,KAAK,mBAAL,IAA4B,GAA5B,IAAmC,KAAK,mBAAL,IAA4B,GAAnE,EAAwE;AAC3E,aAAO,CAAC,YAAR,GAAuB,MAAM,KAAK,mBAAlC;AACD,KAFI,MAGA,IAAI,KAAK,mBAAL,IAA4B,IAAhC,EAAsC;AACzC,aAAO,CAAC,YAAR,GAAuB,KAAK,mBAA5B;AACD;;AACD,QAAI,KAAK,GAAG,OAAZ;AACA,WAAO,CAAC,GAAR,CAAY,OAAZ,EAAoB,KAApB;;AACA,QAAI,KAAK,eAAL,CAAqB,KAAzB,EAAgC;AAC9B,WAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,MAAL,CAAY,cAAZ,KAA+B,iCAAhD,EAAmF,KAAnF,EAA0F,SAA1F,CAAqG,IAAD,IAAc;AAChH,YAAI,IAAI,CAAC,OAAT,EAAkB;AAChB,eAAK,OAAL,CAAa,IAAb;AACA,eAAK,mBAAL,CAAyB,0BAAzB;AACA,eAAK,YAAL;AACD,SAJD,MAKK;AACH,eAAK,OAAL,CAAa,IAAb;AACA,eAAK,iBAAL;AACD;AACF,OAVD;AAWD,KAZD,MAaK;AACH,WAAK,OAAL,CAAa,IAAb;AACA,iBAAK,YAAL,MAAiB,IAAjB,IAAiB,aAAjB,GAAiB,MAAjB,GAAiB,GAAE,aAAF,EAAjB;AACA,WAAK,iBAAL;AACD;AACF;;AAMD,kBAAgB,CAAC,EAAD,EAAU,MAAV,EAAqB;AACnC,SAAK,sBAAL,GAA8B,KAA9B;AAEA,SAAK,QAAL,GAAgB,EAAhB;AACA,SAAK,OAAL,GAAe,EAAf;AACA,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,YAAL,CAAkB,KAAlB;AACA,SAAK,0BAAL,GAAkC,EAAlC;AACA,SAAK,WAAL,GAAmB,MAAnB;AACA,QAAI,UAAU,GAAG;AAAE,QAAE,EAAE;AAAN,KAAjB;AACA,SAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,MAAL,CAAY,cAAZ,KAA+B,gDAApD,EAAsG,UAAtG,EAAkH,SAAlH,CAA6H,IAAD,IAAc;AACxI,WAAK,aAAL,GAAqB,IAAI,CAAC,IAAL,CAAU,CAAV,CAArB;AACA,WAAK,0BAAL,GAAkC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,YAA/C;AACA,WAAK,4BAAL,GAAoC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,kBAAjD;AACA,WAAK,wBAAL,GAAgC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,cAA7C;AACA,WAAK,0BAAL,GAAkC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,YAA/C;AAEA,WAAK,mBAAL,GAA2B,KAAK,0BAAL,CAAgC,CAAhC,CAA3B;AACA,WAAK,iCAAL,GARwI,CASxI;AACD,KAVD;AAYA,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,UAAL,GAAkB,IAAlB;AACD;;AAED,oBAAkB,CAAC,MAAD,EAAY;;;AAC5B,SAAK,sBAAL,GAA8B,IAA9B;;AAEA,QAAI,MAAM,IAAI,CAAC,CAAf,EAAkB;AAChB,UAAI,KAAK,YAAL,CAAkB,KAAtB,EAA6B;AAC3B,aAAK,OAAL,CAAa,IAAb;AACA,YAAI,WAAW,GAAG;AAChB,YAAE,EAAE,KAAK,aAAL,CAAmB,EADP;AAEhB,iBAAO,EAAE,WAAK,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE,KAFP;AAGhB,kBAAQ,EAAE,MAHM;AAIhB,oBAAU,EAAE,KAAK,MAJD;AAKhB,0BAAgB,EAAC,KAAK;AALN,SAAlB;AASA,aAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,MAAL,CAAY,cAAZ,KAA+B,gCAApD,EAAsF,WAAtF,EAAmG,SAAnG,CAA8G,IAAD,IAAc;AACzH,eAAK,OAAL,CAAa,IAAb;AACA,eAAK,mBAAL,CAAyB,6BAAzB;AACA,eAAK,YAAL;AACD,SAJD;AAKD,OAhBD,MAiBK;AACH,aAAK,sBAAL,GAA8B,KAA9B;AACA,mBAAK,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE,aAAF,EAAZ;AACA,aAAK,iBAAL;AACD;AACF,KAvBD,MAwBK;AAEH;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA,WAAK,OAAL,CAAa,IAAb;AAEA,UAAI,WAAW,GAAG;AAChB,UAAE,EAAE,KAAK,aAAL,CAAmB,EADP;AAEhB,eAAO,EAAE,WAAK,OAAL,MAAY,IAAZ,IAAY,aAAZ,GAAY,MAAZ,GAAY,GAAE,KAFP;AAGhB,gBAAQ,EAAE,MAHM;AAIhB,kBAAU,EAAE,KAAK,MAJD;AAKhB,wBAAgB,EAAC,KAAK;AALN,OAAlB;AAQA,WAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,MAAL,CAAY,cAAZ,KAA+B,gCAApD,EAAsF,WAAtF,EAAmG,SAAnG,CAA8G,IAAD,IAAc;AACzH;AACA,aAAK,OAAL,CAAa,IAAb;AACA,aAAK,mBAAL,CAAyB,6BAAzB;AACA,aAAK,YAAL;AACD,OALD;AAMD;AACF;;AAMD,0BAAwB,CAAC,KAAD,EAAW;AACjC,SAAK,mBAAL,GAA2B,KAAK,0BAAL,CAAgC,KAAhC,CAA3B;AACA,SAAK,iCAAL;AACD;;AAED,4BAA0B,CAAC,KAAD,EAAW;AACnC,SAAK,mBAAL,GAA2B,KAAK,YAAL,CAAkB,KAAlB,CAA3B;AACA,SAAK,mCAAL;AACD;;AAED,uBAAqB;AACnB,SAAK,QAAL,GAAgB,EAAhB;AACA,SAAK,OAAL,GAAe,EAAf;AACA,SAAK,YAAL,GAAoB,EAApB;AACD;;AAID,wBAAsB;AACpB,SAAK,oBAAL,GAA4B,KAAK,eAAL,CAAqB,QAArB,CAA8B,YAA9B,CAA2C,KAA3C,CAAiD,gBAA7E;AACD;;AAED,mCAAiC;AAC/B,QAAI,KAAK,mBAAL,IAA4B,IAAhC,EAAsC;AACpC,WAAK,QAAL,GAAgB,KAAK,mBAAL,CAAyB,QAAzC;AACA,WAAK,OAAL,GAAe,KAAK,mBAAL,CAAyB,aAAxC;AACA,WAAK,YAAL,GAAoB,KAAK,mBAAL,CAAyB,cAA7C;AACD,KAJD,MAKK;AACH,WAAK,QAAL,GAAgB,EAAhB;AACA,WAAK,OAAL,GAAe,EAAf;AACA,WAAK,YAAL,GAAoB,EAApB;AACD;AAEF;;AAED,qCAAmC;AACjC,QAAI,KAAK,mBAAL,IAA4B,IAAhC,EAAsC;AACpC,WAAK,QAAL,GAAgB,KAAK,mBAAL,CAAyB,SAAzC;AACA,WAAK,OAAL,GAAe,KAAK,mBAAL,CAAyB,iBAAxC;AACA,WAAK,YAAL,GAAoB,KAAK,mBAAL,CAAyB,aAA7C;AACD,KAJD,MAKK;AACH,WAAK,QAAL,GAAgB,EAAhB;AACA,WAAK,OAAL,GAAe,EAAf;AACA,WAAK,YAAL,GAAoB,EAApB;AACD;AACF;;AAED,aAAW,CAAC,IAAD,EAAU;AACnB,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,MAAL,CAAY,cAAZ,KAA+B,6BAA/B,GAA+D,IAAhF,EAAsF,SAAtF,CAAiG,IAAD,IAAc;AAC5G,WAAK,aAAL,GAAqB,IAAI,CAAC,IAA1B;AACA,WAAK,aAAL,CAAmB,GAAnB,CAAwB,CAAD,IAAU;AAAG,SAAC,CAAC,gBAAF,GAAqB,CAAC,CAAC,YAAF,GAAiB,IAAjB,GAAwB,CAAC,CAAC,YAA1B,GAAyC,GAA9D;AAAmE,eAAO,CAAP;AAAW,OAAlH;AACD,KAHD;AAID;;AAED,SAAO;AACL,SAAK,OAAL,CAAa,IAAb;AACA,QAAI,WAAW,GAAG;AAChB,QAAE,EAAE,KAAK,aAAL,CAAmB,EADP;AAEhB,cAAQ,EAAE,CAFM;AAGhB,gBAAU,EAAE,KAAK,MAHD;AAIhB,sBAAgB,EAAC,KAAK;AAJN,KAAlB;AAOA,SAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,MAAL,CAAY,cAAZ,KAA+B,gCAApD,EAAsF,WAAtF,EAAmG,SAAnG,CAA8G,IAAD,IAAc;AACzH,WAAK,OAAL,CAAa,IAAb;AACA,WAAK,mBAAL,CAAyB,2BAAzB;AACA,WAAK,YAAL;AACD,KAJD;AAKD;;AAED,gCAA8B;;;AAC5B,QAAG,KAAK,YAAL,CAAkB,MAAlB,IAA2B,CAA9B,EAAgC;AAC9B,UAAI,QAAQ,GAAG,KAAK,YAAL,CAAkB,IAAjC;;AACE,UAAG,QAAQ,IAAI,KAAf,EAAqB;AACnB,YAAG,YAAK,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE,KAAjB,KAA0B,IAA7B,EAAkC;AAChC,cAAI,gBAAgB,GAAG,eAAc,WAAK,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE,KAAF,CAAQ,gBAArC,IAAuD,QAA9E;AACA,cAAI,mBAAmB,GAAG,WAAK,UAAL,MAAe,IAAf,IAAe,aAAf,GAAe,MAAf,GAAe,GAAE,KAAF,CAAQ,cAAjD;AACA,cAAI,UAAU,GAAG;AACf,uBAAW,EAAE,gBADE;AAEf,0BAAc,EAAE;AAFD,WAAjB;AAKA,eAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,MAAL,CAAY,cAAZ,KAA+B,oCAApD,EAA0F,UAA1F,EAAsG,SAAtG,CAAiH,IAAD,IAAc;;;AAC5H,gBAAG,IAAI,CAAC,OAAL,IAAgB,IAAnB,EAAwB;AACtB,mBAAK,0BAAL,GAAkC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,WAA/C;AACA,mBAAK,yBAAL,GAAiC,IAAI,CAAC,IAAL,CAAU,CAAV,EAAa,sBAA9C;AACA,yBAAK,mBAAL,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAE,QAAF,CAAW,KAAK,0BAAhB,CAAxB;AACA,mBAAK,oBAAL,GAA4B,IAA5B;AACA,qBAAO,CAAC,GAAR,CAAY,qBAAZ,EAAkC,WAAK,eAAL,CAAqB,GAArB,CAAyB,qBAAzB,OAA+C,IAA/C,IAA+C,aAA/C,GAA+C,MAA/C,GAA+C,GAAE,KAAnF;AACD,aAND,MAOI;AACF,yBAAK,mBAAL,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAE,QAAF,CAAW,EAAX,CAAxB;AACA,mBAAK,oBAAL,GAA4B,IAA5B;AACA,qBAAO,CAAC,GAAR,CAAY,qBAAZ,EAAkC,WAAK,eAAL,CAAqB,GAArB,CAAyB,qBAAzB,OAA+C,IAA/C,IAA+C,aAA/C,GAA+C,MAA/C,GAA+C,GAAE,KAAnF;AACD;AACF,WAbD;AAcD;AACF;AACJ;AACF;;AAED,0BAAwB;AACtB,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,MAAL,CAAY,cAAZ,KAA+B,sCAAhD,EAAwF,SAAxF,CAAmG,IAAD,IAAc;AAC9G,WAAK,qBAAL,GAA6B,IAAI,CAAC,IAAlC;AACA,WAAK,cAAL,GAAsB,EAAtB;AACA,WAAK,MAAL,GAAc,EAAd;AACA,WAAK,YAAL,GAAoB,EAApB;AACA,WAAK,0BAAL,GAAkC,EAAlC;AACA,WAAK,mBAAL,GAA2B,EAA3B;AACD,KAPD;AAQD;;AAED,yBAAuB;AACrB,SAAK,cAAL,GAAsB,EAAtB;AACA,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,YAAL,GAAoB,EAApB;AACA,SAAK,0BAAL,GAAkC,EAAlC;AACA,SAAK,mBAAL,GAA2B,EAA3B;;AACA,QAAG,KAAK,yBAAL,IAAkC,IAArC,EAA0C;AACxC,WAAK,WAAL,CAAiB,KAAK,yBAAL,CAA+B,cAAhD;AACD;AACF;;AAjqByB;;;mBAAf,e,EAAe,oI,EAAA,gI,EAAA,mH,EAAA,wH,EAAA,qI,EAAA,4H;AAAA,C;;;QAAf,e;AAAe,6B;AAAA;AAAA;gEAaf,sE,EAAY,C;gEACZ,4D,EAAO,C;;;;;;;;;;;;;;8EAnBP,CAAC;AACV,WAAO,EAAE,yEADC;AACuB,YAAQ,EAAE;AAAE,iCAA2B,EAAE;AAA/B;AADjC,GAAD,C;AAET,U;AAAA,S;AAAA,goP;AAAA;AAAA;ACzBJ;AACI;AAA0B;AAAW;AACzC;AACA;AA0KA;AAwdA;;;;AAroBqG;AAG/F;AAAA;AA0KA;AAAA;AAwdA;AAAA;;;;;;;;;;;;;;;;;;;;;ACroBN,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;ACXpyB;;;;;;;;;;ACnSA,e;;;;;;;;;;ACAA,e;;;;;;;;;;ACAA,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { Directive, HostBinding, Input, Optional, Self, OnDestroy, DoCheck } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { NgControl, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { untilDestroyed } from 'ngx-take-until-destroy';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\n\r\nexport class NgSelectErrorStateMatcher {\r\n    constructor(private ngSelect: NgSelectFormFieldControlDirective) {\r\n    }\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n        if (!control) {\r\n            return this.ngSelect.required && this.ngSelect.empty;\r\n        } else {\r\n            return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    // tslint:disable-next-line:directive-selector\r\n    selector: 'ng-select[ngSelectMat]',\r\n    providers: [{ provide: MatFormFieldControl, useExisting: NgSelectFormFieldControlDirective }],\r\n})\r\nexport class NgSelectFormFieldControlDirective implements MatFormFieldControl<any>, OnDestroy, DoCheck {\r\n    static nextId = 0;\r\n    @HostBinding() @Input() id = `ng-select-${NgSelectFormFieldControlDirective.nextId++}`;\r\n    @HostBinding('attr.aria-describedby') describedBy = '';\r\n\r\n\r\n\r\n    get empty(): boolean {\r\n        return (this.ngControl.value === undefined || this.ngControl.value === null)\r\n            || (this.host.multiple && this.ngControl.value.length === 0);\r\n    }\r\n    errorState = false;\r\n    @Input() errorStateMatcher!: ErrorStateMatcher;\r\n    private _defaultErrorStateMatcher: ErrorStateMatcher = new NgSelectErrorStateMatcher(this);\r\n    // controlType?: string;\r\n    // autofilled?: boolean;\r\n\r\n    stateChanges = new Subject<void>();\r\n    focused = false;\r\n\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty || !!(this.host.searchTerm && this.host.searchTerm.length);\r\n    }\r\n\r\n    @Input()\r\n    get placeholder(): string { return this._placeholder; }\r\n    set placeholder(value: string) {\r\n        this._placeholder = value;\r\n        this.stateChanges.next();\r\n    }\r\n    private _placeholder!: string;\r\n\r\n    @Input()\r\n    get required(): boolean { return this._required; }\r\n    set required(value: boolean) {\r\n        this._required = coerceBooleanProperty(value);\r\n        this.stateChanges.next();\r\n    }\r\n    private _required = false;\r\n\r\n    @Input()\r\n    get disabled(): boolean { return this._disabled; }\r\n    set disabled(value: boolean) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this.stateChanges.next();\r\n    }\r\n    private _disabled = false;\r\n\r\n    @Input()\r\n    get value(): any {\r\n        return this._value;\r\n    }\r\n    set value(v: any) {\r\n        this._value = v;\r\n        this.stateChanges.next();\r\n    }\r\n    private _value: any;\r\n\r\n    constructor(\r\n        private host: NgSelectComponent,\r\n        @Optional() @Self() public ngControl: NgControl,\r\n        @Optional() private _parentForm: NgForm,\r\n        @Optional() private _parentFormGroup: FormGroupDirective,\r\n    ) {\r\n        host.focusEvent.asObservable().pipe(untilDestroyed(this)).subscribe(v => {\r\n            this.focused = true;\r\n            this.stateChanges.next();\r\n        });\r\n        host.blurEvent.asObservable().pipe(untilDestroyed(this)).subscribe(v => {\r\n            this.focused = false;\r\n            this.stateChanges.next();\r\n        });\r\n\r\n\r\n        if (this.ngControl) {\r\n            this._value = this.ngControl.value;\r\n            this._disabled = this.ngControl.disabled ? this.ngControl.disabled : false;\r\n            this.ngControl.statusChanges?.pipe(untilDestroyed(this)).subscribe(s => {\r\n                const disabled = s === 'DISABLED';\r\n                if (disabled !== this._disabled) {\r\n                    this._disabled = disabled;\r\n                    this.stateChanges.next();\r\n                }\r\n            });\r\n            this.ngControl.valueChanges?.pipe(untilDestroyed(this)).subscribe(v => {\r\n                this._value = v;\r\n                this.stateChanges.next();\r\n            });\r\n        } else {\r\n            host.changeEvent.asObservable().pipe(untilDestroyed(this)).subscribe(v => {\r\n                this._value = v;\r\n                this.stateChanges.next();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() { }\r\n\r\n    ngDoCheck() {\r\n\r\n        // We need to re-evaluate this on every change detection cycle, because there are some\r\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\r\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\r\n        this.updateErrorState();\r\n\r\n    }\r\n\r\n    updateErrorState() {\r\n        const oldState = this.errorState;\r\n        const parent = this._parentFormGroup || this._parentForm;\r\n        const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n        const control = this.ngControl ? this.ngControl.control as FormControl : null;\r\n        const newState = matcher.isErrorState(control, parent);\r\n\r\n        if (newState !== oldState) {\r\n            this.errorState = newState;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n\r\n    setDescribedByIds(ids: string[]): void {\r\n        if (ids) {\r\n            this.describedBy = ids.join(' ');\r\n        }\r\n    }\r\n\r\n    onContainerClick(event: MouseEvent): void {\r\n        const target = event.target as HTMLElement;\r\n        if (target.classList.contains('mat-form-field-infix')) {\r\n            this.host.focus();\r\n            this.host.open();\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './common/auth.guard';\nimport { AdminLayoutComponent } from './layout/admin-layout/admin-layout.component';\nimport { LoginLayoutComponent } from './layout/login-layout/login-layout.component';\nimport { LoginComponent } from './login/login.component';\nimport { RoleComponent } from './user-management/role/role.component';\nimport { UserComponent } from './user-management/user/user.component';\nimport { UIRoleComponent } from './user-management/ui-role/ui-role.component';\n//import { LayoutComponent } from './layout/layout.component';\n//import { MiscReceiptComponent } from './misc-receipt/misc-receipt.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'ltc/login', pathMatch: 'full'},\n\n  {\n    path: 'ltc',\n    component: LoginLayoutComponent,\n    children: [\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: 'login', component: LoginComponent }\n    ]\n  },\n  {\n    path: 'ltc',\n    component: AdminLayoutComponent,\n    children: [\n      { path: 'asset', component: WizardComponent } ,\n      { path: 'user', component: UserComponent } ,\n      { path: 'role', component: RoleComponent } ,\n      { path: 'uiroleconfig', component: UIRoleComponent } ,\n      //{ path: '', loadChildren: () => import('./user-management/user.module').then(m => m.UserModule) },\n    ],\n    canActivate: [AuthGuard]\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<!-- <app-nav-bar fxLayout=\"row\"></app-nav-bar> -->\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// Mat-UI Modules \r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\n// FlexLayout\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n// Multiselect\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// Custom Componenets\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\n//import { LayoutComponent } from './layout/layout.component';\r\n//import { MiscReceiptComponent } from './misc-receipt/misc-receipt.component';\r\nimport { WizardComponent } from './wizard/wizard.component';\r\nimport { NgSelectFormFieldControlDirective } from 'src/Util/ng-select.directive';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginLayoutComponent } from './layout/login-layout/login-layout.component';\r\nimport { AdminLayoutComponent } from './layout/admin-layout/admin-layout.component';\r\n//import { SidebarComponent } from './side-bar/sidebar.component';\r\n//import { UserManagementComponent } from './user-management/user-management.component';\r\nimport { RoleComponent } from './user-management/role/role.component';\r\nimport { UserComponent } from './user-management/user/user.component';\r\nimport { UIRoleComponent } from './user-management/ui-role/ui-role.component';\r\n\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    //SidebarComponent,\r\n    LoginLayoutComponent,\r\n    AdminLayoutComponent,\r\n    //MiscReceiptComponent,\r\n    LoginComponent,\r\n    WizardComponent,\r\n    UserComponent,\r\n    RoleComponent,\r\n    UIRoleComponent,\r\n    NgSelectFormFieldControlDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    // Mat-UI\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatRippleModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    \r\n    // FlexLayout\r\n    FlexLayoutModule,\r\n\r\n    // Multiselect\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 10000,\r\n      preventDuplicates: true,\r\n    }),\r\n    NgxSpinnerModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        let url: string = state.url;\r\n        return this.verifyLogin(url)!;\r\n    }\r\n\r\n    verifyLogin(url: any) {\r\n        if (!this.isLoggedIn()) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public isLoggedIn(): boolean {\r\n        let status = false;\r\n        if (localStorage.getItem('isLoggedIn') == 'true') {\r\n            status = true;\r\n        }\r\n        else {\r\n            status = false;\r\n        }\r\n        return status;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\nconstructor (){}\r\n\r\nlogout(): void {\r\n    localStorage.setItem('isLoggedIn', \"false\");\r\n    localStorage.removeItem('userLoggedIn');\r\n    localStorage.removeItem('menuItems');\r\n    localStorage.removeItem('Type');\r\n    localStorage.removeItem('TypeId');\r\n    localStorage.removeItem('Clone');\r\n    localStorage.removeItem('GroupId');\r\n}\r\n}","export const ExtensionType: any[] = [\r\n    {Id:  1, Code: 'CSV' },\r\n    {Id:  2, Code: 'TXT' },\r\n    {Id:  3, Code: 'XLS' },\r\n    {Id:  4, Code: 'XLSX' } \r\n];\r\n\r\nexport enum KEY_CODE{\r\n    A_KEY = 65,\r\n    B_KEY = 66,\r\n    U_KEY = 85,\r\n    S_KEY = 83,\r\n    X_KEY = 88,\r\n    R_KEY = 82,\r\n    V_KEY = 86,\r\n    C_KEY = 67,\r\n};\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable ({\r\n    providedIn: 'root'\r\n})\r\nexport class ExcelService {\r\n\r\n    constructor () {}\r\n\r\n    public exportASExcelFile (json: any[], excelFileName: string): void{\r\n        const exportData:any[] = [];\r\n        json.forEach(function(value) {\r\n            const rowdata:any = {};\r\n            for (const prop in value){\r\n                if(prop !== 'Id' && prop !== 'StatusId' && prop !== 'CreatedBy') {\r\n                    rowdata[prop] =value[prop];\r\n                }}\r\n                exportData.push(rowdata);            \r\n        });\r\n        const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(exportData);\r\n        const workbook:  XLSX.WorkBook = { Sheets: {'data' : worksheet}, SheetNames: ['data']};\r\n        const excelBuffer:any = XLSX.write(workbook, {bookType: 'xlsx', type: 'array' });\r\n        this.saveAsExcelFile(excelBuffer, excelFileName);\r\n    }\r\n\r\n    private saveAsExcelFile(buffer: any, fileName: string) : void {\r\n        const data : Blob =  new Blob([buffer], {\r\n            type: EXCEL_TYPE\r\n        });\r\n        FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n    }\r\n}","import {Renderer2 } from '@angular/core';\r\nimport {Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-flexy-column',\r\n    template: ''\r\n})\r\n\r\nexport class FlexyColumnComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(private rederer: Renderer2){ }\r\n\r\n    colObj: any;\r\n    pressed = false;\r\n    currentResizeIndex : number = 0;\r\n    startX: number = 0;\r\n    startWidth: number = 0;\r\n    isResizingRight: boolean =false;\r\n    // resizableMousemove: () => void;\r\n    // resizableMouseup: () => void;\r\n    resizableMousemove() {} ;\r\n    resizableMouseup() {};\r\n    displayedColumns : string[] = [];\r\n\r\n    ngOnInit(){\r\n\r\n    }\r\n\r\n    ngOnDestroy(){}\r\n\r\n    setTableResize( tableWidth: number, columns: any){\r\n        this.colObj = columns;\r\n        let totWidth = 0;\r\n        columns.forEach((column:any) => {\r\n            totWidth += columns.width;\r\n        });\r\n\r\n        const scale = (tableWidth - 5) /totWidth;\r\n        columns.forEach((column:any) => {\r\n            column.width *= scale;\r\n            this.setColumnWidth(column);\r\n        });\r\n    }\r\n\r\n    setDisplayedColumns(columns:any ) {\r\n        this.colObj = columns;\r\n        columns.forEach((column:any, index:any) => {\r\n        column.index = index;\r\n        this.displayedColumns[index] = column.field;        \r\n        });\r\n        return this.displayedColumns;\r\n    }\r\n\r\n    public onResizeColumn (event: any, index: number, matTableRef: any){\r\n        this.checkResizing(event, index, matTableRef);\r\n        this.currentResizeIndex = index;\r\n        this.pressed = true;\r\n        this.startX = event.pageX;\r\n        this.startWidth = event.target.clientWidth;\r\n        event.preventDefault();\r\n        this.mouseMove(index);\r\n    }\r\n\r\n    checkResizing(event:any, index:any, matTableRef: any) {\r\n        const cellData = this.getCellData(index, matTableRef);\r\n        if((index === 0) || (Math.abs(event.pageX - cellData.right) < cellData.width / 2 && index !== this.colObj.length - 1)){\r\n            this.isResizingRight = true;\r\n        }else{\r\n            this.isResizingRight = false;\r\n        }\r\n    }\r\n\r\n    getCellData(index: number, matTableRef: any){\r\n        const headerRow = matTableRef.nativeElement.children[0];\r\n        const cell = headerRow.children[index];\r\n        return cell.getBoundingClientRect();\r\n    }\r\n\r\n    mouseMove(index: number){\r\n        this.resizableMousemove = this.rederer.listen('document', 'mousemove', (event) => {\r\n            if(this.pressed && event.buttons){\r\n                const dx = (this.isResizingRight) ? (event.pageX - this.startX) : (-event.pageX + this.startX);\r\n                const width = this.startWidth + dx;\r\n                if(this.currentResizeIndex === index && width > 50){\r\n                    this.setColumnWidthChanges(index, width);\r\n                }\r\n            }\r\n        });\r\n        this.resizableMouseup = this.rederer.listen('document', 'mouseup', (event) => {\r\n            if(this.pressed){\r\n                this.pressed = false;\r\n                this.currentResizeIndex = -1;\r\n                this.resizableMousemove();\r\n                this.resizableMouseup();\r\n            }\r\n        });\r\n    }\r\n\r\n    setColumnWidthChanges(index: number, width: number) {\r\n\r\n        const orgWidth = this.colObj[index].width;\r\n        const dx = width = orgWidth;\r\n        if(dx !== 0){\r\n            const j = (this.isResizingRight) ? index + 1 : index - 1;\r\n            const newWidth = this.colObj[j].width - dx;\r\n            if(newWidth > 50){\r\n                this.colObj[index].width = width;\r\n                this.setColumnWidth(this.colObj[j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    setColumnWidth(column: any){\r\n        const columnEls = Array.from(document.getElementsByClassName('mat-column-' + column.field));\r\n        columnEls.forEach((el:any) => {\r\n            el.style.width = column.width + 'px';\r\n        });\r\n    }\r\n}","import {Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Global {\r\n\r\n    private apiendpoint: string = 'http://localhost:1339/';\r\n\r\n    private apiendpoint_sit: string = '';\r\n\r\n    private apiendpoint_uat: string = '';\r\n    \r\n    private apiendpoint_live: string = '';\r\n    \r\n    getapiendpoint (){return this.apiendpoint; }\r\n\r\n    getUIObj(path:any){\r\n        var menudata = JSON.parse(localStorage.getItem(\"menuItems\")!);\r\n        \r\n        for(var item = 0; item < menudata.length; item++){\r\n            if(menudata[item].Path === path){\r\n                return menudata[item];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // IsCentralAccess()\r\n    // {\r\n    //     var userLoggedIn = JSON.parse(localStorage.getItem('userLoggedIn'));\r\n    //     var role = userLoggedIn.UserRoles.find(o => o.RoleId == userLoggedIn.DefaultRoleId);\r\n    //     if(role.Role.IsCentralAccess){\r\n    //         return true;\r\n    //     }else{\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    // IsLOBWiseAccess()\r\n    // {\r\n    //     var userLoggedIn = JSON.parse(localStorage.getItem('userLoggedIn'));\r\n    //     var role = userLoggedIn.UserRoles.find(o => o.RoleId == userLoggedIn.DefaultRoleId);\r\n    //     if(role.Role.IsLOBWiseAccess){\r\n    //         return true;\r\n    //     }else{\r\n    //         return false;\r\n    //     }\r\n    // }\r\n    \r\n}","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n  \r\n  constructor() {}\r\n\r\n  ngOnInit(){}\r\n \r\n}\r\n","<!-- <div class=\"wrapper\">\r\n    <div class=\"sidebar\" data-color=\"red\">\r\n        <app-sidebar></app-sidebar>\r\n    </div>\r\n    <div class=\"main-panel\"> -->\r\n        <app-nav-bar fxLayout=\"row\"></app-nav-bar>\r\n        <router-outlet></router-outlet>\r\n    <!-- </div>\r\n</div> -->","import {Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-login-layout',\r\n    templateUrl: './login-layout.component.html',\r\n    styleUrls: ['./login-layout.component.scss']\r\n})\r\nexport class LoginLayoutComponent implements OnInit {\r\n\r\n    constructor() {}\r\n    ngOnInit(){}\r\n}\r\n","<div style=\"background-color: #68B9BC;\"> </div>\r\n<router-outlet></router-outlet>\r\n\r\n","import { Injectable } from '@angular/core';  \r\nimport { HttpClient  } from '@angular/common/http';  \r\n  \r\n@Injectable({  \r\n  providedIn: 'root'  \r\n})  \r\nexport class IpServiceService  {  \r\n  \r\n  constructor(private http:HttpClient) { }  \r\n  public getIPAddress()  \r\n  {  \r\n    return this.http.get(\"http://api.ipify.org/?format=json\");  \r\n  }  \r\n}","import { Component, ElementRef, OnInit, ViewChild, DoCheck } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Global } from '../common/global';\r\nimport { AuthService } from '../common/auth.service';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n// import { Toastr } from '../common/toastr';\r\nimport { RestService } from '../services/rest.service';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n// import { get } from 'https';\r\nimport { IpServiceService } from './IP-service.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    @ViewChild(\"name\", { static: true }) nameField!: ElementRef;\r\n\r\n    Login_NewUser!: FormGroup;\r\n    Login_ExistingUser!: FormGroup;\r\n    Login_ExistingPartner!: FormGroup;\r\n\r\n    hide = true;\r\n    NewUser: boolean = false;\r\n    ExistingUser: boolean = false;\r\n    ExistingPartner: boolean = false;\r\n    DvPOtp: boolean = false;\r\n\r\n    VerifyMobile: boolean = false;\r\n    VerifyEmail: boolean = false;\r\n    EmailBtnText: string = \"Verify Email\";\r\n    MobileBtnText: string = \"Verify Mobile\";\r\n    //public cData:any;\r\n\r\n    isverifyMobile: boolean = false;\r\n    submitted = false;\r\n    ipAddress: any;\r\n\r\n    constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router,\r\n        private global: Global, private authService: AuthService,\r\n        public dialog: MatDialog, private rest: RestService, private httpClient: HttpClient,\r\n        private ip: IpServiceService) { }\r\n\r\n    ngOnInit() {\r\n        // debugger;\r\n        this.nameField.nativeElement.focus();\r\n        this.Login_ExistingUser = this.formBuilder.group({\r\n            UserName: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9_]*'), Validators.maxLength(100)]],\r\n            Password: ['', [Validators.required, Validators.maxLength(100)]]\r\n        });\r\n\r\n        this.Login_NewUser = this.formBuilder.group({\r\n            fullName: ['', [Validators.required, Validators.pattern('^[a-zA-Z \\-\\']+'), Validators.maxLength(100)]],\r\n            pancard: ['', [Validators.required, Validators.pattern('^[A-Z]{5}[0-9]{4}[A-Z]{1}'), Validators.maxLength(10)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            MobileNo: ['', [Validators.required, Validators.pattern('^[0-9]+'), Validators.maxLength(10)]],  // ^[789]\\d{9}$\r\n            Id: ['']\r\n        });\r\n\r\n        this.Login_ExistingPartner = this.formBuilder.group({\r\n            P_Mobile: ['', [Validators.required, Validators.pattern('^[0-9]+'), Validators.maxLength(10)]],\r\n            P_OTP: ['', [Validators.required, Validators.maxLength(4)]]\r\n        });\r\n\r\n        this.authService.logout();\r\n        this.Login_ExistingUser.markAsUntouched();\r\n\r\n        // localStorage.setItem('PartnerID', JSON.stringify(\"\"));        \r\n        // localStorage.setItem('PartnerRegistrationOTP', JSON.stringify(\"\"));\r\n        // localStorage.setItem('PANNO', JSON.stringify(\"\"));        \r\n        this.ExistingUser = true;\r\n    }\r\n\r\n\r\n    IsExistingUser() {\r\n        this.ExistingUser = true;\r\n        this.NewUser = false;\r\n        this.ExistingPartner = false;\r\n    }\r\n\r\n    IsNewUser() {\r\n        this.NewUser = true;\r\n        this.ExistingUser = false;\r\n        this.ExistingPartner = false;\r\n    }\r\n\r\n    get UserName() { return this.Login_ExistingUser.get('UserName'); }\r\n    get Password() { return this.Login_ExistingUser.get('Password'); }\r\n\r\n    get Id() { return this.Login_NewUser.get('Id'); }\r\n    get fullName() { return this.Login_NewUser.get('fullName'); }\r\n    get pancard() { return this.Login_NewUser.get('pancard'); }\r\n    get email() { return this.Login_NewUser.get('email'); }\r\n    get MobileNo() { return this.Login_NewUser.get('MobileNo'); }\r\n\r\n    get P_Mobile() { return this.Login_ExistingPartner.get('P_Mobile'); }\r\n    get P_OTP() { return this.Login_ExistingPartner.get('P_OTP'); }\r\n\r\n    loginUser() {\r\n        var model = {\r\n            UserName: this.UserName?.value,\r\n            Password: this.Password?.value,\r\n            fullName: this.fullName?.value,\r\n            pancard: this.pancard?.value,\r\n            email: this.email?.value,\r\n            MobileNo: this.MobileNo?.value,\r\n            Id: this.Id?.value\r\n        };\r\n\r\n        this.rest.create(this.global.getapiendpoint() + 'Login/AuthenticateUser', model).subscribe((data: any) => {\r\n            if (data.Success) {\r\n                // console.log(data);\r\n                this.rest.getById(this.global.getapiendpoint() + 'menu/GetAllMenuById/', data.Data.DefaultRoleId).subscribe((menudata: any) => {\r\n                    localStorage.setItem('isLoggedIn', \"true\");\r\n                    localStorage.setItem('userLoggedIn', JSON.stringify(data.Data));\r\n                    localStorage.setItem('menuItems', JSON.stringify(menudata.Data));\r\n                    this.router.navigate(['/ltc/asset']);\r\n                });\r\n            }\r\n            else {\r\n                // this.toastr?.showNotification('top', 'right', data.Message, 'danger');\r\n            }\r\n        });\r\n    }\r\n\r\n    Clear() {\r\n        this.Login_NewUser.reset();\r\n        this.Login_NewUser.markAsUntouched();\r\n        this.fullName?.setValue('');\r\n        this.pancard?.setValue('');\r\n        this.MobileNo?.setValue('');\r\n        this.email?.setValue('');\r\n    }\r\n\r\n    CheckAPIFromNode() {\r\n        debugger;\r\n\r\n        this.ip.getIPAddress().subscribe((res: any) => {\r\n            this.ipAddress = res.ip;\r\n            //console.log(this.ipAddress);\r\n        });\r\n\r\n        //console.log(this.ipAddress);\r\n\r\n        // var ObjModel: any = {\r\n        //     path: '/NewTech/Bajaj/SendSMS',\r\n        //     data: JSON.stringify({\r\n        //         Mobile: \"7350251534\",\r\n        //         Body: \"Test\"\r\n        //     })\r\n        // };\r\n        // var apiUrl = 'Login/SavePartnerRegister';\r\n\r\n        // this.rest.create(this.global.getapiendpoint() + 'Login/PortalAPI', ObjModel).subscribe((data: any) => {\r\n        //     if (data.Data) {\r\n        //         this.toastr.showNotification('top', 'right', data.Message, 'danger');\r\n        //     }\r\n        //     else {\r\n        //         this.toastr.showNotification('top', 'right', data.Message, 'success');\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    SubmitPartnerLoginOtp() {\r\n        debugger;\r\n        var StoaredPLOtp = JSON.parse(localStorage.getItem('PLMobileOTP')!);\r\n        if (StoaredPLOtp != this.P_OTP?.value) {\r\n            // this.toastr.showNotification('top', 'right', \"Please enter correct OTP\", 'danger');\r\n        }\r\n        else {\r\n            var StoredPan = JSON.parse(localStorage.getItem('PANNO')!);\r\n\r\n            this.rest.getById(this.global.getapiendpoint() + 'Login/AuthenticatePartner/', StoredPan).subscribe((data: any) => {\r\n                if (data.Success) {\r\n                    this.rest.getById(this.global.getapiendpoint() + 'menu/GetAllMenuById/', \"1\").subscribe((menudata: any) => {\r\n                        localStorage.setItem('isLoggedIn', \"true\");\r\n                        localStorage.setItem('userLoggedIn', JSON.stringify(data.Data));\r\n                        localStorage.setItem('menuItems', JSON.stringify(menudata.Data));\r\n\r\n                        localStorage.removeItem('PLMobileOTP');\r\n                        localStorage.setItem('PLMobileOTP', \"\");\r\n\r\n                        this.router.navigate(['/ltc/asset']);\r\n                    });\r\n                }\r\n                else {\r\n                    // this.toastr.showNotification('top', 'right', data.Message, 'danger');\r\n                }\r\n            });\r\n        }\r\n    }\r\n}","<mat-card class=\"login\">\r\n\r\n    <form #form=\"ngForm\" autocomplete=\"off\" [formGroup]=\"Login_ExistingUser\">\r\n        <div [hidden]=\"!ExistingUser\">\r\n\r\n            <div class=\" \" fxLayout.xl=\"column\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n \r\n                <img [src]=\"'/assets/logo.jpg'\" class=\"profile-logo\" height=\"44px\" alt=\"\">\r\n                <br>\r\n\r\n                <mat-form-field fxFlex appearance=\"fill\" class=\"mat-margin\">\r\n                    <mat-label>User Name</mat-label>\r\n                    <input matInput placeholder=\" \" #name formControlName=\"UserName\" required>\r\n                    <mat-error *ngIf=\"UserName?.hasError('required')\">\r\n                        User Name is <strong>required</strong>\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"UserName?.hasError('pattern') && !UserName?.hasError('required')\">\r\n                        Please enter a valid User Name\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"UserName?.hasError('maxlength') && !UserName?.hasError('required')\">\r\n                        This field should have less than 100 characters\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field fxFlex appearance=\"fill\" class=\"mat-margin\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput placeholder=\" \" [type]=\"hide ? 'password' : 'text'\" formControlName=\"Password\"\r\n                        required>\r\n                    <mat-error *ngIf=\"Password?.hasError('required')\">\r\n                        Password is <strong>required</strong>\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"Password?.hasError('maxlength') && !Password?.hasError('required')\">\r\n                        This field should have less than 100 characters\r\n                    </mat-error>\r\n                </mat-form-field>\r\n \r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n \r\n                <div fxFlex fxLayoutAlign=\"end start\" fxLayoutGap=\"10px\">\r\n                    <button mat-flat-button color=\"primary\" class=\"login-btn\" type=\"submit\" [disabled]=\"Login_ExistingUser.invalid\" (click)=\"loginUser()\">\r\n                       LOGIN\r\n                    </button>\r\n \r\n                </div>\r\n \r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n\r\n</mat-card>","<mat-toolbar class=\"\" fxLayout=\"row wrap\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n    <div fxFlex=\"0 0 calc(20% - 20px)\">\r\n        <img [src]=\"'/assets/logo.jpg'\" class=\"profile-logo\" height=\"44px\" alt=\"\">\r\n    </div>\r\n    \r\n    <div fxFlex=\"0 0 calc(80% - 20px)\">\r\n        \r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\"  fxLayoutAlign=\"end center\">\r\n            <!-- <button *ngFor=\"let item of menuItems\" class=\"nav-tab\" fxHide.xs>\r\n                {{item.label}}\r\n            </button>\r\n            <button mat-icon-button [matMenuTriggerFor]=\"iconResponsive\" fxHide fxShow.xs>\r\n                <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #iconResponsive=\"matMenu\">\r\n                <ng-container *ngFor=\"let item of menuItems\">\r\n                    <button mat-menu-item>                 \r\n                        {{item.label}}\r\n                    </button>\r\n                    <mat-divider></mat-divider>\r\n                </ng-container>\r\n            </mat-menu> -->\r\n            \r\n            <button mat-icon-button style=\"padding-right: 12%\" routerLink=\"asset\">\r\n                Asset Details\r\n            </button>\r\n\r\n                <button *ngIf=\"userRole == 3\" mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"padding-right: 12%\">\r\n                    User Management <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\">\r\n                    <button mat-menu-item routerLink=\"user\">\r\n                    <mat-icon>people</mat-icon>\r\n                    <span>User</span>\r\n                    </button>\r\n                    <button mat-menu-item routerLink=\"role\">\r\n                        <mat-icon>person_add</mat-icon>\r\n                    <span>Role</span>\r\n                    </button>\r\n                    <button mat-menu-item routerLink=\"uiroleconfig\">\r\n                        <mat-icon>usb</mat-icon>\r\n                        <span>UI Configuration</span>\r\n                    </button>\r\n                </mat-menu>\r\n            \r\n            \r\n            \r\n            <div class=\"material-icons-outlined\" style=\"margin-bottom: 16px !important;\">\r\n                <div style=\"margin-bottom: 15px;margin-left: 10px;\" class=\"user-name\">Hello, <span>{{userName}}</span></div>\r\n                <!-- <a href=\"\" class=\"designation\">Project Manager</a> -->\r\n                \r\n            </div>\r\n            <button mat-icon-button class=\"profile-icon\">\r\n                <mat-icon [matMenuTriggerFor]=\"logout\" color=\"primary\">account_circle</mat-icon>\r\n            </button>\r\n            <mat-menu #logout=\"matMenu\" class=\"my-class\">\r\n                <button mat-menu-item>\r\n                    <a href=\"\">\r\n                        <mat-icon color=\"primary\">logout</mat-icon> Logout\r\n                    </a>\r\n                </button> \r\n            </mat-menu>\r\n            \r\n            <!-- <button mat-icon-button>\r\n                <mat-icon color=\"primary\">notifications</mat-icon>\r\n            </button> -->\r\n        </div>\r\n    </div>\r\n</mat-toolbar>\r\n\r\n\r\n<!-- <div>\r\n    \r\n</div>\r\n\r\n\r\n -->","import { Component, OnInit } from '@angular/core';\n \nexport interface MenuItem {\n  label: string;\n}\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  menuItems: MenuItem[] = [\n    {\n      label: 'Home', \n    },\n    {\n      label: 'Smartnet Network',\n    },\n    {\n      label: 'Solutions', \n    },\n    {\n      label: 'Locations', \n    },\n    {\n      label: 'Partners', \n    }\n  ];\n  \n  userLoggedIn:any\n  userName:any\n  userRole:any\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.userLoggedIn = JSON.parse(localStorage.getItem('userLoggedIn')!);\n    this.userName = this.userLoggedIn.EmpName;\n    this.userRole = this.userLoggedIn.DefaultRoleId;\n  }\n\n}\n","import {Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport {map, catchError, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type' : 'application/json'\r\n    })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n    constructor (private http: HttpClient) {}\r\n    getAll(endpoint: string ): Observable<any> {\r\n        return this.http.get(endpoint).pipe(catchError (this.handleError()));\r\n    }\r\n\r\n    getById(endpoint: string, Id:string) : Observable<any>{\r\n        return this.http.get( endpoint + Id).pipe(catchError(this.handleError()));\r\n    }\r\n\r\n    create(endpoint: string, model: any): Observable<any>{\r\n        return this.http.post(endpoint, model, httpOptions).pipe(catchError(this.handleError()));\r\n    }\r\n\r\n    postParams(endpoint: string, params: any): Observable<any>{\r\n        return this.http.post(endpoint, params, httpOptions).pipe (catchError(this.handleError()));\r\n    }\r\n\r\n    checkDuplicate(endpoint: string, Value:string, Id: string): Observable<any>{\r\n        return this.http.get(endpoint + Value + '/' + Id).pipe(catchError(this.handleError()));\r\n    }\r\n\r\n    checkDuplicateParam(endpoint: string, Value:string): Observable<any>{\r\n        return this.http.get(endpoint + Value).pipe(catchError(this.handleError()));\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T){\r\n        return (error: any) : Observable<T> => {\r\n            console.error(error);\r\n            return of(result as T);\r\n        };\r\n    }\r\n}","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RestService } from '../../services/rest.service';\r\nimport { Global } from '../../common/global';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n//import { MatPaginatorModule, MatTableDataSource, MatSortModule, MatTableModule } from '@angular/material';\r\n// import { MatPaginatorModule} from '@angular/material/paginator';\r\n// import {  MatSortModule } from '@angular/material/sort';\r\n// import {  MatTableModule } from '@angular/material/table';\r\n// import {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n// import {MatTableDataSource} from \"@angular/material/table\";\r\nimport { Location } from '@angular/common';\r\nimport { ExcelService } from '../../common/excel.service';\r\nimport { KEY_CODE } from '../../common/constant';\r\nimport { FlexyColumnComponent } from '../../common/flexy-column.component';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n@Component({\r\n    selector: 'app-role',\r\n    templateUrl: './role.component.html',\r\n    styleUrls: ['./role.component.scss']\r\n})\r\nexport class RoleComponent implements OnInit, AfterViewInit {\r\n\r\n    //@ViewChild(MatTableModule, { static: true, read: ElementRef }) private matTableRef!: ElementRef;\r\n    RoleForm!: FormGroup;\r\n    RoleList: boolean = false;\r\n    RoleCreate: boolean = false;\r\n    @ViewChild('topdiv', { static: true, read: ElementRef } ) topdiv!: ElementRef; \r\n    userLoggedIn: any;\r\n    location: Location;\r\n    UIObj: any;\r\n    IsMaker: boolean = false;\r\n    IsExport: boolean = false;\r\n    IsEdit: boolean = false;\r\n\r\n    //@ViewChild(MatPaginatorModule, { static: true }) paginator!: MatPaginatorModule;\r\n    //@ViewChild(MatSortModule, { static: true }) sort!: MatSortModule;\r\n    @ViewChild('form', { static: true }) form:any;\r\n\r\n    @ViewChild(FlexyColumnComponent, { static: true }) flexyColumn!: FlexyColumnComponent;\r\n\r\n    displayedColumns: string[] = ['Id', 'Code', 'Desc', 'IsCentralAccess','IsActive'];\r\n    dataSource:any;\r\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n    @ViewChild(MatSort) sort!: MatSort;\r\n\r\n    //dataSource:any;\r\n\r\n    //displayedColumns: string[] = [];\r\n    // columns: any[] = [\r\n    //     { field: 'Id', width: 5 }, { field: 'Code', width: 30 }, { field: 'Desc', width: 60 } ,\r\n    //      { field: 'IsCentralAccess', width: 5 }, { field: 'IsActive', width: 5 }\r\n    // ];\r\n\r\n    constructor(location: Location, private formBuilder: FormBuilder, private rest: RestService, private route: ActivatedRoute, private router: Router,\r\n        private global: Global, private excelService: ExcelService) {\r\n        this.location = location;\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        //this.displayedColumns = this.flexyColumn.setDisplayedColumns(this.columns);\r\n\r\n        var path = this.location.prepareExternalUrl(this.location.path());\r\n        if (path.charAt(0) === '#') {\r\n            path = path.slice(2);\r\n        }\r\n        this.UIObj = this.global.getUIObj(path);\r\n        this.IsMaker = this.UIObj.UIRoles[0].Maker;\r\n        this.IsExport = this.UIObj.UIRoles[0].Export;\r\n        this.IsEdit = this.UIObj.UIRoles[0].Edit;\r\n\r\n        this.RoleForm = this.formBuilder.group({\r\n            Id: [''],\r\n            Code: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9\\\\s\\\\(\\\\)\\\\-&.\\\\\\\\,/_]*'), Validators.maxLength(100)]],\r\n            Desc: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9\\\\s\\\\(\\\\)\\\\-&.\\\\\\\\,/_]*'), Validators.maxLength(2000)]],\r\n            IsActive: [''],\r\n            IsCentralAccess: ['']\r\n        });\r\n\r\n        this.getAllRoles();\r\n        this.userLoggedIn = JSON.parse(localStorage.getItem('userLoggedIn')!);\r\n    }\r\n\r\n    get Id() { return this.RoleForm.get('Id'); }\r\n    get Code() { return this.RoleForm.get('Code'); }\r\n    get Desc() { return this.RoleForm.get('Desc'); }\r\n    get IsActive() { return this.RoleForm.get('IsActive'); }\r\n    get IsCentralAccess() { return this.RoleForm.get('IsCentralAccess'); } \r\n\r\n    getAllRoles() {\r\n        this.rest.getAll(this.global.getapiendpoint() + 'role/GetAllRole').subscribe((data: any) => {\r\n\r\n            let tableData:any = [];\r\n            data.Data.forEach((element:any) => {\r\n                tableData.push({ Id: element.Id, Code: element.Code, Desc: element.Desc, \r\n                IsCentralAccess: element.IsCentralAccess ? \"Yes\" : \"No\",\r\n                IsActive: element.IsActive ? \"Active\" : \"Inactive\" });\r\n            });\r\n\r\n            this.dataSource = new MatTableDataSource(tableData);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n        });\r\n        this.RoleCreate = false;\r\n        this.RoleList = true;\r\n    }\r\n\r\n    // applyFilter(filterValue: string) {\r\n    //     this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    // }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    \r\n        if (this.dataSource.paginator) {\r\n          this.dataSource.paginator.firstPage();\r\n        }\r\n      }\r\n\r\n    createRole() {\r\n        //this.form.resetForm();\r\n        this.RoleForm.reset();\r\n        this.RoleForm.markAsUntouched();\r\n        this.Code?.enable();\r\n        this.Id?.setValue('');\r\n        this.IsActive?.setValue(true);\r\n        this.RoleCreate = true;\r\n        this.RoleList = false;\r\n    }\r\n\r\n    backRole() {\r\n        this.RoleCreate = false;\r\n        this.RoleList = true;\r\n        this.topdiv.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    updateRole(Id: string) {\r\n\r\n        this.rest.getById(this.global.getapiendpoint() + 'role/GetRoleById/', Id).subscribe((data: any) => {\r\n\r\n            this.Id?.setValue(data.Data.Id);\r\n            this.Code?.setValue(data.Data.Code);\r\n            this.Code?.disable();\r\n            this.Desc?.setValue(data.Data.Desc);\r\n            this.IsActive?.setValue(data.Data.IsActive);\r\n            this.IsCentralAccess?.setValue(data.Data.IsCentralAccess);\r\n            this.RoleCreate = true;\r\n            this.RoleList = false;\r\n        });\r\n    }\r\n\r\n    exportRole() {\r\n        this.excelService.exportASExcelFile(this.dataSource.filteredData, 'Role');\r\n        //this.toastr.showNotification('top', 'right', 'Exported Successfully', 'success');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.flexyColumn.setTableResize(this.matTableRef.nativeElement.clientWidth, this.columns);\r\n    }\r\n\r\n    onResizeColumn(event: any, index: number) {\r\n        //this.flexyColumn.onResizeColumn(event, index, this.matTableRef);\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event:any) {\r\n        //this.flexyColumn.setTableResize(this.matTableRef.nativeElement.clientWidth, this.columns);\r\n    }\r\n\r\n    @HostListener('window:keyup', ['$event']) keyEvent(event: KeyboardEvent) {\r\n\r\n        if (event.altKey && event.keyCode == KEY_CODE.A_KEY) {\r\n            this.createRole();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.B_KEY) {\r\n            this.backRole();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.U_KEY) {\r\n            // this.uploadRole();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.S_KEY) {\r\n            this.saveRole();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.X_KEY) {\r\n            this.exportRole();\r\n        }\r\n    }\r\n\r\n    saveRole() {\r\n        this.rest.checkDuplicate(this.global.getapiendpoint() + 'role/CheckDuplicateRole/', this.Code?.value.toString().trim(),\r\n            (this.Id?.value !== '' ? this.Id?.value : '0')).subscribe((data: any) => {\r\n                if (data.Data) {\r\n                    //this.toastr.showNotification('top', 'right', data.Message, 'danger');\r\n                }\r\n                else {\r\n                    var model: any = {\r\n                        Id: this.Id?.value,\r\n                        Code: this.Code?.value.trim(),\r\n                        Desc: this.Desc?.value.trim(),\r\n                        IsActive: this.IsActive?.value,\r\n                        IsCentralAccess: this.IsCentralAccess?.value,\r\n                        UserId: this.userLoggedIn.Id,\r\n                        UserRoleId: this.userLoggedIn.DefaultRoleId\r\n                    };\r\n                    var apiUrl = '';\r\n                    if (this.Id?.value == '') {\r\n                        apiUrl = 'role/CreateRole';\r\n                    }\r\n                    else {\r\n                        apiUrl = 'role/UpdateRole';\r\n                    }\r\n                    this.rest.create(this.global.getapiendpoint() + apiUrl, model).subscribe((data: any) => {\r\n                        if (data.Success) {\r\n                            //this.toastr.showNotification('top', 'right', data.Message, 'success');\r\n                        }\r\n                        else {\r\n                           // this.toastr.showNotification('top', 'right', data.Message, 'danger');\r\n                        }\r\n                        this.getAllRoles();\r\n                    });\r\n                } \r\n            });\r\n    } \r\n}","<div #topdiv> </div>\r\n<!-- <app-flexy-column></app-flexy-column> -->\r\n\r\n<mat-card *ngIf=\"RoleList\" class=\" \" style=\"margin: 15px ;\">\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n        <h4 fxFlex class=\"header\">Role Master</h4>\r\n\r\n        <div fxFlex fxLayoutAlign=\"end center\">\r\n            <button mat-flat-button color=\"primary\" *ngIf=\"IsMaker\" title=\"Create (alt+c)\" (click)=\"createRole()\">\r\n                <mat-icon mat-list-icon>add</mat-icon> Add\r\n            </button>\r\n\r\n            <button mat-stroked-button color=\"primary\" *ngIf=\"IsExport\" title=\"Export (alt+x)\" (click)=\"exportRole()\">\r\n                <mat-icon mat-list-icon>file_download</mat-icon> Export\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n        <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n            <mat-label>Filter</mat-label>\r\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\" #input>\r\n            <mat-icon matSuffix>manage_search</mat-icon>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div class=\" \" fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n        fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\" class=\"table-responsive\">\r\n\r\n        <div class=\"mat-elevation-z0\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-table\">\r\n\r\n                <ng-container matColumnDef=\"Id\">\r\n                    <th mat-header-cell *matHeaderCellDef class=\"mat-header-cell\">\r\n                        <span *ngIf=\"IsEdit\"> Action </span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-cell\">\r\n\r\n                        <!-- <button *ngIf=\"IsEdit\" mat-stroked-button color=\"primary\" (click)=\"updateRole(element.Id)\"> -->\r\n                            <!-- <mat-icon mat-list-icon>file_download</mat-icon> Export -->\r\n                            <mat-icon *ngIf=\"IsEdit\" mat-stroked-button color=\"primary\" (click)=\"updateRole(element.Id)\">create</mat-icon>\r\n                        <!-- </button> -->\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Code\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Code </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-cell\">{{element.Code}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Desc\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Description </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-cell\">{{element.Desc}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"IsCentralAccess\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\">Central Access </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-cell\">{{element.IsCentralAccess}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"IsActive\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> IsActive </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-cell\">{{element.IsActive}}</td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter\r\n                        \"{{input.value}}\"</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\">\r\n    </mat-paginator>\r\n</mat-card>\r\n\r\n<mat-card *ngIf=\"RoleCreate\" class=\" \" style=\"margin: 15px ;\">\r\n\r\n\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n        <h4 fxFlex class=\"header\">Role Master</h4>\r\n    </div>\r\n\r\n    <form #form=\"ngForm\" autocomplete=\"off\" [formGroup]=\"RoleForm\">\r\n       \r\n        <mat-form-field class=\"example-full-width\" hidden>\r\n            <input matInput type=\"text\" formControlName=\"Id\">\r\n        </mat-form-field>\r\n\r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n            fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <div class=\" \" fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                <mat-form-field fxFlex appearance=\"fill\">\r\n                    <mat-label>Code</mat-label>\r\n                    <input matInput placeholder=\" \" type=\"text\" formControlName=\"Code\" required>\r\n                    <mat-error *ngIf=\"Code?.hasError('required')\">\r\n                        Code is <strong>required</strong>\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"Code?.hasError('pattern') && !Code?.hasError('required')\">\r\n                        Please enter a valid Code\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"Code?.hasError('maxLength')\">\r\n                        Code should have less than 100 characters\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <section class=\"example-section\">\r\n                    <mat-checkbox formControlName=\"IsCentralAccess\"> Is Central Access </mat-checkbox>\r\n                </section>\r\n\r\n                <section class=\"example-section\">\r\n                    <mat-checkbox formControlName=\"IsActive\"> Is Active </mat-checkbox>\r\n                </section>\r\n\r\n            </div>\r\n\r\n            <div class=\" \" fxFlex=\"0 0 calc(66.66%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                <mat-form-field fxFlex appearance=\"fill\">\r\n                    <mat-label>Description</mat-label>\r\n                    <textarea matInput formControlName=\"Desc\" required rows=\"6\" type=\"text\" required></textarea>\r\n                    <mat-error *ngIf=\"Desc?.hasError('required')\">\r\n                        Description is <strong>required</strong>\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"Desc?.hasError('pattern') && !Desc?.hasError('required')\">\r\n                        Please enter a valid Description\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"Desc?.hasError('maxLength')\">\r\n                        Description should have less than 2000 characters\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n            fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <div fxFlex fxLayoutAlign=\"end center\">\r\n\r\n                <button mat-flat-button color=\"primary\" type=\"submit\" matTooltip=\"Save (alt s)\"\r\n                    [disabled]=\"RoleForm.invalid\" (click)=\"saveRole()\">\r\n                    <mat-icon mat-list-icon>save</mat-icon> Save\r\n                </button>\r\n\r\n                <button mat-stroked-button color=\"primary\" type=\"reset\" matTooltip=\"Back (alt b)\" (click)=\"backRole()\">\r\n                    <mat-icon mat-list-icon>arrow_back</mat-icon> Back\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n\r\n</mat-card>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RestService } from '../../services/rest.service';\r\nimport { Global } from '../../common/global';\r\nimport { Validators, FormBuilder, FormGroup, AbstractControl, FormArray } from '@angular/forms';\r\nimport { MatPaginatorModule} from '@angular/material/paginator';\r\nimport {  MatSortModule } from '@angular/material/sort';\r\nimport {  MatTableModule } from '@angular/material/table';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\n//import {  MatTableDataSource } from '@angular/material';\r\nimport { KEY_CODE } from '../../common/constant'; \r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { RequireMatch } from '../../validators/requiredmatch.validator';\r\nimport { startWith , map} from 'rxjs/operators';\r\n\r\nexport interface GridRowObject {\r\n    UIId: number;\r\n    UI: string;\r\n    ParentId: string;\r\n    Viewer: boolean;\r\n    Maker: boolean;\r\n    Checker: boolean;\r\n    Edit: boolean;\r\n    Export: boolean;\r\n    Upload: boolean\r\n}\r\n\r\n@Component({\r\n    selector: 'app-ui-role',\r\n    templateUrl: './ui-role.component.html',\r\n    styleUrls: ['./ui-role.component.scss']\r\n})\r\nexport class UIRoleComponent implements OnInit {\r\n\r\n    // Type = [\r\n    //     { id: 1, name: 'SRN' },\r\n    //     { id: 2, name: 'CAM' }\r\n    //   ];\r\n      selectedType: any = [];\r\n\r\n    @ViewChild('form', {static: true}) form:any;\r\n    uiRoleMapStatus: string = 'create';\r\n    menuItems!: any[];\r\n    roleList!: any[];\r\n    displayedColumns = ['RoleId', 'Viewer', 'Maker', 'Checker', 'Edit', 'Export', 'Upload'];\r\n    UIRoleMapData!: GridRowObject [];\r\n    UIRoleMapDataSource = new MatTableDataSource(this.UIRoleMapData);\r\n    dataSource = new BehaviorSubject<AbstractControl[]>([]);\r\n    uimenus : any = [];\r\n    roles: any = [];\r\n    filteredUIMenu!: Observable<any[]>;\r\n    filteredRole!: Observable<any[]>;\r\n    isLoadingResults = false;\r\n    rows: FormArray = this.formBuilder.array([]);\r\n    UIRoleConfigForm: FormGroup = this.formBuilder.group({\r\n        RoleId: [''],\r\n        Role: ['', [Validators.required, RequireMatch]],\r\n        'UIRoleMap': this.rows\r\n    });\r\n    userLoggedIn : any;\r\n\r\n    constructor(private formBuilder: FormBuilder, private rest: RestService, private route: ActivatedRoute, private router: Router,\r\n        private global: Global) {      \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.userLoggedIn = JSON.parse(localStorage.getItem(\"userLoggedIn\")!);\r\n        this.getMenuList();\r\n        this.getRoleList();\r\n        this.UIRoleMapData = [];\r\n        this.UIRoleMapData.forEach((d: GridRowObject) => this.addRow (d, false));\r\n        this.updateView();\r\n        if(this.Role){\r\n            this.filteredRole = this.Role.valueChanges\r\n            .pipe(\r\n                startWith(null),\r\n                map((value: any | null) => {\r\n                    return value ? this._filterRoles(value) : this.roles.slice()\r\n                })\r\n            );\r\n        }\r\n        \r\n    } \r\n\r\n    emptyTable(){\r\n        while (this.rows.length !== 0){\r\n            this.rows.removeAt(0);\r\n        }\r\n    }\r\n\r\n    addRow(d?: GridRowObject, noUpdate?: boolean){\r\n        var uiTitle = this.uimenus.find ((x:any) => x.Id == d?.UIId);\r\n        uiTitle = uiTitle ? uiTitle.Title : '';\r\n        const row = this.formBuilder.group({\r\n            'UIId': [d && d.UIId ? d.UIId: null, []],\r\n            'UI': [d && uiTitle ? uiTitle: null, []],\r\n            'ParentId': [d && d.ParentId ? d.ParentId: null, []],\r\n            'Viewer': [d && d.Viewer ? d.Viewer: null, []],\r\n            'Maker': [d && d.Maker ? d.Maker: null, []],\r\n            'Checker': [d && d.Checker ? d.Checker: null, []],\r\n            'Edit': [d && d.Edit ? d.Edit: null, []],\r\n            'Export': [d && d.Export ? d.Export: null, []],\r\n            'Upload': [d && d.Upload ? d.Upload: null, []],\r\n        });\r\n        this.rows.push(row);\r\n        if(!noUpdate) { this.updateView();}\r\n    }\r\n    updateView(){\r\n        this.dataSource.next(this.rows.controls);\r\n    }\r\n\r\n    clearView(){\r\n        this.UIRoleMapData = [];\r\n        this.dataSource.next(this.rows.controls);\r\n    }\r\n\r\n    get RoleId () {return this.UIRoleConfigForm.get('RoleId'); }\r\n    get Role () {return this.UIRoleConfigForm.get('Role'); }\r\n\r\n    inputRole(role: any){\r\n        this.RoleId?.setValue(null);\r\n    }\r\n\r\n    onFocusRole(role: any){\r\n        if(this.Role){\r\n            this.filteredRole = this.Role.valueChanges\r\n            .pipe(\r\n                startWith(null),\r\n                map((value:any | null) => {\r\n                    return value ? this._filterRoles(value) : this.roles.slice()\r\n                })\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    selectedRole(event:any): void {\r\n        //console.log(event);\r\n        if(event != undefined){\r\n            this.RoleId?.setValue(event.Id);\r\n            this.loadUIRoleMapping(event.Id);\r\n        }\r\n        else{\r\n            this.emptyTable();\r\n            this.updateView();\r\n            this.UIRoleConfigForm.reset();\r\n            this.form.resetForm();\r\n            this.UIRoleConfigForm.markAsUntouched();\r\n        }\r\n        \r\n        // this.RoleId?.setValue(this.Role.Id);\r\n        // this.loadUIRoleMapping(role.Id);\r\n    }\r\n\r\n    clearRole(){\r\n        this.RoleId?.setValue(null);\r\n        this.Role?.setValue(null);\r\n        this.emptyTable();\r\n        this.updateView();\r\n        this.UIRoleConfigForm.reset();\r\n        this.form.resetForm();\r\n        this.UIRoleConfigForm.markAsUntouched();\r\n    }\r\n\r\n    private _filterRoles(value: any) : any {\r\n        const filterValue = (value ? (value.Code ? value.Code.toLowerCase() : value.toLowerCase()) : '');\r\n        return this.roles.filter((o:any) => o.Code.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    displayWithRole(obj?: any): string | undefined {\r\n        return obj ? obj.Code : undefined;\r\n    }\r\n\r\n    getMenuList(){\r\n        this.uimenus = [];\r\n        this.rest.getAll(this.global.getapiendpoint() + 'menu/GetAllActiveMenu/').subscribe((data : any) => {\r\n            this.uimenus = data.Data;\r\n        });\r\n    }\r\n\r\n    getRoleList(){\r\n        this.roleList = [];\r\n        this.rest.getAll(this.global.getapiendpoint() + 'role/GetAllActiveRole').subscribe(( data: any) => {\r\n            this.roleList = data.Data;\r\n            this.roles = data.Data;\r\n        });\r\n    }\r\n\r\n    saveUIRoleConfig(){\r\n        const UIRoleMap = this.UIRoleConfigForm.get('UIRoleMap')?.value;\r\n        const model: any = { \r\n            RoleId: this.RoleId?.value,\r\n            UIRoleMap: JSON.stringify(UIRoleMap),\r\n            UserId: this.userLoggedIn.Id,\r\n            UserRoleId: this.userLoggedIn.DefaultRoleId \r\n        }\r\n        this.rest.create(this.global.getapiendpoint() + 'uirolemap/CreateUIRoleMap', model).subscribe((data : any) => {\r\n            //this.toastr.showNotification('top', 'right', 'Mapping Successfully Added', 'success');\r\n            this.emptyTable();\r\n            this.updateView();\r\n            this.UIRoleConfigForm.reset();\r\n            this.form.resetForm();\r\n            this.UIRoleConfigForm.markAsUntouched();\r\n            //console.log(\"dataSource\",this.dataSource)\r\n        });\r\n    }\r\n\r\n    loadUIRoleMapping(roleId:any){\r\n        this.isLoadingResults = true;\r\n        this.emptyTable();\r\n        this.updateView();\r\n        this.rest.getById(this.global.getapiendpoint() + 'uirolemap/GetUIRoleMap/', roleId).subscribe((data: any) => {\r\n            if(data.Success == true){\r\n                if(data.Data.length !== 0) {\r\n                    this.uiRoleMapStatus = 'update';\r\n                    this.UIRoleMapData = data.Data;\r\n                    this.uimenus.forEach((menu:any) => {\r\n                        const UIRoleMap = this.UIRoleMapData.find(e => e.UIId === menu.Id);\r\n                        if(UIRoleMap){\r\n                            this.addRow({\r\n                                UIId : menu.Id,\r\n                                UI: menu.Title,\r\n                                ParentId: menu.ParentId,\r\n                                Viewer: UIRoleMap.Viewer,\r\n                                Maker: UIRoleMap.Maker,\r\n                                Checker: UIRoleMap.Checker,\r\n                                Edit: UIRoleMap.Edit,\r\n                                Export: UIRoleMap.Export,\r\n                                Upload: UIRoleMap.Upload\r\n                            }, false);\r\n                        } else {\r\n                            this.addRow ({\r\n                                UIId: menu.Id,\r\n                                UI: menu.Title,\r\n                                ParentId: menu.ParentId,\r\n                                Viewer: false,\r\n                                Maker: false,\r\n                                Checker: false,\r\n                                Edit: false,\r\n                                Export: false,\r\n                                Upload: false,\r\n                            }, false);\r\n                        }\r\n                    })\r\n                    this.updateView();\r\n                    this.isLoadingResults = false;\r\n                }\r\n                else{\r\n                    this.setDefaultData();\r\n                    this.updateView();\r\n                    this.uiRoleMapStatus = 'create';\r\n                }\r\n            }else {\r\n                console.error(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    setDefaultData(){\r\n        const menu_list = this.uimenus;\r\n        menu_list.forEach((d:any) => {\r\n            this.addRow({\r\n                UIId: d.Id,\r\n                UI: d.Title,\r\n                ParentId: d.ParentId,\r\n                Viewer: false,\r\n                Maker: false,\r\n                Checker: false,\r\n                Edit: false,\r\n                Export: false,\r\n                Upload : false\r\n            }, false)\r\n        });\r\n        this.updateView();\r\n    }\r\n\r\n    @HostListener('window:keyup', ['$event'])keyEvent(event: KeyboardEvent){\r\n        if(event.altKey && event.keyCode == KEY_CODE.S_KEY){\r\n            this.saveUIRoleConfig();\r\n        }\r\n    }\r\n\r\n}","<mat-card class=\" \" style=\"margin: 15px ;\">\r\n\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n        <h4 fxFlex class=\"header\">UI Role Config</h4>\r\n    </div>\r\n\r\n\r\n    <form #form=\"ngForm\" autocomplete=\"off\" [formGroup]=\"UIRoleConfigForm\">\r\n\r\n        <div class=\" \" fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n \r\n            <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                <mat-label>Role List <sup>*</sup></mat-label>\r\n                <ng-select ngSelectMat formControlName=\"Role\" (change)=\"selectedRole($event)\" [items]=\"roleList\"\r\n                    placeholder=\" \" bindLabel=\"Code\"></ng-select>\r\n            </mat-form-field>\r\n \r\n        </div>\r\n\r\n        <div *ngIf=\"this.rows.length != 0\" class=\" \" fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <div class=\"mat-elevation-z0\">\r\n                <mat-table #table [dataSource]=\"dataSource\" formArrayName=\"UIRoleMap\" class=\"mat-table\">\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row [ngClass]=\"{'child-menu': row.get('ParentId').value != '0' , \r\n                'parent-menu' : row.get('ParentId').value == '0' }\"\r\n                        *matRowDef=\"let row; let i= index; columns: displayedColumns;\">\r\n                    </mat-row>\r\n\r\n                    <ng-container matColumnDef=\"RoleId\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> UI Menus </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-form-field class=\"example-full-width\" hidden>\r\n                                <input matInput type=\"text\" formControlName=\"UIId\">\r\n                                <input matInput type=\"text\" formControlName=\"ParentId\">\r\n                            </mat-form-field>\r\n                            <input matInput placeholder=\"UI\" type=\"text\" formControlName=\"UI\">\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Viewer\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> Viewer </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-slide-toggle [checked]=\"element.Viewer\" color='custom' formControlName=\"Viewer\">\r\n                            </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Maker\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> Maker </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-slide-toggle [checked]=\"element.Maker\" color='custom' formControlName=\"Maker\">\r\n                            </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Checker\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> Checker </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-slide-toggle [checked]=\"element.Checker\" color='custom' formControlName=\"Checker\">\r\n                            </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Edit\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> Edit </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-slide-toggle [checked]=\"element.Edit\" color='custom' formControlName=\"Edit\">\r\n                            </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Export\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> Export </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-slide-toggle [checked]=\"element.Export\" color='custom' formControlName=\"Export\">\r\n                            </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Upload\">\r\n                        <mat-header-cell *matHeaderCellDef class=\"mat-header-cell\"> Upload </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let element; let index= index;\" [formGroupName]=\"index\" class=\"mat-cell\">\r\n                            <mat-slide-toggle [checked]=\"element.Upload\" color='custom' formControlName=\"Upload\">\r\n                            </mat-slide-toggle>\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                </mat-table>\r\n            </div>\r\n \r\n        </div>\r\n\r\n        <br>\r\n\r\n        <div *ngIf=\"this.rows.length != 0\" class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n            fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <div fxFlex fxLayoutAlign=\"end center\">\r\n\r\n                <button mat-flat-button color=\"primary\" type=\"submit\" matTooltip=\"Save (alt+s)\" (click)=\"saveUIRoleConfig()\">\r\n                    <mat-icon mat-list-icon>save</mat-icon> Save\r\n                </button> \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n</mat-card>\r\n\r\n ","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RestService } from '../../services/rest.service';\r\nimport { Global } from '../../common/global';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { ExcelService } from '../../common/excel.service';\r\nimport { KEY_CODE } from '../../common/constant';\r\nimport { FlexyColumnComponent } from '../../common/flexy-column.component';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map, debounceTime } from 'rxjs/operators';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n@Component({\r\n    selector: 'app-user',\r\n    templateUrl: './user.component.html',\r\n    styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit, AfterViewInit {\r\n    UserForm!: FormGroup;\r\n    UserIndex: boolean = false;\r\n    UserCreate: boolean = false;\r\n    users: any = [];\r\n    datasource:any;\r\n    userLoggedIn: any;\r\n    location: Location;\r\n    UIObj: any;\r\n    IsMaker: boolean = false;\r\n    IsExport: boolean = false;\r\n    IsEdit: boolean = false;\r\n    IsCentralAccess: boolean = false;\r\n    Readonly = true;\r\n    separatorKeysCodes: number[] = [ENTER, COMMA];\r\n    roles: any = [];\r\n    allRoles: any[] = [];\r\n    allRolesInit: any[] = [];\r\n    filteredRoles!: Observable<any[]>;\r\n    @ViewChild('roleInput', { static: true }) roleInput!: ElementRef<HTMLInputElement>;\r\n    @ViewChild('autoRole', { static: true }) autoRole!: any;\r\n    @ViewChild('roleList', { static: true }) roleList:any;\r\n    @ViewChild('form', { static: true }) form:any;\r\n    displayedColumns: string[] = ['Id', 'LoginId', 'EmpCode', 'EmpName','RoleCode','IsActive'];\r\n    dataSource:any;\r\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n    @ViewChild(MatSort) sort!: MatSort;\r\n    @ViewChild(FlexyColumnComponent, { static: true }) flexyColumn!: FlexyColumnComponent;\r\n    constructor(location: Location, private formBuilder: FormBuilder, private rest: RestService, private route: ActivatedRoute, private router: Router,\r\n        private global: Global, private excelService: ExcelService) {\r\n        this.location = location;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.Readonly= false;\r\n        var path = this.location.prepareExternalUrl(this.location.path());\r\n        if (path.charAt(0) === '#') {\r\n            path = path.slice(2);\r\n        }\r\n        this.UIObj = this.global.getUIObj(path);\r\n        this.IsMaker = this.UIObj.UIRoles[0].Maker;\r\n        this.IsExport = this.UIObj.UIRoles[0].Export;\r\n        this.IsEdit = this.UIObj.UIRoles[0].Edit;\r\n\r\n        this.UserForm = this.formBuilder.group({\r\n            Id: [''],       \r\n            ADUser: [''],\r\n            SearchName: [''],\r\n            LoginId: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9_]*'), Validators.maxLength(100)]],\r\n            EmpCode: [''],\r\n            EmpName: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9\\\\s\\\\(\\\\)\\\\-&.\\\\\\\\,/_]*'), Validators.maxLength(100)]],\r\n            IsActive: [''],\r\n            EmailId: ['', [Validators.required, Validators.email, Validators.maxLength(100)]],\r\n            Activity: [''],\r\n            Users: [''],\r\n            Role: ['']            \r\n        });\r\n\r\n        this.getAllUsers();\r\n        this.userLoggedIn = JSON.parse(localStorage.getItem('userLoggedIn')!);\r\n      \r\n        this.getAllRole();\r\n\r\n        this.SearchName?.valueChanges.pipe(\r\n            debounceTime(500)\r\n        ).subscribe(text => {\r\n            if (text != null && text != '') {\r\n                this.users = [];\r\n                this.getADUsers(text);\r\n            }\r\n            else {\r\n                this.users = [];\r\n            }\r\n        });\r\n\r\n        if(this.Role){\r\n            this.filteredRoles = this.Role.valueChanges\r\n            .pipe(startWith(null),\r\n                map((value: any | null) => value ? this._filter(value, this.allRoles) : this.allRoles.slice())\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    get Id() { return this.UserForm.get('Id'); }\r\n    //get RoleId() { return this.UserForm.get('RoleId'); }\r\n    get Role() { return this.UserForm.get('Role'); }\r\n    get IsActive() { return this.UserForm.get('IsActive'); }\r\n    get SearchName() { return this.UserForm.get('SearchName'); }\r\n    get LoginId() { return this.UserForm.get('LoginId'); }\r\n    get EmpCode() { return this.UserForm.get('EmpCode'); }\r\n    get EmpName() { return this.UserForm.get('EmpName'); }\r\n    get EmailId() { return this.UserForm.get('EmailId'); }\r\n    get Users() { return this.UserForm.get('Users'); }\r\n    get ADUser() { return this.UserForm.get('ADUser'); }\r\n\r\n    getAllUsers() {\r\n        this.rest.getAll(this.global.getapiendpoint() + 'user/GetAllUser').subscribe((data: any) => {\r\n\r\n            let tableData:any = [];\r\n            data.Data.forEach((element:any) => {\r\n\r\n                var rolecode = '';\r\n                element.UserRoles.forEach((roleelement:any) => { rolecode += \", \" + roleelement.Role.Code; });\r\n                rolecode = rolecode.substr(2, rolecode.length);\r\n\r\n                var entity = element.Entity ? element.Entity.Code : '';\r\n\r\n                tableData.push({\r\n                    Id: element.Id, LoginId: element.LoginId, EmpCode: element.EmpCode,\r\n                    EmpName: element.EmpName, EmailId: element.EmailId,\r\n                    RoleCode: rolecode,\r\n                    IsActive: element.IsActive ? \"Active\" : \"Inactive\"\r\n                });\r\n            });\r\n\r\n            this.dataSource = new MatTableDataSource(tableData);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n        });\r\n        this.UserCreate = false;\r\n        this.UserIndex = true;\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    \r\n        if (this.dataSource.paginator) {\r\n          this.dataSource.paginator.firstPage();\r\n        }\r\n      }\r\n\r\n    private _filter(value: any, obj: any): any {\r\n        const filterValue = (value ? (value.Code ? value.Code.toLowerCase() : value.toLowerCase()) : \"\");\r\n        return obj.filter((o:any) => o.Code.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    // displayWith(obj?: any): string | undefined {\r\n    //     return obj ? obj.Code : undefined;\r\n    // }\r\n\r\n    \r\n\r\n    // Role dropdown \r\n    \r\n    getAllRole() {\r\n        this.allRolesInit = [];\r\n        this.rest.getAll(this.global.getapiendpoint() + \"role/GetAllActiveRole\").subscribe((data: any) => {\r\n            this.allRolesInit = data.Data;\r\n        });\r\n    }\r\n\r\n    // addRole(event: MatChipInputEvent): void {\r\n    //     if (!this.autoRole.isOpen) {\r\n    //         const input = event.input;\r\n    //         if (input) {\r\n    //             input.value = '';\r\n    //         }\r\n    //         this.Role?.setValue(null);\r\n    //     }\r\n    //     if (this.roles.length == 0) {\r\n    //         this.roleList.errorState = true;\r\n    //     }\r\n    //     else {\r\n    //         this.roleList.errorState = false;\r\n    //     }\r\n    // }\r\n\r\n    // removeRole(role: any): void {\r\n    //     const index = this.roles.indexOf(role);\r\n    //     if (index >= 0) {\r\n    //         this.roles.splice(index, 1);\r\n    //     }\r\n    //     if (this.roles.length == 0) {\r\n    //         this.RoleId?.setValue(\"\");\r\n    //     }\r\n    //     this.allRoles.push(role);\r\n\r\n    //     if(this.Role){\r\n    //     this.filteredRoles = this.Role.valueChanges\r\n    //         .pipe(\r\n    //             startWith(null),\r\n    //             map((value: any | null) => value ? this._filter(value, this.allRoles) : this.allRoles.slice())\r\n    //         );\r\n    //     }\r\n    //     if (this.roles.length == 0) {\r\n    //         this.roleList.errorState = true;\r\n    //     }\r\n    //     else {\r\n    //         this.roleList.errorState = false;\r\n    //     }\r\n    // }\r\n\r\n    // selectedRole(event: MatAutocompleteSelectedEvent): void {\r\n    //     this.roles.push(event.option.value);\r\n    //     this.roleInput.nativeElement.value = '';\r\n    //     this.Role?.setValue(null);\r\n    //     this.RoleId?.setValue(this.roles);\r\n    //     const index = this.allRoles.indexOf(event.option.value);\r\n    //     if (index >= 0) {\r\n    //         this.allRoles.splice(index, 1);\r\n    //     }\r\n    //     if(this.Role){\r\n    //         this.filteredRoles = this.Role.valueChanges\r\n    //             .pipe(\r\n    //                 startWith(null),\r\n    //                 map((value: any | null) => value ? this._filter(value, this.allRoles) : this.allRoles.slice())\r\n    //             );\r\n    //     }\r\n    //     if (this.roles.length == 0) {\r\n    //         this.roleList.errorState = true;\r\n    //     }\r\n    //     else {\r\n    //         this.roleList.errorState = false;\r\n    //     }\r\n    // }\r\n\r\n    getADUsers(Text: string){\r\n        this.rest.getAll(this.global.getapiendpoint() + \"ad/FindUsers/\".concat(Text)).subscribe((data: any) => {\r\n            this.users = data.Data;\r\n        });\r\n    }\r\n\r\n    onADUserChange(value:any){\r\n        if(!this.ADUser?.value){\r\n            this.EmpCode?.setValidators([Validators.pattern(\"[a-zA-Z0-9 ]*\"), Validators.maxLength(100)]);\r\n            this.EmpCode?.updateValueAndValidity();\r\n            this.Readonly= false;\r\n            this.SearchName?.setValue('');\r\n            this.EmpCode?.setValue('');\r\n        }else{\r\n            this.EmpCode?.setValidators([Validators.required, Validators.pattern(\"[a-zA-Z0-9 ]*\"), Validators.maxLength(100)]);\r\n            this.EmpCode?.updateValueAndValidity();\r\n            this.EmpCode?.markAsUntouched();\r\n        }\r\n    }\r\n\r\n    getEmpCodeErrorMessage(){\r\n        return this.EmpCode?.hasError('required') ? 'Employee code is required' :\r\n               this.EmpCode?.hasError('pattern') ? 'Please enter a valid Employee code' :\r\n               this.EmpCode?.hasError('maxlength') ? 'This field should have less than 100 characters' :\r\n               '';\r\n    }\r\n\r\n    inputUser(user: any){\r\n        this.LoginId?.setValue(\"\");\r\n    }\r\n\r\n    selectedUser(user: any): void {\r\n        this.SearchName?.setValue(user.cn);\r\n        this.LoginId?.setValue(user.sAMAccountName);\r\n        this.EmpCode?.setValue(user.description);\r\n        this.EmpName?.setValue(user.cn);\r\n        this.EmailId?.setValue(user.mail);\r\n    }\r\n\r\n    addUser() {\r\n        this.UserForm.reset();\r\n        //this.form.resetForm();\r\n        this.UserForm.markAsUntouched();\r\n        this.Id?.setValue('');\r\n        this.LoginId?.enable();\r\n        this.SearchName?.enable();\r\n        this.IsActive?.setValue(true);\r\n        this.ADUser?.setValue(true);\r\n        this.onADUserChange(this.ADUser);\r\n\r\n           \r\n           //Role dropdown\r\n        //    this.RoleId?.setValue(\"\");\r\n        //    this.RoleId?.setValidators([Validators.required]);\r\n        //    this.RoleId?.updateValueAndValidity();\r\n           this.roles = [];\r\n           this.allRoles= [];\r\n           this.allRolesInit.forEach(element => { this.allRoles.push(element); });\r\n           this.Role?.setValue(\"\");\r\n           if(this.Role){\r\n            this.filteredRoles = this.Role.valueChanges\r\n            .pipe(\r\n                    startWith(null),\r\n                    map((value: any | null) => value ? this._filter(value, this.allRoles) : this.allRoles.slice())\r\n            ); \r\n           }        \r\n           //this.roleList.errorState = true;\r\n        \r\n        this.UserCreate = true;\r\n        this.UserIndex = false;\r\n    }\r\n\r\n    backUser() {\r\n        this.UserCreate = false;\r\n        this.UserIndex = true;\r\n        //this.topdiv.nativeElement.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    updateUser(Id: string) {\r\n        //this.getAllRole();\r\n\r\n        this.rest.getById(this.global.getapiendpoint() + 'user/GetUserById/', Id).subscribe((data: any) => {\r\n\r\n            this.Id?.setValue(data.Data.Id);\r\n            this.ADUser?.setValue(data.Data.ADUser);\r\n            this.EmailId?.setValue(data.Data.EmailId);\r\n            this.LoginId?.setValue(data.Data.LoginId);\r\n            this.LoginId?.disable();\r\n            this.SearchName?.disable();\r\n            this.EmpCode?.setValue(data.Data.EmpCode);\r\n            this.EmpName?.setValue(data.Data.EmpName);\r\n            this.IsActive?.setValue(data.Data.IsActive);\r\n            \r\n            //Role dropdown\r\n             var roleId:any = [];\r\n             this.allRoles = [];\r\n             //this.allRolesInit = [];\r\n             this.allRolesInit.forEach(element => { this.allRoles.push(element); });\r\n             data.Data.UserRoles.forEach((element:any) => {\r\n                 roleId.push({ Id: element.RoleId, Code: element.Role.Code });\r\n                 const index = this.allRoles.findIndex(o => o.Code == element.Role.Code);\r\n                 if(index >= 0){\r\n                     this.allRoles.splice(index, 1);\r\n                 }\r\n             });\r\n             this.Role?.setValue(roleId);\r\n            // this.allRolesInit = roleId;\r\n             this.roles = roleId;\r\n            //  this.RoleId?.setValue(roleId);\r\n            //  this.RoleId?.setValidators([Validators.required]);\r\n            //  this.RoleId?.updateValueAndValidity();\r\n             if(this.Role){\r\n                this.filteredRoles = this.Role.valueChanges\r\n                .pipe(\r\n                        startWith(null),\r\n                        map((value: any | null) => value ? this._filter(value, this.allRoles) : this.allRoles.slice())\r\n                ); \r\n             }        \r\n             //this.roleList.errorState = false;\r\n\r\n            this.UserCreate = true;\r\n            this.UserIndex = false;\r\n        });\r\n    }\r\n\r\n    exportUser() {\r\n        this.excelService.exportASExcelFile(this.dataSource.filteredData, 'User');\r\n        //this.toastr.showNotification('top', 'right', 'Exported Successfully', 'success');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.flexyColumn.setTableResize(this.matTableRef.nativeElement.clientWidth, this.columns);\r\n    }\r\n\r\n    onResizeColumn(event: any, index: number) {\r\n        //this.flexyColumn.onResizeColumn(event, index, this.matTableRef);\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event:any) {\r\n        //this.flexyColumn.setTableResize(this.matTableRef.nativeElement.clientWidth, this.columns);\r\n    }\r\n\r\n    @HostListener('window:keyup', ['$event']) keyEvent(event: KeyboardEvent) {\r\n\r\n        if (event.altKey && event.keyCode == KEY_CODE.A_KEY) {\r\n            this.addUser();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.B_KEY) {\r\n            this.backUser();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.U_KEY) {\r\n            // this.uploadUser();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.S_KEY) {\r\n            this.saveUser();\r\n        }\r\n        if (event.altKey && event.keyCode == KEY_CODE.X_KEY) {\r\n            this.exportUser();\r\n        }\r\n    }\r\n\r\n    saveUser() {\r\n        this.rest.checkDuplicate(this.global.getapiendpoint() + 'user/CheckDuplicateUser/', this.LoginId?.value.toString().trim(),\r\n        (this.Id?.value !== '' ? this.Id?.value : '0')).subscribe((data: any) => {\r\n            if(data.Data){\r\n               // this.toastr.showNotification('top', 'right', data.Message, 'danger');\r\n            }\r\n            else\r\n            {               \r\n                var roleId:any = [];\r\n                if(this.Role?.value){\r\n                    this.Role.value.forEach((element:any) => { roleId.push(element.Id ); });\r\n                }\r\n\r\n                var model: any ={\r\n                    Id: this.Id?.value,\r\n                    ADUser: this.ADUser?.value,\r\n                    EmpCode: this.EmpCode?.value,\r\n                    EmpName: this.EmpName?.value,\r\n                    EmailId: this.EmailId?.value,\r\n                    LoginId: this.LoginId?.value,\r\n                    DefaultRoleId: roleId ? roleId[0] : \"\",\r\n                    IsActive: this.IsActive?.value,\r\n                    RoleId: roleId,\r\n                    UserId: this.userLoggedIn.Id,\r\n                    UserRoleId: this.userLoggedIn.DefaultRoleId\r\n                };\r\n\r\n                var apiUrl = '';\r\n                if (this.Id?.value == '') {\r\n                    apiUrl = 'user/CreateUser';\r\n                }\r\n                else {\r\n                    apiUrl = 'user/UpdateUser';\r\n                }\r\n                this.rest.create(this.global.getapiendpoint() + apiUrl, model).subscribe((data: any) => {\r\n                    if (data.Success) {\r\n                        //this.toastr.showNotification('top', 'right', data.Message, 'success');\r\n                    }\r\n                    else {\r\n                        //this.toastr.showNotification('top', 'right', data.Message, 'danger');\r\n                    }\r\n                    this.getAllUsers();\r\n                });\r\n            }\r\n        });\r\n    }\r\n}","<mat-card *ngIf=\"UserIndex\" class=\" \" style=\"margin: 15px ;\">\r\n\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n        <h4 fxFlex class=\"header\">User Master</h4>\r\n\r\n        <div fxFlex fxLayoutAlign=\"end center\">\r\n            <button mat-flat-button color=\"primary\" *ngIf=\"IsMaker\" title=\"Create (alt+c)\" (click)=\"addUser()\">\r\n                <mat-icon mat-list-icon>add</mat-icon> Add\r\n            </button>\r\n\r\n            <button mat-stroked-button color=\"primary\" *ngIf=\"IsExport\" title=\"Export (alt+x)\" (click)=\"exportUser()\">\r\n                <mat-icon mat-list-icon>file_download</mat-icon> Export\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n        <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n            <mat-label>Filter</mat-label>\r\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Filter\" #input>\r\n            <mat-icon matSuffix>manage_search</mat-icon>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <div class=\" \" fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n        fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\" class=\"table-responsive\">\r\n\r\n        <div class=\"mat-elevation-z0\">\r\n\r\n            <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-table\">\r\n\r\n                <ng-container matColumnDef=\"Id\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\">\r\n                        <span *ngIf=\"IsEdit\"> Action </span>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\" class=\"mat-cell\">\r\n                        <mat-icon *ngIf=\"IsEdit\" mat-stroked-button color=\"primary\" title=\"Edit\"\r\n                        (click)=\"updateUser(row.Id)\">create</mat-icon>\r\n\r\n                        <!-- <button *ngIf=\"IsEdit\" mat-stroked-button color=\"primary\" title=\"Edit\"\r\n                            (click)=\"updateUser(row.Id)\">\r\n                            <mat-icon mat-list-icon>file_download</mat-icon> Export\r\n                        </button> -->\r\n \r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"LoginId\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Login Id</th>\r\n                    <td mat-cell *matCellDef=\"let row\" class=\"mat-cell\">\r\n                        {{row.LoginId}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"EmpCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Employee Code</th>\r\n                    <td mat-cell *matCellDef=\"let row\" class=\"mat-cell\">\r\n                        {{row.EmpCode}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"EmpName\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Employee Name</th>\r\n                    <td mat-cell *matCellDef=\"let row\" class=\"mat-cell\">\r\n                        {{row.EmpName}}</td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"RoleCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Role</th>\r\n                    <td mat-cell *matCellDef=\"let row\" class=\"mat-cell\">\r\n                        {{row.RoleCode}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"IsActive\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-header-cell\"> Status</th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-cell\">\r\n                        {{element.IsActive}}</td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <!-- Row shown when there is no matching data. -->\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter\r\n                        \"{{input.value}}\"</td>\r\n                </tr>\r\n            </table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n\r\n</mat-card>\r\n\r\n<mat-card *ngIf=\"UserCreate\" class=\" \" style=\"margin: 15px ;\">\r\n\r\n\r\n    <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n        <h4 fxFlex class=\"header\">User Master</h4>\r\n    </div>\r\n\r\n    <form #form=\"ngForm\" autocomplete=\"off\" [formGroup]=\"UserForm\">\r\n\r\n        <mat-form-field class=\"example-full-width\" hidden>\r\n            <input matInput type=\"text\" formControlName=\"Id\">\r\n            <!-- <input matInput type=\"text\" formControlName=\"RoleId\"> -->\r\n        </mat-form-field>\r\n        \r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n            fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <mat-form-field fxFlex=\"0 0 calc(25%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                <mat-label>Login ID <sup>*</sup></mat-label>\r\n                <input matInput placeholder=\"LoginId\" type=\"text\" formControlName=\"LoginId\" required [readonly]=\"Readonly\"> \r\n                <mat-error *ngIf=\"LoginId?.hasError('required')\">\r\n                    Login Id is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-error *ngIf=\"LoginId?.hasError('pattern') && !LoginId?.hasError('required')\">\r\n                    Please enter a valid Login Id\r\n                </mat-error>\r\n                <mat-error *ngIf=\"LoginId?.hasError('maxLength')\">\r\n                    Login Id should have less than 100 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"0 0 calc(25%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                <mat-label>Employee Code <sup>*</sup></mat-label>\r\n                <input matInput placeholder=\"Employee Code\" type=\"text\" formControlName=\"EmpCode\" required [readonly]=\"Readonly\"> \r\n                <mat-error *ngIf=\"EmpCode?.invalid\">\r\n                    {{ getEmpCodeErrorMessage() }}\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"0 0 calc(25%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                <mat-label>Employee Name <sup>*</sup></mat-label>\r\n                <input matInput placeholder=\"Employee Name\" type=\"text\" formControlName=\"EmpName\" required [readonly]=\"Readonly\"> \r\n                <mat-error *ngIf=\"EmpName?.hasError('required')\">\r\n                    Employee Name is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-error\r\n                    *ngIf=\"EmpName?.hasError('pattern') && !EmpName?.hasError('required')\">\r\n                    Please enter a valid Employee Name\r\n                </mat-error>\r\n                <mat-error *ngIf=\"EmpName?.hasError('maxLength')\">\r\n                    Employee Name should have less than 100 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field fxFlex=\"0 0 calc(25%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                <mat-label>Email ID<sup>*</sup></mat-label>\r\n                <input matInput placeholder=\"Email ID\" type=\"text\" formControlName=\"EmailId\" required [readonly]=\"Readonly\">\r\n                <mat-error *ngIf=\"EmailId?.hasError('required')\">\r\n                    Email Id is <strong>required</strong>\r\n                </mat-error>\r\n                <mat-error\r\n                    *ngIf=\"EmailId?.hasError('pattern') && !EmailId?.hasError('required')\">\r\n                    Please enter a valid Email Id\r\n                </mat-error>\r\n                <mat-error *ngIf=\"EmailId?.hasError('maxLength')\">\r\n                    Email Id should have less than 100 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n            fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <!-- <mat-form-field fxFlex=\"0 0 calc(25%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\"> -->\r\n                <!-- <mat-label>Role</mat-label>\r\n                <mat-chip-list #roleList>\r\n                    <mat-chip *ngFor=\"let role of roles\" [selectable]=\"true\" [removable]=\"true\"\r\n                        (removed)=\"removeRole(role)\">\r\n                        {{ role.Code }}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Role\" #roleInput formControlName=\"Role\"\r\n                        [matAutocomplete]=\"autoRole\" [matChipInputFor]=\"roleList\"\r\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                        [matChipInputAddOnBlur]=\"true\" (matChipInputTokenEnd)=\"addRole($event)\">\r\n                </mat-chip-list>\r\n                <mat-autocomplete #autoRole=\"matAutocomplete\"\r\n                    (optionSelected)=\"selectedRole($event)\">\r\n                    <mat-option *ngFor=\"let role of filteredRoles | async\" [value]=\"role\">\r\n                        {{ role.Code }}\r\n                    </mat-option>\r\n                </mat-autocomplete> -->\r\n                <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                    <mat-label>Role<sup>*</sup></mat-label>\r\n                    <ng-select ngSelectMat [multiple]=\"true\" formControlName=\"Role\" [items]=\"allRolesInit\"\r\n                        placeholder=\" \" bindLabel=\"Code\"></ng-select>\r\n                        <mat-error>\r\n                            Role is <strong>required</strong>\r\n                        </mat-error>\r\n                </mat-form-field>\r\n                \r\n            <!-- </mat-form-field> -->\r\n\r\n            <section fxFlex=\"0 0 calc(25%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                <br>\r\n                <mat-checkbox formControlName=\"IsActive\"> Is Active </mat-checkbox>\r\n            </section>\r\n    \r\n        </div>\r\n\r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\" fxLayoutGap=\"20px\"\r\n            fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <div fxFlex fxLayoutAlign=\"end center\">\r\n\r\n                <button mat-flat-button color=\"primary\" type=\"submit\" matTooltip=\"Save (alt s)\" [disabled]=\"UserForm.invalid\" (click)=\"saveUser()\">\r\n                    <mat-icon mat-list-icon>save</mat-icon> Save\r\n                </button>\r\n\r\n                <button mat-stroked-button color=\"primary\" matTooltip=\"Back (alt b)\" type=\"reset\" (click)=\"backUser()\">\r\n                    <mat-icon mat-list-icon>arrow_back</mat-icon> Back\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n        </form>\r\n\r\n</mat-card>\r\n ","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function RequireMatch(control: AbstractControl){\r\nconst selection: any = control.value;\r\nif(typeof selection === 'string'){\r\n    return {incorrect : true};\r\n}\r\nreturn null;\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { StepperOrientation } from '@angular/material/stepper';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\r\nimport { RestService } from '../services/rest.service';\r\nimport { Global } from '../common/global';\r\nimport * as moment from 'moment';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { E } from '@angular/cdk/keycodes';\r\n\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: 'app-wizard',\r\n  templateUrl: './wizard.component.html',\r\n  styleUrls: ['./wizard.component.scss'],\r\n  providers: [{\r\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\r\n  }]\r\n})\r\n\r\nexport class WizardComponent implements OnInit {\r\n\r\n  //isLoding:boolean = false;\r\n  isApproveButtonClicked = false;\r\n  selectedAssetNumber: any = [];\r\n  selectedAssetNumberDetails: any = [];\r\n\r\n  assetList: any = [];\r\n  currentSerialNumber: any;\r\n  serialNumberList: any = [];\r\n  displayedColumns: string[] = ['OrderNumber','AssetNumber', 'AssetDes', 'Cost', 'ItemNumber', 'ItemDes', 'SubInventoryCode', 'Location', 'TransactionDate','Status', 'Action'];\r\n  //displayedColumns: string[] = ['Id', 'AssetNumber', 'ReceiptNumber', 'SubInventoryCode','Location','TransactionDate','ItemNumber','Status'];\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  isViewList: boolean = false;\r\n  isEditable: boolean = false;\r\n  isViewable: boolean = false;\r\n  transactionForm!: FormGroup;\r\n  @ViewChild('transactionform', { static: true }) transactionform!: any;\r\n\r\n  approverForm!: FormGroup;\r\n  @ViewChild('approverform', { static: true }) approverform!: any;\r\n\r\n  blank: any;\r\n\r\n  selectedOrganizationId: any = [];\r\n  OrganizationIds = [];\r\n\r\n  selectedDesORGCode: any = [];\r\n  DesORGCodeIds = [];\r\n  ToLocationIds = [];\r\n\r\n  selectedAssets: any = [];\r\n  Assets = [];\r\n  Type = [\r\n    { id: 1, name: 'SRN' },\r\n    { id: 2, name: 'CAM' }\r\n  ];\r\n  selectedType: any = [];\r\n  selectedTypeName: any;\r\n  stepperOrientation: Observable<StepperOrientation>;\r\n  CurrentDate: any;\r\n  minDate: any;\r\n  maxDate: any;\r\n  viewAssetData: any = [];\r\n  assetStatus: any;\r\n  userLoggedIn: any;\r\n  userRole: any;\r\n  userId:any\r\n\r\n  isDesSubCodeDisabled:boolean = false;\r\n  srnSubinventoryDescription:any;\r\n  srnSecondaryInventoryName:any\r\n\r\n  distinctAssetLocation: any = [];\r\n  selectedAssetLocationName: any;\r\n\r\n  constructor(\r\n    breakpointObserver: BreakpointObserver,\r\n    private rest: RestService,\r\n    private global: Global,\r\n    private formBuilder: FormBuilder,\r\n    private _snackBar: MatSnackBar,\r\n    private spinner: NgxSpinnerService) {\r\n    this.stepperOrientation = breakpointObserver.observe('(min-width: 1366px)')\r\n      .pipe(map(({ matches }) => matches ? 'horizontal' : 'vertical'));\r\n  }\r\n\r\n  openSnackBarError() {\r\n    this._snackBar.open('Please Enter Mandatory Values', 'Close', {\r\n      duration: 3000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right',\r\n      panelClass: [\"error\"]\r\n    });\r\n  }\r\n\r\n  openSnackBarSuccess(meassage: any) {\r\n    this._snackBar.open(meassage, 'Close', {\r\n      duration: 3000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right',\r\n      panelClass: [\"success\"]\r\n    });\r\n  }\r\n\r\n  openSnackBarWarning() {\r\n    this._snackBar.open('Value goes here', 'Close', {\r\n      duration: 3000,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right',\r\n      panelClass: [\"warning\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userLoggedIn = JSON.parse(localStorage.getItem('userLoggedIn')!);\r\n    this.userRole = this.userLoggedIn.DefaultRoleId;\r\n    this.userId = this.userLoggedIn.Id;\r\n    this.isViewList = true;\r\n    this.minDate = new Date();\r\n    this.maxDate = new Date();\r\n    this.createForm();\r\n    this.CurrentDate = new Date();\r\n    //this.maxDate = new Date(this.CurrentDate.getFullYear(), this.CurrentDate.getMonth() + 1, 0)\r\n    this.getAllAssetDetails();\r\n  }\r\n\r\n  openCreateForm() {\r\n    this.isViewList = false;\r\n    this.isViewable = false;\r\n    this.isEditable = true;\r\n    this.transactionForm.reset();\r\n    this.selectedAssetNumber = [];\r\n    this.selectedAssetNumberDetails = [];\r\n    this.serialNumberList = [];\r\n    this.selectedOrganizationId = [];\r\n    this.assetDetails = [];\r\n    this.ToLocationIds = [];\r\n    //this.getAllAsset();\r\n    this.distinctAssetLocation = [];\r\n    this.selectedAssetLocationName = \"\";\r\n    //this.getAssetDistinctLocation();\r\n    this.getAllOrganizationIds();\r\n    this.selectedType = [];\r\n    this.selectedAssets = [];\r\n    this.selectedTypeName = \"\";\r\n    this.miscItem = '';\r\n    this.miscUOM = '';\r\n    this.miscQuantity = '';\r\n    if (this.assetList.length != 0) {\r\n      this.assetList.filter((e: any) => {\r\n        if (moment(e.CreatedDate).format('YYYYMMDD') == moment(this.CurrentDate).format('YYYYMMDD')) {\r\n          this.serialNumberList.push(e.SerialNumber);\r\n        }\r\n      });\r\n      if (this.serialNumberList.length != 0) {\r\n        this.currentSerialNumber = Math.max(...this.serialNumberList) + 1;\r\n        if (this.currentSerialNumber <= 9) {\r\n          this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '000' + this.currentSerialNumber);\r\n        }\r\n        else if (this.currentSerialNumber >= 10 && this.currentSerialNumber <= 99) {\r\n          this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '00' + this.currentSerialNumber);\r\n        }\r\n        else if (this.currentSerialNumber >= 100 && this.currentSerialNumber <= 999) {\r\n          this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '0' + this.currentSerialNumber);\r\n        }\r\n        else if (this.currentSerialNumber >= 1000) {\r\n          this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + this.currentSerialNumber);\r\n        }\r\n      }\r\n      else {\r\n        this.currentSerialNumber = 1;\r\n        this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '000' + this.currentSerialNumber);\r\n      }\r\n    }\r\n    else {\r\n      this.currentSerialNumber = 1;\r\n      this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '000' + this.currentSerialNumber);\r\n    }\r\n  }\r\n\r\n  openListPage() {\r\n    this.isViewList = true;\r\n    this.isViewable = false;\r\n    this.isEditable = false;\r\n    //this.isEditable = !this.isEditable;\r\n    this.getAllAssetDetails();\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.transactionForm = this.formBuilder.group({\r\n      ReceiptNumber: [''],\r\n      AssetNumber: [''],\r\n      Cost: [''],\r\n      LTD_DEP: [''],\r\n      NBV: [''],\r\n      AssertQuantity: [''],\r\n      Item: [''],\r\n      UnitOfMeasure: [''],\r\n      Location: [''],\r\n      InterfaceBatchNumber: [''],\r\n      TransactionDate: ['', Validators.required],\r\n      DesORGCode: ['', Validators.required],\r\n      DesTypeCode: ['', Validators.required],\r\n      Locator: ['', Validators.required],\r\n      DesSubInventoryCode: ['', Validators.required],\r\n      DFFS: [''],\r\n      Organization: ['', Validators.required],\r\n      ToLocation: ['', Validators.required],\r\n    });\r\n\r\n    this.approverForm = this.formBuilder.group({\r\n      Remarks: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  get ReceiptNumber() { return this.transactionForm.get('ReceiptNumber'); }\r\n  get AssetNumber() { return this.transactionForm.get('AssetNumber'); }\r\n  get Cost() { return this.transactionForm.get('Cost'); }\r\n  get LTD_DEP() { return this.transactionForm.get('LTD_DEP'); }\r\n  get NBV() { return this.transactionForm.get('NBV'); }\r\n  get AssertQuantity() { return this.transactionForm.get('AssertQuantity'); }\r\n  get Item() { return this.transactionForm.get('Item'); }\r\n  get UnitOfMeasure() { return this.transactionForm.get('UnitOfMeasure'); }\r\n  get Location() { return this.transactionForm.get('Location'); }\r\n  get InterfaceBatchNumber() { return this.transactionForm.get('InterfaceBatchNumber'); }\r\n  get TransactionDate() { return this.transactionForm.get('TransactionDate'); }\r\n  get DesORGCode() { return this.transactionForm.get('DesORGCode'); }\r\n  get DesTypeCode() { return this.transactionForm.get('DesTypeCode'); }\r\n  get Locator() { return this.transactionForm.get('Locator'); }\r\n  get DesSubInventoryCode() { return this.transactionForm.get('DesSubInventoryCode'); }\r\n  get DFFS() { return this.transactionForm.get('DFFS'); }\r\n  get Organization() { return this.transactionForm.get('Organization'); }\r\n  get ToLocation() { return this.transactionForm.get('ToLocation'); }\r\n  get Remarks() { return this.approverForm.get('Remarks'); }\r\n\r\n\r\n  getAllOrganizationIds() {\r\n    this.rest.getAll(this.global.getapiendpoint() + \"transaction/GetAllOrganization\").subscribe((data: any) => {\r\n      this.OrganizationIds = data.Data;\r\n      this.DesORGCodeIds = data.Data;\r\n    });\r\n  }\r\n\r\n  getType() {\r\n    if (this.selectedType != null) {\r\n      this.selectedTypeName = this.selectedType.name;\r\n      this.getLocation(this.selectedTypeName);\r\n      this.transactionForm.reset();\r\n\r\n      this.TransactionDate?.setValue(new Date());\r\n\r\n      //this.getAllAsset();\r\n      this.distinctAssetLocation = [];\r\n      this.selectedAssetLocationName = \"\";\r\n      this.getAssetDistinctLocation();\r\n      this.selectedAssets = [];\r\n      this.assetDetails = [];\r\n      this.selectedAssetNumberDetails = [];\r\n      this.selectedAssetNumber = [];\r\n      this.selectedOrganization = \"\";\r\n      if(this.selectedTypeName == 'CAM'){\r\n        this.DesTypeCode?.setValue('EXPENSE');\r\n        this.DesSubInventoryCode?.setValue('CAM');\r\n        this.srnSecondaryInventoryName = 'CAM';\r\n        this.isDesSubCodeDisabled = true;\r\n        //this.transactionForm.get('DesSubInventoryCode')?.disable();\r\n      }\r\n      else if(this.selectedTypeName == 'SRN'){\r\n        this.DesTypeCode?.setValue('INVENTORY');\r\n        this.srnSecondaryInventoryName = '';\r\n        this.isDesSubCodeDisabled = false;\r\n        //this.transactionForm.get('DesSubInventoryCode')?.enable();\r\n      }\r\n      if (this.currentSerialNumber <= 9) {\r\n        this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '000' + this.currentSerialNumber);\r\n      }\r\n      else if (this.currentSerialNumber >= 10 && this.currentSerialNumber <= 99) {\r\n        this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '00' + this.currentSerialNumber);\r\n      }\r\n      else if (this.currentSerialNumber >= 100 && this.currentSerialNumber <= 999) {\r\n        this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + '0' + this.currentSerialNumber);\r\n      }\r\n      else if (this.currentSerialNumber >= 1000) {\r\n        this.ReceiptNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + this.currentSerialNumber);\r\n      }\r\n      this.InterfaceBatchNumber?.setValue(moment(this.CurrentDate).format('YYYYMMDD') + Math.floor(1000 + Math.random() * 9000));\r\n    }\r\n    else {\r\n      this.openCreateForm();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getAllAsset(LocationName:any) {\r\n    this.rest.getAll(this.global.getapiendpoint() + \"transaction/GetAllASSET_NUMBER/\" + LocationName).subscribe((data: any) => {\r\n      this.Assets = data.Data;\r\n      this.Assets.map((i:any) => { i.AssetDisplay = i.ASSET_NUMBER + ' | ' + i.ITEM_DESC + ' | ' + i.SUPPLIER_CODE; return i; });\r\n    });\r\n  }\r\n\r\n  gridAssetNumberList: any[] = [];\r\n\r\n  getAllAssetDetails() {\r\n    this.rest.getAll(this.global.getapiendpoint() + \"transaction/GetAllMuptipleASSET_Details\").subscribe((data: any) => {\r\n      this.assetList = data.Data;\r\n      this.gridAssetNumberList = [];\r\n\r\n      this.assetList.forEach((element1: any, index1: any) => {\r\n        let AN = '';\r\n        let C = '';\r\n        let IN = '';\r\n        let L = '';\r\n        let AD = '';\r\n        let ID = '';\r\n        let status = '';\r\n        let NBV = '';\r\n        if(element1.StatusId == 1){\r\n          status = 'Approved'\r\n        }\r\n        else if(element1.StatusId == -1){\r\n          status = 'Rejected'\r\n        }\r\n        else if(element1.StatusId == 2){\r\n          status = 'Pending For Commit'\r\n        }\r\n        else{\r\n          status = 'Pending For Approval'\r\n        }\r\n        \r\n        element1.AssetDetails.forEach((element2: any, index2: any) => {\r\n          AN = AN + element2.AssetNumber + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n          //C = C + element2.Cost + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n          NBV = NBV + element2.NBV + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n          IN = IN + element2.Item + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n          L = L + element2.Location + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n          AD = AD + element2.AssetDesc + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n          ID = ID + element2.ItemDesc + ((index2 == element1.AssetDetails.length - 1) ? '' : ' , ');\r\n        });\r\n\r\n\r\n\r\n        this.gridAssetNumberList.push({\r\n          Id:element1.Id,\r\n          AssetType:element1.AssetType,\r\n          TransactionDate:moment(element1.TransactionDate).format('DD-MM-YYYY'),\r\n          Status : status,\r\n          StatusId:element1.StatusId,\r\n          AssetNumber: AN,\r\n          //Cost: C,\r\n          NBV:NBV,\r\n          Item: IN,\r\n          Location: L,\r\n          AssetDesc: AD,\r\n          ItemDesc: ID,\r\n          OrderNumber:element1.AssetDetails[0].Seq5\r\n        });\r\n      });\r\n\r\n      this.dataSource = new MatTableDataSource(this.gridAssetNumberList);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n\r\n      //console.log(this.gridAssetNumberList);\r\n    });\r\n  }\r\n\r\n  assetDetails: any[] = [];\r\n\r\n  getAssetDetails() {\r\n    let selectedAssetsNumbers: any = [];\r\n    this.selectedAssets.forEach((element: any) => {\r\n      selectedAssetsNumbers.push(element.ASSET_NUMBER)\r\n    });\r\n    let model = { ASSET_NUMBER: selectedAssetsNumbers };\r\n    this.rest.postParams(this.global.getapiendpoint() + \"transaction/GetAssertDetailsByASSET_NUMBER\", model).subscribe((data: any) => {\r\n      let fetcheddata = data.Data;\r\n      this.assetDetails = [];\r\n      fetcheddata.forEach((element: any) => {\r\n        this.assetDetails.push(element);\r\n      });\r\n\r\n      this.selectedAssetNumberDetails = this.assetDetails;\r\n      this.selectedAssetNumber = this.assetDetails[0];\r\n      this.getCreateselectedAssetNumberDetails();\r\n    });\r\n\r\n  }\r\n\r\n  SaveDetails() {\r\n    this.spinner.show();\r\n    var dataNew = Object.assign({}, this.transactionForm.value);\r\n    dataNew.AssetDetails = this.assetDetails;\r\n    dataNew.StatusId = 0;\r\n    dataNew.AssetType = this.selectedTypeName;\r\n    dataNew.DesSubInventoryName = this.srnSecondaryInventoryName;\r\n    dataNew.userId = this.userId;\r\n    //dataNew.OrganizationId = this.Organization?.OrganizationId;\r\n    if (this.currentSerialNumber <= 9) {\r\n      dataNew.SerialNumber = '000' + this.currentSerialNumber;\r\n    }\r\n    else if (this.currentSerialNumber >= 10 && this.currentSerialNumber <= 99) {\r\n      dataNew.SerialNumber = '00' + this.currentSerialNumber;\r\n    }\r\n    else if (this.currentSerialNumber >= 100 && this.currentSerialNumber <= 999) {\r\n      dataNew.SerialNumber = '0' + this.currentSerialNumber;\r\n    }\r\n    else if (this.currentSerialNumber >= 1000) {\r\n      dataNew.SerialNumber = this.currentSerialNumber;\r\n    }\r\n    var model = dataNew;\r\n    console.log(\"Model\",model);\r\n    if (this.transactionForm.valid) {\r\n      this.rest.create(this.global.getapiendpoint() + 'transaction/CreateMultipleAsset', model).subscribe((data: any) => {\r\n        if (data.Success) {\r\n          this.spinner.hide();\r\n          this.openSnackBarSuccess('Asset Saved Successfully');\r\n          this.openListPage();\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          this.openSnackBarError();\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.spinner.hide();\r\n      this.Organization?.markAsTouched();\r\n      this.openSnackBarError();\r\n    }\r\n  }\r\n\r\n  viewAssetNumberDetailsList: any = [];\r\n  viewAssetOrganizationDetails: any = [];\r\n  viewAssetLocationDetails: any = [];\r\n\r\n  viewAssetDetails(Id: any, status: any) {\r\n    this.isApproveButtonClicked = false;\r\n    \r\n    this.miscItem = \"\";\r\n    this.miscUOM = \"\";\r\n    this.miscQuantity = \"\";\r\n    this.approverForm.reset();\r\n    this.viewAssetNumberDetailsList = [];\r\n    this.assetStatus = status;\r\n    var bodyParams = { Id: Id };\r\n    this.rest.postParams(this.global.getapiendpoint() + \"transaction/GetMultipleAssertDetailsByASSET_Id\", bodyParams).subscribe((data: any) => {\r\n      this.viewAssetData = data.Data[0];\r\n      this.viewAssetNumberDetailsList = data.Data[0].AssetDetails;\r\n      this.viewAssetOrganizationDetails = data.Data[0].OrganizationDetail;\r\n      this.viewAssetLocationDetails = data.Data[0].LocationDetail;\r\n      this.selectedAssetNumberDetails = data.Data[0].AssetDetails;\r\n\r\n      this.selectedAssetNumber = this.selectedAssetNumberDetails[0];\r\n      this.getViewselectedAssetNumberDetails();\r\n      //console.log(data.Data[0])\r\n    });\r\n\r\n    this.isViewList = false;\r\n    this.isEditable = false;\r\n    this.isViewable = true;\r\n  }\r\n\r\n  ApproveRejectAsset(status: any) {\r\n    this.isApproveButtonClicked = true;\r\n    \r\n    if (status == -1) {\r\n      if (this.approverForm.valid) {\r\n        this.spinner.show();\r\n        var bodyParams1 = {\r\n          Id: this.viewAssetData.Id,\r\n          Remarks: this.Remarks?.value,\r\n          StatusId: status,\r\n          ModifiedBy: this.userId,\r\n          AssetRequestBody:this.viewAssetData \r\n        };\r\n\r\n\r\n        this.rest.postParams(this.global.getapiendpoint() + \"transaction/ApproveRejectAsset\", bodyParams1).subscribe((data: any) => {\r\n          this.spinner.hide();\r\n          this.openSnackBarSuccess('Asset Rejected Successfully');\r\n          this.openListPage();\r\n        });\r\n      }\r\n      else {\r\n        this.isApproveButtonClicked = false;\r\n        this.Remarks?.markAsTouched();\r\n        this.openSnackBarError();\r\n      }\r\n    }\r\n    else {\r\n\r\n      // var AssetDetaillist: Array<{ assetDetails: any }> = [];\r\n      // var SourceLineID = 1000000;\r\n      // var SourceHeaderID = 2000000;\r\n      // var TransactionCostIdentifier = 3000000;\r\n\r\n      // this.assetDetails.forEach((element, index) => {\r\n      //   var objAssetDetail = {\r\n      //     OrganizationName: this.Organization,\r\n      //     ItemNumber: element.ITEM_NUMBER,\r\n      //     TransactionTypeId: 42,\r\n      //     TransactionQuantity: element.AssertQuantity,\r\n      //     TransactionUnitOfMeasure: element.PRIMARY_UOM_CODEA,\r\n      //     TransactionDate: this.TransactionDate,\r\n      //     SubinventoryCode: this.selectedTypeName,\r\n      //     SourceCode: this.selectedTypeName,\r\n      //     SourceLineId: SourceLineID + 1,\r\n      //     SourceHeaderId: SourceHeaderID + 1,\r\n      //     UseCurrentCostFlag: false,\r\n      //     TransactionCostIdentifier: TransactionCostIdentifier + 1,\r\n      //     TransactionMode: 3,\r\n      //     LotNumber: element.AssetNumber + \"-\" + this.TransactionDate,\r\n      //     CostComponentCode: \"ITEM_PRICE\",\r\n      //     Cost: element.Cost\r\n\r\n      //   }\r\n\r\n\r\n\r\n      //   AssetDetaillist.push({\r\n      //     assetDetails: objAssetDetail\r\n      //   }\r\n\r\n      //   )\r\n      // });\r\n      // console.log(\"AssetDetailList\", AssetDetaillist);\r\n\r\n      // var requestbody = {\r\n      //   AssetDetail: AssetDetaillist\r\n      // }\r\n\r\n      // console.log(\"RequestBody\", requestbody);\r\n\r\n      //this.isLoding = true;\r\n\r\n      this.spinner.show();\r\n\r\n      var bodyParams2 = {\r\n        Id: this.viewAssetData.Id,\r\n        Remarks: this.Remarks?.value,\r\n        StatusId: status,\r\n        ModifiedBy: this.userId,\r\n        AssetRequestBody:this.viewAssetData \r\n      }\r\n\r\n      this.rest.postParams(this.global.getapiendpoint() + \"transaction/ApproveRejectAsset\", bodyParams2).subscribe((data: any) => {\r\n        //this.isLoding = false;\r\n        this.spinner.hide();\r\n        this.openSnackBarSuccess('Asset Approved Successfully');\r\n        this.openListPage();\r\n      });\r\n    }\r\n  }\r\n\r\n  miscItem: any;\r\n  miscUOM: any;\r\n  miscQuantity: any;\r\n\r\n  onAssetViewAccordionOpen(index: any) {\r\n    this.selectedAssetNumber = this.viewAssetNumberDetailsList[index];\r\n    this.getViewselectedAssetNumberDetails();\r\n  }\r\n\r\n  onAssetCreateAccordionOpen(index: any) {\r\n    this.selectedAssetNumber = this.assetDetails[index];\r\n    this.getCreateselectedAssetNumberDetails();\r\n  }\r\n\r\n  onAssetAccordionClose() {\r\n    this.miscItem = '';\r\n    this.miscUOM = '';\r\n    this.miscQuantity = '';\r\n  }\r\n\r\n  selectedOrganization: any\r\n\r\n  getOrganizationDetails() {\r\n    this.selectedOrganization = this.transactionForm.controls.Organization.value.OrganizationName\r\n  }\r\n\r\n  getViewselectedAssetNumberDetails() {\r\n    if (this.selectedAssetNumber != null) {\r\n      this.miscItem = this.selectedAssetNumber.ItemDesc;\r\n      this.miscUOM = this.selectedAssetNumber.UnitOfMeasure;\r\n      this.miscQuantity = this.selectedAssetNumber.AssertQuantity;\r\n    }\r\n    else {\r\n      this.miscItem = '';\r\n      this.miscUOM = '';\r\n      this.miscQuantity = '';\r\n    }\r\n\r\n  }\r\n\r\n  getCreateselectedAssetNumberDetails() {\r\n    if (this.selectedAssetNumber != null) {\r\n      this.miscItem = this.selectedAssetNumber.ITEM_DESC;\r\n      this.miscUOM = this.selectedAssetNumber.PRIMARY_UOM_CODEA;\r\n      this.miscQuantity = this.selectedAssetNumber.CURRENT_UNITS;\r\n    }\r\n    else {\r\n      this.miscItem = '';\r\n      this.miscUOM = '';\r\n      this.miscQuantity = '';\r\n    }\r\n  }\r\n\r\n  getLocation(TYPE: any) {\r\n    this.rest.getAll(this.global.getapiendpoint() + \"transaction/GetAllLocation/\" + TYPE).subscribe((data: any) => {\r\n      this.ToLocationIds = data.Data;\r\n      this.ToLocationIds.map((i:any) => { i.LocationNameCode = i.LocationName + ' (' + i.LocationCode + ')'; return i; });\r\n    });\r\n  }\r\n\r\n  pushAPI(){\r\n    this.spinner.show();\r\n    var bodyParams2 = {\r\n      Id: this.viewAssetData.Id,\r\n      StatusId: 2,\r\n      ModifiedBy: this.userId,\r\n      AssetRequestBody:this.viewAssetData \r\n    }\r\n\r\n    this.rest.postParams(this.global.getapiendpoint() + \"transaction/ApproveRejectAsset\", bodyParams2).subscribe((data: any) => {\r\n      this.spinner.hide();\r\n      this.openSnackBarSuccess('Asset Pushed Successfully');\r\n      this.openListPage();\r\n    });\r\n  }\r\n\r\n  getDestinationSubInventoryCode(){\r\n    if(this.selectedType.length !=0){\r\n      let typeName = this.selectedType.name;\r\n        if(typeName == 'SRN'){\r\n          if(this.DesORGCode?.value != null){\r\n            let DescriptionValue = 'Stores - ' + this.DesORGCode?.value.OrganizationName +' - SRN';\r\n            let OrganizationIdValue = this.DesORGCode?.value.OrganizationId;\r\n            var bodyParams = {\r\n              Description: DescriptionValue,\r\n              OrganizationId: OrganizationIdValue\r\n            }\r\n        \r\n            this.rest.postParams(this.global.getapiendpoint() + \"transaction/GetSubInventoryDetails\", bodyParams).subscribe((data: any) => {\r\n              if(data.success == true){\r\n                this.srnSubinventoryDescription = data.Data[0].Description;\r\n                this.srnSecondaryInventoryName = data.Data[0].SecondaryInventoryName;\r\n                this.DesSubInventoryCode?.setValue(this.srnSubinventoryDescription);\r\n                this.isDesSubCodeDisabled = true;\r\n                console.log(\"DesSubInventoryCode\",this.transactionForm.get('DesSubInventoryCode')?.value)\r\n              }\r\n              else{\r\n                this.DesSubInventoryCode?.setValue('');\r\n                this.isDesSubCodeDisabled = true;\r\n                console.log(\"DesSubInventoryCode\",this.transactionForm.get('DesSubInventoryCode')?.value)\r\n              }\r\n            });\r\n          }\r\n        }  \r\n    }\r\n  }\r\n\r\n  getAssetDistinctLocation(){\r\n    this.rest.getAll(this.global.getapiendpoint() + \"transaction/GetDistinctAssetLocation\").subscribe((data: any) => {\r\n      this.distinctAssetLocation = data.Data;\r\n      this.selectedAssets = [];\r\n      this.Assets = [];\r\n      this.assetDetails = [];\r\n      this.selectedAssetNumberDetails = [];\r\n      this.selectedAssetNumber = [];\r\n    });\r\n  }\r\n\r\n  getAssetbasedOnLocation(){\r\n    this.selectedAssets = [];\r\n    this.Assets = [];\r\n    this.assetDetails = [];\r\n    this.selectedAssetNumberDetails = [];\r\n    this.selectedAssetNumber = [];\r\n    if(this.selectedAssetLocationName != null){\r\n      this.getAllAsset(this.selectedAssetLocationName.Asset_Location);\r\n    }\r\n  }\r\n\r\n}\r\n","<ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#fff\" type = \"ball-clip-rotate\" [fullScreen] = \"true\">\r\n    <p style=\"color: white\" > Loading... </p>\r\n</ngx-spinner>\r\n<div *ngIf=\"isViewList\">\r\n\r\n    <mat-card class=\"\" style=\"margin: 15px;\">\r\n\r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutGap=\"20px\"\r\n        fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n            <h4 fxFlex class=\"header\">Asset Details</h4>\r\n        </div>\r\n\r\n        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n            fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n            <mat-form-field fxFlex=\"0 0 calc(85%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\"\r\n                appearance=\"standard\">\r\n                <mat-label>Filter</mat-label>\r\n                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search\" #input>\r\n            </mat-form-field>\r\n\r\n            <div fxFlex=\"0 0 calc(15%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" fxLayoutAlign=\"end center\">\r\n                <button *ngIf=\"userRole == 1\" mat-flat-button color=\"primary\" class=\"custom-btn\" (click)=\"openCreateForm()\">\r\n                    <mat-icon mat-list-icon>add_circle</mat-icon> &nbsp;Create\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\" \" fxLayout.xl=\"column wrap\" fxLayout.lg=\"column\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n                    fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\" class=\"table-responsive\">\r\n\r\n            <div class=\"mat-elevation-z0\">\r\n                <table mat-table fxFlex [dataSource]=\"dataSource\" matSort class=\"mat-table\">\r\n\r\n                    <!-- <ng-container matColumnDef=\"Id\">\r\n                        <th mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> ID </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\"> {{row.Id}} </td>\r\n                    </ng-container> -->\r\n\r\n                    <ng-container matColumnDef=\"OrderNumber\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Order Number </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                             <span *ngIf=\"row.Status == 'Approved' \">{{row.OrderNumber}} </span>\r\n                             <span *ngIf=\"row.Status != 'Approved' \">NA</span>\r\n                            </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"AssetNumber\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Asset Number </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                                <span matTooltip=\"{{row.AssetNumber}}\" matTooltipPosition=\"above\">\r\n                                    <!-- {{row.AssetDetails[0].AssetNumber}}  -->\r\n                                    {{ (row.AssetNumber.length>6)? (row.AssetNumber | slice:0:6)+'..':(row.AssetNumber) }}\r\n\r\n                                </span> \r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"AssetDes\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Asset Description </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                            <span matTooltip=\"{{row.AssetDesc}}\" matTooltipPosition=\"above\">\r\n\r\n                            {{ (row.AssetDesc.length>6)? (row.AssetDesc | slice:0:6)+'..':(row.AssetDesc) }}\r\n                        </span>\r\n                                 \r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Cost\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> NBV </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                            <span matTooltip=\"{{row.NBV}}\" matTooltipPosition=\"above\">\r\n                                <!-- {{row.AssetDetails[0].Cost}} -->\r\n                                {{ (row.NBV.length>6)? (row.NBV | slice:0:6)+'..':(row.NBV) }}\r\n\r\n                            </span>\r\n                            <!-- <span *ngFor = \"let x of row.AssetDetails; let isLast=last\">\r\n                                {{x.Cost}}{{isLast ? '' : ' , '}}\r\n                            </span> -->\r\n                         </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"ItemNumber\">\r\n                        <th mat-header-cell class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Item Number </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                            <span matTooltip=\"{{row.Item}}\" matTooltipPosition=\"above\">\r\n                                <!-- {{row.AssetDetails[0].Item}}  -->\r\n                                {{ (row.Item.length>6)? (row.Item | slice:0:6)+'..':(row.Item) }}\r\n\r\n                            </span>\r\n                            <!-- <span *ngFor = \"let x of row.AssetDetails; let isLast=last\">\r\n                                {{x.Item}}{{isLast ? '' : ' , '}}\r\n                            </span> -->\r\n                             <!-- {{row.Item}}  -->\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"ItemDes\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Item Description </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                            <span matTooltip=\"{{row.ItemDesc}}\" matTooltipPosition=\"above\">\r\n\r\n                            {{ (row.ItemDesc.length>6)? (row.ItemDesc | slice:0:6)+'..':(row.ItemDesc) }}\r\n                        </span>\r\n                            \r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"SubInventoryCode\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Sub Inventory Code </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\"> {{row.AssetType}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Location\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Asset Location </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                            <span matTooltip=\"{{row.Location}}\" matTooltipPosition=\"above\">\r\n                                <!-- {{row.AssetDetails[0].Location}}  -->\r\n                                {{ (row.Location.length>6)? (row.Location | slice:0:6)+'..':(row.Location) }}\r\n                            </span>\r\n                            <!-- <span *ngFor = \"let x of row.AssetDetails; let isLast=last\">\r\n                                {{x.Location}}{{isLast ? '' : ' , '}}\r\n                            </span> -->\r\n                             <!-- {{row.Location}}  -->\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"TransactionDate\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Transaction Date </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\"> {{row.TransactionDate}} </td>\r\n                    </ng-container>\r\n\r\n                    <!-- <ng-container matColumnDef=\"ItemNumber\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Item Number </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\"> {{row.Item}} </td>\r\n                    </ng-container> -->\r\n\r\n                    <ng-container matColumnDef=\"Status\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Status </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\">\r\n                             {{row.Status}} \r\n                            <!-- <span *ngIf=\"row.StatusId == 0\">Pending For Approval</span>\r\n                            <span *ngIf=\"row.StatusId == 1\">Approved</span>\r\n                            <span *ngIf=\"row.StatusId == -1\">Rejected</span>  \r\n                            <span *ngIf=\"row.StatusId == 2\">Pending For Commit</span>   -->\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Action\">\r\n                        <th mat-header-cell  class=\"mat-header-cell\" *matHeaderCellDef mat-sort-header> Action </th>\r\n                        <td mat-cell class=\"mat-cell\" *matCellDef=\"let row\"> <mat-icon (click)=\"viewAssetDetails(row.Id,row.StatusId)\">info</mat-icon> </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                    <!-- Row shown when there is no matching data. -->\r\n                    <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n                    </tr>\r\n                </table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\r\n\r\n    </mat-card>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"isEditable\" class=\"container\" fxFlexFill fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n    fxLayoutGap=\"15px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n    <div class=\"app-wizard\" fxFlex=\"0 0 calc(70% - 10px)\" fxFlexFill>\r\n        <mat-card class=\"wizard-card\">\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n                fxLayoutGap=\"0\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                <mat-stepper class=\"example-stepper custom-bg\" [orientation]=\"(stepperOrientation | async)!\" fxFlex>\r\n                    <!-- Requisition here -->\r\n                    <mat-step label=\"Assets\" state=\"settings_suggest\">\r\n\r\n                        <br>\r\n                        <h4 class=\"header\">Asset Details</h4>\r\n                        <br>\r\n\r\n\r\n\r\n                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                            <!-- <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"  appearance=\"fill\">\r\n                                    <mat-label>CAM <sup>*</sup></mat-label>\r\n                                    <ng-select ngSelectMat [(ngModel)]=\"blank\" placeholder=\" \" bindLabel=\"name\"></ng-select>\r\n                                </mat-form-field>  -->\r\n\r\n                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                appearance=\"fill\">\r\n                                <mat-label>Type <sup>*</sup></mat-label>\r\n                                <ng-select ngSelectMat [(ngModel)]=\"selectedType\" (change)=\"getType()\" [items]=\"Type\"\r\n                                    placeholder=\" \" bindLabel=\"name\"></ng-select>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                                <mat-label>From Location <sup>*</sup></mat-label>\r\n                                <ng-select ngSelectMat [(ngModel)]=\"selectedAssetLocationName\" (change)=\"getAssetbasedOnLocation()\" \r\n                                    [items]=\"distinctAssetLocation\"\r\n                                    placeholder=\" \" bindLabel=\"Asset_Location\"></ng-select>\r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n\r\n                        <!-- <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                                <mat-label>Location <sup>*</sup></mat-label>\r\n                                <ng-select ngSelectMat [(ngModel)]=\"selectedAssetLocationName\" (change)=\"getAssetbasedOnLocation()\" \r\n                                    [items]=\"distinctAssetLocation\"\r\n                                    placeholder=\" \" bindLabel=\"Asset_Location\"></ng-select>\r\n                            </mat-form-field>\r\n\r\n                        </div> -->\r\n\r\n                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                            <!-- <mat-form-field fxFlex appearance=\"fill\">\r\n                                <mat-label>Asset number <sup>*</sup></mat-label>\r\n                                <ng-select ngSelectMat (change)=\"getAssetDetails()\"\r\n                                    [(ngModel)]=\"selectedAssets\" [items]=\"Assets\" placeholder=\" \"\r\n                                    bindLabel=\"ASSET_NUMBER\"></ng-select>\r\n                            </mat-form-field> -->\r\n\r\n                            <mat-form-field fxFlex appearance=\"fill\">\r\n                                <mat-label>Asset number <sup>*</sup></mat-label>\r\n                                <ng-select ngSelectMat [multiple]=\"true\" (change)=\"getAssetDetails()\"\r\n                                    [(ngModel)]=\"selectedAssets\" [items]=\"Assets\" placeholder=\" \"\r\n                                    bindLabel=\"AssetDisplay\"></ng-select>\r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n                        <form #transactionform=\"ngForm\" autocomplete=\"off\" [formGroup]=\"transactionForm\">\r\n                            <!-- <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Cost</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"Cost\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>LTD DEP</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"LTD_DEP\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>NBV</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"NBV\">\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>ASSET QUANTITY</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"AssertQuantity\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Item</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"Item\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Unit of Measure</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"UnitOfMeasure\">\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 100%\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>LOCATION</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"Location\">\r\n                                </mat-form-field>\r\n\r\n                            </div> -->\r\n                            \r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\" class=\"datepicker\">\r\n                                    <mat-label>Transaction Date <sup>*</sup></mat-label>\r\n                                    <input matInput [matDatepicker]=\"dob\" formControlName=\"TransactionDate\" \r\n                                        [min]=\"minDate\" [max]=\"maxDate\" readonly>\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"dob\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #dob></mat-datepicker>\r\n\r\n                                    <mat-error *ngIf=\"TransactionDate?.hasError('required')\">\r\n                                        Transaction Date is <strong>required</strong>\r\n                                    </mat-error>\r\n\r\n                                    <mat-error *ngIf=\"TransactionDate?.hasError('matDatepickerMax') && !TransactionDate?.hasError('required')\">\r\n                                        Please Enter Valid Date\r\n                                    </mat-error>\r\n                                    \r\n                                    <mat-error *ngIf=\"TransactionDate?.hasError('matDatepickerMin') && !TransactionDate?.hasError('required')\">\r\n                                       Please Enter Valid Date\r\n                                    </mat-error>\r\n\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Interface Batch Number <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly formControlName=\"InterfaceBatchNumber\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Destination Type Code<sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" formControlName=\"DesTypeCode\" readonly>\r\n                                    <mat-error *ngIf=\"DesTypeCode?.hasError('required')\">\r\n                                        Destination Type Code is <strong>required</strong>\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                     appearance=\"fill\">\r\n                                    <mat-label>From Organization <sup>*</sup></mat-label>\r\n                                    <ng-select ngSelectMat (change)=\"getOrganizationDetails()\" formControlName=\"Organization\" [items]=\"OrganizationIds\" \r\n                                        placeholder=\" \" bindLabel=\"OrganizationName\"></ng-select>\r\n                                        <mat-error *ngIf=\"Organization?.hasError('required')\">\r\n                                            From Organization is <strong>required</strong>\r\n                                        </mat-error>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <!-- <mat-label>Destination Org Code <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" formControlName=\"DesORGCode\">\r\n                                    <mat-error *ngIf=\"DesORGCode?.hasError('required')\">\r\n                                        Destination Org Code is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                    \r\n                                    <mat-label>To Organization <sup>*</sup></mat-label>\r\n                                    <ng-select ngSelectMat formControlName=\"DesORGCode\" [items]=\"DesORGCodeIds\" \r\n                                        placeholder=\" \" bindLabel=\"OrganizationName\" (change)=\"getDestinationSubInventoryCode()\"></ng-select>\r\n                                        <mat-error *ngIf=\"DesORGCode?.hasError('required')\">\r\n                                            Destination Org Code is <strong>required</strong>\r\n                                        </mat-error>\r\n\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>To Location <sup>*</sup></mat-label>\r\n                                    <ng-select ngSelectMat formControlName=\"ToLocation\" [items]=\"ToLocationIds\"\r\n                                        placeholder=\" \" bindLabel=\"LocationNameCode\"></ng-select>\r\n                                        <mat-error *ngIf=\"ToLocation?.hasError('required')\">\r\n                                            To Location is <strong>required</strong>\r\n                                        </mat-error>\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Locator <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" formControlName=\"Locator\">\r\n                                    <mat-error *ngIf=\"Locator?.hasError('required')\">\r\n                                        Locator is <strong>required</strong>\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Destination Subinventory Code<sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" formControlName=\"DesSubInventoryCode\" [readonly]=\"isDesSubCodeDisabled\">\r\n                                    <mat-error *ngIf=\"DesSubInventoryCode?.hasError('required')\">\r\n                                        Destination Subinventory Code is <strong>required</strong>\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>COMMENT \r\n                                        <!-- <sup>*</sup> -->\r\n                                    </mat-label>\r\n                                    <input matInput placeholder=\" \" formControlName=\"DFFS\">\r\n                                    <!-- <mat-error *ngIf=\"DFFS?.hasError('required')\">\r\n                                        DFFs is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div *ngFor=\"let x of assetDetails;let i = index\">\r\n                                <br>\r\n                                <mat-accordion expanded>\r\n                                    <mat-expansion-panel class=\"mat-elevation-z2\" (opened)=\"onAssetCreateAccordionOpen(i)\">\r\n                                        <mat-expansion-panel-header>\r\n                                            <mat-panel-title>\r\n                                                Asset Number - {{x.ASSET_NUMBER}} ( {{x.ASSET_DESC}} )\r\n                                            </mat-panel-title>\r\n                                        </mat-expansion-panel-header>\r\n                                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n            \r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Cost</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.COST}}\">\r\n            \r\n                                                <!-- <mat-icon matSuffix>currency_rupee</mat-icon> -->\r\n                                            </mat-form-field>\r\n            \r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>LTD DEP</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.DEPRN_RESERVE}}\">\r\n                                                <!-- <mat-icon matSuffix>percent</mat-icon> -->\r\n                                            </mat-form-field>\r\n            \r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>NBV</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.NBV}}\">\r\n                                                <!-- <mat-icon matSuffix>soap</mat-icon> -->\r\n                                            </mat-form-field>\r\n            \r\n                                            </div>\r\n            \r\n                                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n            \r\n                                                <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                    appearance=\"fill\">\r\n                                                    <mat-label>ASSET QUANTITY</mat-label>\r\n                                                    <input matInput placeholder=\" \" readonly value=\"{{x.CURRENT_UNITS}}\">\r\n                                                </mat-form-field>\r\n            \r\n                                                <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                    appearance=\"fill\">\r\n                                                    <mat-label>Item</mat-label>\r\n                                                    <input matInput placeholder=\" \" readonly value=\"{{x.ITEM_NUMBER}}\">\r\n                                                </mat-form-field>\r\n            \r\n                                                <mat-form-field fxFlex=\"0 0 calc(33.33%-15px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                    appearance=\"fill\">\r\n                                                    <mat-label>Unit of Measure</mat-label>\r\n                                                    <input matInput placeholder=\" \" readonly value=\"{{x.PRIMARY_UOM_CODEA}}\">\r\n                                                </mat-form-field>\r\n            \r\n                                            </div>\r\n            \r\n                                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n            \r\n                                            <mat-form-field fxFlex=\"0 0 100%\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>LOCATION</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.LOCATION}}\">\r\n                                            </mat-form-field>\r\n            \r\n                                            </div>   \r\n                                    </mat-expansion-panel>\r\n                                </mat-accordion>\r\n                            </div>\r\n\r\n                             <br>\r\n\r\n                            <!-- prev next buttons -->\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayoutGap=\"20px\"\r\n                                fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"start center\">\r\n\r\n                                </div>\r\n\r\n                                <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"end center\">\r\n                                    <!-- <button mat-flat-button color=\"primary\" matStepperNext>Next\r\n                                    <mat-icon mat-list-icon>navigate_next</mat-icon>\r\n                                </button> -->\r\n                                <button mat-flat-button color=\"primary\" (click)=\"openListPage()\">\r\n                                    <mat-icon mat-list-icon>navigate_beforet</mat-icon>Back\r\n                                </button>\r\n                                    <button mat-flat-button color=\"primary\" (click)=\"SaveDetails()\" style=\"margin-left: 10px;\">\r\n                                        <mat-icon mat-list-icon>save</mat-icon>Save\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <!-- prev next buttons ends here -->\r\n\r\n                        </form>\r\n\r\n                    </mat-step>\r\n\r\n                    <!-- <mat-step label=\"Trasnfer Move Order\" state=\"arrow_right_alt\">\r\n\r\n                        sdasd\r\n                        <br>\r\n                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\"\r\n                            fxLayoutGap.xs=\"0\">\r\n\r\n                            <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"start center\">\r\n                                <button mat-stroked-button color=\"primary\" matStepperPrevious>\r\n                                    <mat-icon mat-list-icon>navigate_beforet</mat-icon>Back\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"end center\">\r\n                                <button mat-flat-button color=\"primary\">\r\n                                    <mat-icon mat-list-icon>save</mat-icon>Save\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </mat-step> -->\r\n                </mat-stepper>\r\n\r\n            </div>\r\n\r\n\r\n        </mat-card>\r\n    </div>\r\n\r\n    <div class=\"app-misc-receipt\" fxFlex=\"0 0 calc(30% - 10px)\" fxFlexFill>\r\n\r\n        <mat-card class=\"misc-card\">\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <h4 fxFlex class=\"header\">Misc. Receipt</h4>\r\n                <div fxFlex fxLayoutAlign=\"end end\" class=\"order-number\">Order #{{ReceiptNumber?.value}}</div>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <div class=\"sub-header\">Asset Number</div>\r\n                <mat-form-field fxFlex=\"0 0 calc(50%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                    <ng-select ngSelectMat [(ngModel)]=\"selectedAssetNumber\" (change)=\"getCreateselectedAssetNumberDetails()\" [items]=\"selectedAssetNumberDetails\"\r\n                                    placeholder=\" \" bindLabel=\"ASSET_NUMBER\"></ng-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <div class=\"sub-header\">Basic Information</div>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <mat-list fxFlex role=\"list\">\r\n                    <!-- <form #transactionform=\"ngForm\" autocomplete=\"off\" [formGroup]=\"transactionForm\"> -->\r\n                        <mat-list-item role=\"listitem\">ORGANIZATION NAME <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{selectedOrganization}}</div>\r\n                            <!-- <div style=\"font-size: 11px;margin-top: 9px;\" fxFlex fxLayoutAlign=\"end end\" class=\"value\"> \r\n                                <mat-form-field fxFlex appearance=\"fill\">\r\n                                    <ng-select ngSelectMat formControlName=\"Organization\" [items]=\"OrganizationIds\" placeholder=\" \"\r\n                                        bindLabel=\"OrganizationName\"></ng-select>\r\n                                        <mat-error *ngIf=\"Organization?.hasError('required')\">\r\n                                            Organization is <strong>required</strong>\r\n                                        </mat-error>\r\n                                </mat-form-field>\r\n                            </div>-->\r\n                        </mat-list-item>\r\n                    <!-- </form> -->\r\n                    \r\n                    <mat-list-item role=\"listitem\">ITEM <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                        <span matTooltip=\"{{miscItem}}\" matTooltipPosition=\"above\">\r\n                            {{ (miscItem.length>10) ? (miscItem | slice:0:10) + '..' : (miscItem) }}\r\n                        </span>\r\n                            <!-- {{miscItem}} -->\r\n                        </div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">SUB INVENTORY <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{selectedTypeName}}</div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">LOCATOR <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{Locator?.value}}</div>\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <div class=\"sub-header\">Transaction</div>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <mat-list fxFlex role=\"list\">\r\n                    <mat-list-item role=\"listitem\">TYPE <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                        {{selectedTypeName}}\r\n                    </div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">UNIT OF MEASURE <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{miscUOM}}</div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">QUANTITY <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{miscQuantity}}</div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">DATE <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{TransactionDate?.value | date: 'dd/MM/yyyy'}}</div>\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </div>\r\n\r\n        </mat-card>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"isViewable\" class=\"container\" fxFlexFill fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n    fxLayoutGap=\"15px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n    <div class=\"app-wizard\" fxFlex=\"0 0 calc(70% - 10px)\" fxFlexFill>\r\n        <mat-card class=\"wizard-card\">\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\r\n                fxLayoutGap=\"0\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                <mat-stepper class=\"example-stepper custom-bg\" [orientation]=\"(stepperOrientation | async)!\" fxFlex>\r\n                    <!-- Requisition here -->\r\n                    <mat-step label=\"Assets\" state=\"settings_suggest\">\r\n\r\n                        <br>\r\n                        <h4 class=\"header\">Asset Details</h4>\r\n                        <br>\r\n\r\n\r\n\r\n                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                appearance=\"fill\">\r\n                                <mat-label>Type <sup>*</sup></mat-label>\r\n                                <!-- <ng-select ngSelectMat [(ngModel)]=\"selectedType\" (change)=\"getType()\" [items]=\"Type\"\r\n                                    placeholder=\" \" bindLabel=\"name\"></ng-select> -->\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.AssetType}}\">\r\n                            </mat-form-field>\r\n\r\n                        </div>\r\n\r\n                        <!-- <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                            <mat-form-field fxFlex appearance=\"fill\">\r\n                                <mat-label>Asset number <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.AssetNumber}}\">\r\n                            </mat-form-field>\r\n\r\n                        </div> -->\r\n                        <!-- <form #transactionform=\"ngForm\" autocomplete=\"off\" [formGroup]=\"transactionForm\"> -->\r\n                        <div *ngFor=\"let x of viewAssetNumberDetailsList;let i = index\">\r\n                            <br>\r\n                                <mat-accordion expanded>\r\n                                    <mat-expansion-panel class=\"mat-elevation-z2\" (opened)=\"onAssetViewAccordionOpen(i)\">\r\n                                        <mat-expansion-panel-header>\r\n                                            <mat-panel-title>\r\n                                                 Asset Number - {{x.AssetNumber}} ( {{x.AssetDesc}} )\r\n                                            </mat-panel-title>\r\n                                        </mat-expansion-panel-header>\r\n                                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Cost</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.Cost}}\">\r\n                                                <!-- <mat-icon matSuffix>currency_rupee</mat-icon> -->\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>LTD DEP</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.LTD_DEP}}\">\r\n                                                <!-- <mat-icon matSuffix>percent</mat-icon> -->\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>NBV</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.NBV}}\">\r\n                                                <!-- <mat-icon matSuffix>soap</mat-icon> -->\r\n                                            </mat-form-field>\r\n\r\n                                        </div>\r\n\r\n                                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>ASSET QUANTITY</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.AssertQuantity}}\">\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Item</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.Item}}\">\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Unit of Measure</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.UnitOfMeasure}}\">\r\n                                            </mat-form-field>\r\n\r\n                                        </div>\r\n\r\n                                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                            fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>LOCATION</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.Location}}\">\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Transaction Cost Identifier</mat-label>\r\n                                                <input *ngIf=\"x.Seq3 == null\" matInput placeholder=\" \" readonly value=\"NA\">\r\n                                                <input *ngIf=\"x.Seq3 != null\" matInput placeholder=\" \" readonly value=\"{{x.Seq3}}\">\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Supply Order Reference Line Number</mat-label>\r\n                                                <input *ngIf=\"x.Seq6 == null\" matInput placeholder=\" \" readonly value=\"NA\">   \r\n                                                <input *ngIf=\"x.Seq6 != null\" matInput placeholder=\" \" readonly value=\"{{x.Seq6}}\">   \r\n                                            </mat-form-field>\r\n\r\n                                        </div>\r\n\r\n                                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                        fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Misc Receipt Status</mat-label>\r\n                                        \r\n                                                <input *ngIf=\"x.miscResponseStatus == 201\" matInput placeholder=\" \" readonly value=\"YES\">\r\n                                                <input *ngIf=\"x.miscResponseStatus != 201\" matInput placeholder=\" \" readonly value=\"NO\">\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Transfer Move Order Status</mat-label>\r\n                                                <input *ngIf=\"x.transferResponseStatus == 201\" matInput placeholder=\" \" readonly value=\"YES\">\r\n                                                <input *ngIf=\"x.transferResponseStatus != 201\" matInput placeholder=\" \" readonly value=\"NO\">\r\n                                                \r\n                                                \r\n                                            </mat-form-field>\r\n\r\n                                        </div>\r\n                            \r\n                                        <!-- <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                        fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Transaction Cost Identifier</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.Seq3}}\">\r\n                                            </mat-form-field>\r\n\r\n                                            <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                                appearance=\"fill\">\r\n                                                <mat-label>Supply Order Reference Line Number</mat-label>\r\n                                                <input matInput placeholder=\" \" readonly value=\"{{x.Seq6}}\">   \r\n                                            </mat-form-field>\r\n\r\n                                        </div> -->\r\n\r\n                                    </mat-expansion-panel>\r\n                                </mat-accordion>\r\n                        </div>\r\n                            \r\n                        <br>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\" class=\"datepicker\">\r\n                                    <mat-label>Transaction Date <sup>*</sup></mat-label>\r\n                                    <input matInput value=\"{{viewAssetData.TransactionDate | date:'dd/MM/yyyy'}}\" readonly>\r\n                                    <!-- <mat-datepicker-toggle matSuffix [for]=\"dob\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #dob></mat-datepicker> -->\r\n\r\n                                    <!-- <mat-error *ngIf=\"TransactionDate?.hasError('required')\">\r\n                                        Transaction Date is <strong>required</strong>\r\n                                    </mat-error>\r\n\r\n                                    <mat-error *ngIf=\"TransactionDate?.hasError('matDatepickerMax') && !TransactionDate?.hasError('required')\">\r\n                                        Please Enter Valid Date\r\n                                    </mat-error>\r\n                                    \r\n                                    <mat-error *ngIf=\"TransactionDate?.hasError('matDatepickerMin') && !TransactionDate?.hasError('required')\">\r\n                                       Please Enter Valid Date\r\n                                    </mat-error> -->\r\n\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Interface Batch Number <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.InterfaceBatchNumber}}\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Destination Type Code<sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.DesTypeCode}}\">\r\n                                    <!-- <mat-error *ngIf=\"DesTypeCode?.hasError('required')\">\r\n                                        Destination Type Code is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>From Organization <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetOrganizationDetails.OrganizationName}}\">\r\n                                    <!-- <mat-error *ngIf=\"DesORGCode?.hasError('required')\">\r\n                                        Destination Org Code is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>To Organization <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.DesORGCode}}\">\r\n                                    <!-- <mat-error *ngIf=\"DesORGCode?.hasError('required')\">\r\n                                        Destination Org Code is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>To Location <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetLocationDetails.LocationName}} ( {{viewAssetLocationDetails.LocationCode}} )\">\r\n                                    <!-- <mat-error *ngIf=\"DFFS?.hasError('required')\">\r\n                                    DFFs is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Locator <sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.Locator}}\">\r\n                                    <!-- <mat-error *ngIf=\"Locator?.hasError('required')\">\r\n                                        Locator is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                        appearance=\"fill\">\r\n                                    <mat-label>Destination Subinventory Code<sup>*</sup></mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.DesSubInventoryCode}}\">\r\n                                        <!-- <mat-error *ngIf=\"DesSubInventoryCode?.hasError('required')\">\r\n                                            Destination Subinventory Code is <strong>required</strong>\r\n                                        </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(33.33%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>COMMENT \r\n                                        <!-- <sup>*</sup> -->\r\n                                    </mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.DFFS}}\">\r\n                                    <!-- <mat-error *ngIf=\"DFFS?.hasError('required')\">\r\n                                        DFFs is <strong>required</strong>\r\n                                    </mat-error> -->\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <div *ngIf=\"assetStatus == 0 && userRole == 2\">\r\n                                <form #approverform=\"ngForm\" autocomplete=\"off\" [formGroup]=\"approverForm\" class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                    fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                                    <mat-form-field fxFlex=\"0 0 calc(100%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Remarks</mat-label>\r\n                                    <input matInput placeholder=\" \" formControlName=\"Remarks\">\r\n                                    <mat-error *ngIf=\"Remarks?.hasError('required')\">\r\n                                        Remarks is <strong>required</strong>\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div *ngIf=\"assetStatus == -1 || assetStatus == 1\" class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"column\"\r\n                                fxLayout.xs=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <mat-form-field fxFlex=\"0 0 calc(66.66%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\"\r\n                                    appearance=\"fill\">\r\n                                    <mat-label>Remarks</mat-label>\r\n                                    <input matInput placeholder=\" \" readonly value=\"{{viewAssetData.Remarks}}\">\r\n                                </mat-form-field>\r\n\r\n                            </div>\r\n\r\n                            <!-- prev next buttons -->\r\n                            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayoutGap=\"20px\"\r\n                                fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n\r\n                                <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"start center\">\r\n\r\n                                </div>\r\n\r\n                                <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"end center\">\r\n                                    <!-- <button mat-flat-button color=\"primary\" matStepperNext>Next\r\n                                    <mat-icon mat-list-icon>navigate_next</mat-icon>\r\n                                </button> -->\r\n\r\n                                    <button *ngIf=\"assetStatus == 2 && userRole == 1\" mat-flat-button color=\"primary\" (click)=\"pushAPI()\" style=\"margin-left: 10px;\">\r\n                                        <!-- <mat-icon mat-list-icon>navigate_beforet</mat-icon> -->\r\n                                        Push\r\n                                    </button>\r\n\r\n                                    <button mat-flat-button color=\"primary\" (click)=\"openListPage()\" style=\"margin-left: 10px;\">\r\n                                        <mat-icon mat-list-icon>navigate_beforet</mat-icon>Back\r\n                                    </button>\r\n                                    \r\n                                    <button *ngIf=\"assetStatus == 0 && userRole == 2\" mat-flat-button color=\"primary\"\r\n                                     (click)=\"ApproveRejectAsset(1)\" style=\"margin-left: 10px;\" [disabled]=\"isApproveButtonClicked == true\">\r\n                                        <mat-icon>done_all</mat-icon>Approve\r\n                                    </button>\r\n\r\n                                    <button *ngIf=\"assetStatus == 0 && userRole == 2\" mat-flat-button color=\"primary\"\r\n                                     (click)=\"ApproveRejectAsset(-1)\" style=\"margin-left: 10px;\" [disabled]=\"isApproveButtonClicked == true\">\r\n                                        <mat-icon mat-list-icon>clear</mat-icon>Reject\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <!-- prev next buttons ends here -->\r\n\r\n                        <!-- </form> -->\r\n\r\n                    </mat-step>\r\n\r\n                    <!-- <mat-step label=\"Trasnfer Move Order\" state=\"arrow_right_alt\">\r\n\r\n                        sdasd\r\n                        <br>\r\n                        <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\"\r\n                            fxLayoutGap.xs=\"0\">\r\n\r\n                            <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"start center\">\r\n                                <button mat-stroked-button color=\"primary\" matStepperPrevious>\r\n                                    <mat-icon mat-list-icon>navigate_beforet</mat-icon>Back\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"example-button-row\" fxFlex fxLayoutAlign=\"end center\">\r\n                                <button mat-flat-button color=\"primary\">\r\n                                    <mat-icon mat-list-icon>save</mat-icon>Save\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </mat-step> -->\r\n                </mat-stepper>\r\n\r\n            </div>\r\n\r\n\r\n        </mat-card>\r\n    </div>\r\n\r\n    <div class=\"app-misc-receipt\" fxFlex=\"0 0 calc(30% - 10px)\" fxFlexFill>\r\n\r\n        <mat-card class=\"misc-card\">\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <h4 fxFlex class=\"header\">Misc. Receipt</h4>\r\n                <div fxFlex fxLayoutAlign=\"end end\" class=\"order-number\">Order #{{viewAssetData.ReceiptNumber}}</div>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <div class=\"sub-header\">Asset Number</div>\r\n                <mat-form-field fxFlex=\"0 0 calc(50%-20px)\" fxFlex.sm=\"0 0 100%\" fxFlex.xs=\"0 0 100%\" appearance=\"fill\">\r\n                    <ng-select ngSelectMat [(ngModel)]=\"selectedAssetNumber\" (change)=\"getViewselectedAssetNumberDetails()\" [items]=\"selectedAssetNumberDetails\"\r\n                                    placeholder=\" \" bindLabel=\"AssetNumber\"></ng-select>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <div class=\"sub-header\">Basic Information</div>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <mat-list fxFlex role=\"list\">\r\n                    <mat-list-item role=\"listitem\">ORGANIZATION NAME \r\n                        <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{viewAssetOrganizationDetails.OrganizationName}}\r\n                        </div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">ITEM <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                        <span matTooltip=\"{{miscItem}}\" matTooltipPosition=\"above\">\r\n                            {{ (miscItem.length>10) ? (miscItem | slice:0:10) + '..' : (miscItem) }}\r\n                        </span>\r\n                            <!-- {{miscItem}} -->\r\n                        </div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">SUB INVENTORY <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{viewAssetData.AssetType}}</div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">LOCATOR <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{viewAssetData.Locator}}</div>\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <div class=\"sub-header\">Transaction</div>\r\n            </div>\r\n\r\n            <div class=\" \" fxLayout.xl=\"row wrap\" fxLayout.lg=\"row\" fxLayout.sm=\"row\" fxLayout.xs=\"row\"\r\n                fxLayoutGap=\"20px\" fxLayoutGap.sm=\"0\" fxLayoutGap.xs=\"0\">\r\n                <mat-list fxFlex role=\"list\">\r\n                    <mat-list-item role=\"listitem\">TYPE <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                        {{viewAssetData.AssetType}}\r\n                    </div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">UNIT OF MEASURE <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{miscUOM}}</div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">QUANTITY <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{miscQuantity}}</div>\r\n                    </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">DATE <div fxFlex fxLayoutAlign=\"end end\" class=\"value\">\r\n                            {{viewAssetData.TransactionDate | date: 'dd/MM/yyyy'}}</div>\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </div>\r\n\r\n        </mat-card>\r\n\r\n    </div>\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 6431,\n\t\"./af.js\": 6431,\n\t\"./ar\": 1286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 3160,\n\t\"./ar-ly.js\": 3160,\n\t\"./ar-ma\": 2551,\n\t\"./ar-ma.js\": 2551,\n\t\"./ar-sa\": 30,\n\t\"./ar-sa.js\": 30,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 1286,\n\t\"./az\": 5887,\n\t\"./az.js\": 5887,\n\t\"./be\": 4572,\n\t\"./be.js\": 4572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 3344,\n\t\"./bm.js\": 3344,\n\t\"./bn\": 8985,\n\t\"./bn-bd\": 3990,\n\t\"./bn-bd.js\": 3990,\n\t\"./bn.js\": 8985,\n\t\"./bo\": 4391,\n\t\"./bo.js\": 4391,\n\t\"./br\": 6728,\n\t\"./br.js\": 6728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 1043,\n\t\"./ca.js\": 1043,\n\t\"./cs\": 420,\n\t\"./cs.js\": 420,\n\t\"./cv\": 3513,\n\t\"./cv.js\": 3513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 7978,\n\t\"./da.js\": 7978,\n\t\"./de\": 6061,\n\t\"./de-at\": 5204,\n\t\"./de-at.js\": 5204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 6061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 5724,\n\t\"./en-au.js\": 5724,\n\t\"./en-ca\": 525,\n\t\"./en-ca.js\": 525,\n\t\"./en-gb\": 2847,\n\t\"./en-gb.js\": 2847,\n\t\"./en-ie\": 7216,\n\t\"./en-ie.js\": 7216,\n\t\"./en-il\": 9305,\n\t\"./en-il.js\": 9305,\n\t\"./en-in\": 3364,\n\t\"./en-in.js\": 3364,\n\t\"./en-nz\": 9130,\n\t\"./en-nz.js\": 9130,\n\t\"./en-sg\": 1161,\n\t\"./en-sg.js\": 1161,\n\t\"./eo\": 802,\n\t\"./eo.js\": 802,\n\t\"./es\": 328,\n\t\"./es-do\": 5551,\n\t\"./es-do.js\": 5551,\n\t\"./es-mx\": 5615,\n\t\"./es-mx.js\": 5615,\n\t\"./es-us\": 4790,\n\t\"./es-us.js\": 4790,\n\t\"./es.js\": 328,\n\t\"./et\": 6389,\n\t\"./et.js\": 6389,\n\t\"./eu\": 2961,\n\t\"./eu.js\": 2961,\n\t\"./fa\": 6151,\n\t\"./fa.js\": 6151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 8898,\n\t\"./fil.js\": 8898,\n\t\"./fo\": 7779,\n\t\"./fo.js\": 7779,\n\t\"./fr\": 8174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 8867,\n\t\"./fr-ch.js\": 8867,\n\t\"./fr.js\": 8174,\n\t\"./fy\": 452,\n\t\"./fy.js\": 452,\n\t\"./ga\": 5014,\n\t\"./ga.js\": 5014,\n\t\"./gd\": 4127,\n\t\"./gd.js\": 4127,\n\t\"./gl\": 2124,\n\t\"./gl.js\": 2124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 7953,\n\t\"./gom-latn.js\": 7953,\n\t\"./gu\": 6604,\n\t\"./gu.js\": 6604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 4235,\n\t\"./hi.js\": 4235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 7735,\n\t\"./hu.js\": 7735,\n\t\"./hy-am\": 402,\n\t\"./hy-am.js\": 402,\n\t\"./id\": 9187,\n\t\"./id.js\": 9187,\n\t\"./is\": 536,\n\t\"./is.js\": 536,\n\t\"./it\": 5007,\n\t\"./it-ch\": 4667,\n\t\"./it-ch.js\": 4667,\n\t\"./it.js\": 5007,\n\t\"./ja\": 2093,\n\t\"./ja.js\": 2093,\n\t\"./jv\": 59,\n\t\"./jv.js\": 59,\n\t\"./ka\": 6870,\n\t\"./ka.js\": 6870,\n\t\"./kk\": 880,\n\t\"./kk.js\": 880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 8785,\n\t\"./kn.js\": 8785,\n\t\"./ko\": 1721,\n\t\"./ko.js\": 1721,\n\t\"./ku\": 7851,\n\t\"./ku.js\": 7851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 346,\n\t\"./lb.js\": 346,\n\t\"./lo\": 3002,\n\t\"./lo.js\": 3002,\n\t\"./lt\": 4035,\n\t\"./lt.js\": 4035,\n\t\"./lv\": 6927,\n\t\"./lv.js\": 6927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 4173,\n\t\"./mi.js\": 4173,\n\t\"./mk\": 6320,\n\t\"./mk.js\": 6320,\n\t\"./ml\": 1705,\n\t\"./ml.js\": 1705,\n\t\"./mn\": 1062,\n\t\"./mn.js\": 1062,\n\t\"./mr\": 2805,\n\t\"./mr.js\": 2805,\n\t\"./ms\": 1341,\n\t\"./ms-my\": 9900,\n\t\"./ms-my.js\": 9900,\n\t\"./ms.js\": 1341,\n\t\"./mt\": 7734,\n\t\"./mt.js\": 7734,\n\t\"./my\": 9034,\n\t\"./my.js\": 9034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 6495,\n\t\"./ne.js\": 6495,\n\t\"./nl\": 673,\n\t\"./nl-be\": 6272,\n\t\"./nl-be.js\": 6272,\n\t\"./nl.js\": 673,\n\t\"./nn\": 2486,\n\t\"./nn.js\": 2486,\n\t\"./oc-lnc\": 6219,\n\t\"./oc-lnc.js\": 6219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 8444,\n\t\"./pl.js\": 8444,\n\t\"./pt\": 3170,\n\t\"./pt-br\": 6117,\n\t\"./pt-br.js\": 6117,\n\t\"./pt.js\": 3170,\n\t\"./ro\": 6587,\n\t\"./ro.js\": 6587,\n\t\"./ru\": 9264,\n\t\"./ru.js\": 9264,\n\t\"./sd\": 2135,\n\t\"./sd.js\": 2135,\n\t\"./se\": 5366,\n\t\"./se.js\": 5366,\n\t\"./si\": 3379,\n\t\"./si.js\": 3379,\n\t\"./sk\": 6143,\n\t\"./sk.js\": 6143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 1082,\n\t\"./sq.js\": 1082,\n\t\"./sr\": 1621,\n\t\"./sr-cyrl\": 8963,\n\t\"./sr-cyrl.js\": 8963,\n\t\"./sr.js\": 1621,\n\t\"./ss\": 1404,\n\t\"./ss.js\": 1404,\n\t\"./sv\": 5685,\n\t\"./sv.js\": 5685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 4106,\n\t\"./ta.js\": 4106,\n\t\"./te\": 9204,\n\t\"./te.js\": 9204,\n\t\"./tet\": 3692,\n\t\"./tet.js\": 3692,\n\t\"./tg\": 6361,\n\t\"./tg.js\": 6361,\n\t\"./th\": 1735,\n\t\"./th.js\": 1735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 6129,\n\t\"./tl-ph.js\": 6129,\n\t\"./tlh\": 3759,\n\t\"./tlh.js\": 3759,\n\t\"./tr\": 1644,\n\t\"./tr.js\": 1644,\n\t\"./tzl\": 875,\n\t\"./tzl.js\": 875,\n\t\"./tzm\": 6878,\n\t\"./tzm-latn\": 1041,\n\t\"./tzm-latn.js\": 1041,\n\t\"./tzm.js\": 6878,\n\t\"./ug-cn\": 4357,\n\t\"./ug-cn.js\": 4357,\n\t\"./uk\": 4810,\n\t\"./uk.js\": 4810,\n\t\"./ur\": 6794,\n\t\"./ur.js\": 6794,\n\t\"./uz\": 8966,\n\t\"./uz-latn\": 7959,\n\t\"./uz-latn.js\": 7959,\n\t\"./uz.js\": 8966,\n\t\"./vi\": 5386,\n\t\"./vi.js\": 5386,\n\t\"./x-pseudo\": 3156,\n\t\"./x-pseudo.js\": 3156,\n\t\"./yo\": 8028,\n\t\"./yo.js\": 8028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 9380,\n\t\"./zh-hk.js\": 9380,\n\t\"./zh-mo\": 874,\n\t\"./zh-mo.js\": 874,\n\t\"./zh-tw\": 6508,\n\t\"./zh-tw.js\": 6508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6700;","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}